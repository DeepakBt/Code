USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_SaveAlertList]    Script Date: 04/10/2018 15:02:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--set XACT_ABORT on  
--go  
  --Select * From AlertToCC Order BY 1desc

ALTER PROC [dbo].[USP_SaveAlertList]      
/************************************************************************                                                                                                                                                                                      

 '     Object Name  : USP_SaveAlert_List      
 '     Purpose   : For Saving list of alerts      
 '     Author   : Deepak      
 '     Creation Date : 18 Nov 2016      
 *************************************************************************      
 To test :-      
 Select * from Alerts where inst_id=10 order by alertid desc      
 EXEC USP_SaveAlertList_Test_Ignore 9,370,      
'<ArrayOfAlerts>      
<Alerts><AlertId>0</AlertId><AlertType>email</AlertType><ParentId>0</ParentId>      
<Subject>testing without distribution list</Subject><Body>testing without distribution list</Body><Attachment>false</Attachment>      
<From>bsgexponentia1@edelweissfin.com</From><To>Awadha.Taddy@edelweissfin.com;dhirajkumar.mishra@edelweissfin.com;Pravin.Rane@edelweissfin.com</To>      
<Processed>0</Processed><Status>0</Status><Corfirmation_ID /><ErrorMsg />
<CC>DemoCC@edelweissfin.com;Deepak.Bhagat@edelweissfin.com;Pravin.Rane@edelweissfin.com;Awadha.Taddy@edelweissfin.com</CC><BCC />
<TemplateId>0</TemplateId><CreatedBy>3405</CreatedBy>      
<OpenTags>      
<otag>      
<tags type="to"><receiver type="ContactDetailsId" ParentType="User">3401</receiver><receiver type="ContactDetailsId" ParentType="User">3406</receiver>      
</tags></otag></OpenTags><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath />      
<IsIncoming>false</IsIncoming><parenttype>ComposeBox</parenttype></Alerts>      

<Alerts><AlertId>0</AlertId><AlertType>email</AlertType><ParentId>0</ParentId>      
<Subject>testing without distribution list2</Subject><Body>testing without distribution list</Body><Attachment>false</Attachment>      
<From>bsgexponentia1@edelweissfin.com</From>
<To>Deepak.Bhagat@edelweissfin.com;Pravin.Rane@edelweissfin.com</To>      
<Processed>0</Processed><Status>0</Status><Corfirmation_ID /><ErrorMsg />
<CC>Pravin.Rane@edelweissfin.com;Awadha.Taddy@edelweissfin.com</CC><BCC /><TemplateId>0</TemplateId><CreatedBy>3405</CreatedBy>      
<OpenTags>      
<otag>      
<tags type="to"><receiver type="ContactDetailsId" ParentType="User">3401</receiver><receiver type="ContactDetailsId" ParentType="User">3406</receiver>      
</tags></otag></OpenTags><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath />      
<IsIncoming>false</IsIncoming><parenttype>ComposeBox</parenttype></Alerts>      

</ArrayOfAlerts>'      
      
 EXEC USP_SaveAlertList 9,655,      
'<ArrayOfAlerts>      
<Alerts><AlertId>0</AlertId><AlertType>email</AlertType><ParentId>3405</ParentId><Subject>Test Test mail</Subject>      
<Body>pravin rane</Body><Attachment>false</Attachment><From>bsgexponentia1@edelweissfin.com</From><To>9820955154</To><Processed>0</Processed><Status>0</Status><Corfirmation_ID /><ErrorMsg />      
<CC>Siddharth.Banavalikar@edelweissfin.com;dhirajkumar.mishra@edelweissfin.com</CC><BCC /><TemplateId>0</TemplateId>      
<CreatedBy>3405</CreatedBy><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath /><IsIncoming>false</IsIncoming>      
<parenttype>User</parenttype>  
  
</Alerts>      
<Alerts><AlertId>0</AlertId><AlertType>sms</AlertType><ParentId>53137</ParentId><Subject>Test Test mail</Subject><Body>Hi Pravin, Greetings from Edelweiss, we are in receipt of your request with reference 53137 and the same will be closed by 01 Nov 2017.<
/Body>      
<Attachment>false</Attachment><From>EDELVC</From><To>9920138509</To><Processed>0</Processed>      
<Status>0</Status><Corfirmation_ID /><ErrorMsg /><CC /><BCC />      
<TemplateId>0</TemplateId><CreatedBy>3405</CreatedBy><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath />      
<IsIncoming>false</IsIncoming><parenttype>Ticket</parenttype></Alerts>    
<Alerts><AlertId>0</AlertId><AlertType>sms</AlertType><ParentId>53137</ParentId><Subject>Test Test mail</Subject><Body>Greetings from Edelweiss, we are in receipt of your request with reference 53137 and the same will be closed by 01 Nov 2017.</Body>     
 
<Attachment>false</Attachment><From>EDELVC</From><To>8055984808</To><Processed>0</Processed>      
<Status>0</Status><Corfirmation_ID /><ErrorMsg /><CC /><BCC />      
<TemplateId>0</TemplateId><CreatedBy>3405</CreatedBy><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath />      
<IsIncoming>false</IsIncoming><parenttype>Ticket</parenttype></Alerts>    
</ArrayOfAlerts>'  
      
      
      
 EXEC USP_SaveAlertList 17,3405,      
'<ArrayOfAlerts>      
<Alerts><AlertId>0</AlertId><AlertType>email</AlertType><ParentId>0</ParentId>      
<Subject>testing without distribution list</Subject><Body>testing without distribution list</Body><Attachment>false</Attachment>      
<From>bsgexponentia1@edelweissfin.com</From><To>dhirajkumar.mishra@edelweissfin.com;Pravin.Rane@edelweissfin.com</To>      
<Processed>0</Processed><Status>0</Status><Corfirmation_ID /><ErrorMsg /><CC /><BCC /><TemplateId>0</TemplateId><CreatedBy>3405</CreatedBy>      
<OpenTags>      
<otag>      
<tags type="to"><receiver type="ContactDetailsId" ParentType="User">3401</receiver><receiver type="ContactDetailsId" ParentType="User">3406</receiver>      
</tags></otag></OpenTags><LstAttachments /><MailKey /><MailSentOn /><ConnId /><TotxtAll /><MailPath />      
<IsIncoming>false</IsIncoming><parenttype>ComposeBox</parenttype></Alerts>      
</ArrayOfAlerts>'      
      
      
      
      
      
************************************************************************/                 
@Inst_Id INT,@UserId int,@ParamXML xml      
AS      
BEGIN TRY      
 DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT ,@ParamErrorXML XML,@I INT      
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;      
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'ArrayOfAlerts/Alerts', 3)      
 WITH      
  (      
       AlertId VARCHAR(1000)      
      ,AlertType VARCHAR(1000)      
      ,parenttype VARCHAR(1000)      
      ,ParentId VARCHAR(1000)      
      ,Subject VARCHAR(1000)      
      ,Body TEXT      
      ,Attachment VARCHAR(1000)          
      ,[From] VARCHAR(1000)          
      ,[To] VARCHAR(max)          
      ,Processed VARCHAR(1000)          
      ,Status VARCHAR(1000)          
      ,Corfirmation_ID VARCHAR(1000)          
      ,ErrorMsg VARCHAR(1000)          
      ,CC VARCHAR(1000)          
      ,BCC VARCHAR(1000)                
      ,MasterTags XML          
      ,CreatedBy VARCHAR(1000)        
      ,TemplateId VARCHAR(1000)         
      ,OpenTags XML      
    ,MailKey VARCHAR(1000)          
    ,IsIncoming VARCHAR(1000)       
    ,MailSentOn VARCHAR(100)      
    ,ConnId VARCHAR(50)      
    ,TotxtAll VARCHAR(1000)      
    ,MailPath VARCHAR(1000)  
    ,LstAttachments xml      
  )                                                                                                                 
                                   
 EXEC sp_xml_removedocument @I;                    
     
--alter table #tbl_XML_Data add ID int identity(1,1)  
    
 DECLARE @AlertId VARCHAR(100),@AlertType VARCHAR(100),@ParentType VARCHAR(100),@ParentId VARCHAR(100),              
    @Subject VARCHAR(500),@From VARCHAR(100),@To VARCHAR(max),@Processed VARCHAR(100),          
          @Status VARCHAR(100),@TemplateId VARCHAR(100),@IsRecordExists INT,      
          @MailSentOn VARCHAR(100),@TotxtAll VARCHAR(1000),@CC VARCHAR(1000),@MASTERTAGS XML,@Body nvarchar(max),@IsIncoming varchar(10),  
          @LstAttachments XML
       
 --SELECT @AlertId=ISNULL(AlertId,0),@AlertType=AlertType,@ParentType=parenttype,               
 --  @ParentId=ParentId,@Subject=Subject,@From=[From],@To=[To],@Processed=Processed,      
 --  @Status=Status,@TemplateId=TemplateId,      
 --  @TotxtAll=TotxtAll,@CC=CC,@MailSentOn=MailSentOn      
 --  FROM #tbl_XML_Data           
       
 SELECT @TotxtAll=TotxtAll,@CC=CC FROM #tbl_XML_Data        
       
 BEGIN TRAN      
  -- Insert Into Alert Table       
 DECLARE @maxtolenlimit INT,@maxcclenlimit INT,@Counter INT,@MaxCount INT      
  SET @maxtolenlimit=1000      
  SET @maxcclenlimit=500      
   ALTER TABLE #tbl_XML_Data      
   ADD ID INT IDENTITY(1,1)      
   SELECT @MaxCount=COUNT(*) FROM #tbl_XML_Data      
       
 SET @Counter=1      
 declare @LoadHTMLAsText as int        
   select @LoadHTMLAsText=COUNT(1) from FeatureMaster where FeatureDesc='Load HTML as Text' and Inst_Id=@Inst_Id   
   
   ALTER TABLE #tbl_XML_Data    
   ADD OTO VARCHAR(MAX),OCC VARCHAR(MAX)    
       
    WHILE(@Counter <= @MaxCount)      
      BEGIN      
  SELECT @TotxtAll=TotxtAll,@CC=CC FROM #tbl_XML_Data WHERE ID=@Counter      
  IF(LEN(@TotxtAll)>@maxtolenlimit)      
   BEGIN       
    SET @TotxtAll= LEFT(@TotxtAll,@maxtolenlimit)      
    DECLARE @emailtemp VARCHAR(1000)      
    SELECT @emailtemp= RIGHT(@TotxtAll , CHARINDEX (';' ,REVERSE(@TotxtAll))-1)      
    SELECT @TotxtAll=LEFT(@TotxtAll, @maxtolenlimit-(LEN(@emailtemp)+1))      
   END      
         
  IF(LEN(@CC)>@maxcclenlimit)      
   BEGIN       
    SET @CC= LEFT(@CC,@maxcclenlimit)      
    DECLARE @emailcctemp VARCHAR(500)      
    SELECT @emailcctemp= RIGHT(@CC , CHARINDEX (';' ,REVERSE(@CC))-1)      
    SELECT @CC=LEFT(@CC,@maxcclenlimit-(LEN(@emailcctemp)+1))      
   END      
   UPDATE #tbl_XML_Data SET CC=@CC,TotxtAll=@TotxtAll WHERE ID=@Counter      
       
       
        
           
   IF @LoadHTMLAsText=1        
   BEGIN    
   SELECT @Body=Body FROM #tbl_XML_Data WHERE ID=@Counter      
   SELECT @MASTERTAGS=MasterTags FROM #tbl_XML_Data WHERE ID=@Counter    
  if(ISNULL(@Body,'')<>'')        
  begin                                       
   if(@MASTERTAGS is not null)                                                      
   begin                                                      
    --For Edit delete existing node in #tbl_XML_Data table                                                      
    UPDATE #tbl_XML_Data                                                      
    SET mastertags.modify('delete(//MasterTags//tags//HTMLText)[1]') from #tbl_XML_Data  where                                                      
    MasterTags.value('(MasterTags/tags/HTMLText/node())[1]','varchar(100)') is not  null and ID=@Counter                                                      
                                             --declare @ActionableValue varchar(1)                                                      
    declare @mtag xml            
    set @mtag=convert(xml,'<HTMLText>'+'<![CDATA[' + LTRIM(RTRIM(replace(dbo.RemoveHtmlString(@Body),CHAR(10),'')))+ ']]>'+'</HTMLText>')                                                      
    update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtag") as last into (/MasterTags/tags)[1]') where  MasterTags is not null     
    and ID=@Counter    
   end        
   else                                                      
   begin                                                       
    update #tbl_XML_Data set MasterTags='<MasterTags><tags><HTMLText>' + '<![CDATA['+LTRIM(RTRIM(replace(dbo.RemoveHtmlString(@Body),CHAR(10),'')))+ ']]>' +'</HTMLText></tags></MasterTags>'      
    where MasterTags is null and ID=@Counter    
   enD        
  enD            
   END         
      --Added by pravin rane by temperary basis on 08-Sept-2017 for RF    
    
   SELECT @To=[To],@CC=CC,@IsIncoming=ltrim(rtrim(isnull(IsIncoming,''))),@AlertType=isnull(AlertType,'') FROM #tbl_XML_Data WHERE ID=@Counter      
   UPDATE #tbl_XML_Data SET OTO=@To,OCC=@CC WHERE ID=@Counter 
--       if(@Inst_Id=9 and @To<>'' and @AlertType<>'sms' and (@IsIncoming='0' or @IsIncoming='false' or @IsIncoming='' ))    
--      begin    
          
--        select * into #temp1 from [dbo].Split(@To,';')     
--        select * into #temp2 from #temp1 where (data NOT Like '%edelcap%' AND data NOT Like '%edelweissfin%'     
--        AND data NOT Like '%edelweisstokio%'  AND data NOT Like '%edelweiss%') OR (data LIKE '%Homeservice@edelweissfin.com%'   or data LIKE '%Abhijit.Nair@edelweissfin.com%' or   data LIKE '%Durvesh.Bhambure@edelweissfin.com%' or   data LIKE '%Shivali.S
--hinde@edelweissfin.com%' or   data LIKE '%gouri.puri@edelweissfin.com%')   
     
--  DECLARE @ContactToEmail VARCHAR(8000)     
--  SELECT @ContactToEmail = COALESCE(@ContactToEmail + ';', '') + Data    
--  FROM #temp2    
--  WHERE Data IS NOT NULL    
--  update #tbl_XML_Data set [to]=@ContactToEmail where  ID=@Counter      
    
--   end    
--    if(@Inst_Id=9 and @CC<>'' and @AlertType<>'sms' and  (@IsIncoming='0' or @IsIncoming='false'  or @IsIncoming='' ))    
--       begin    
           
--   select * into #temp3 from [dbo].Split(@CC,';')     
      
--            select * into #temp4 from #temp3 where (data NOT Like '%edelcap%' AND data NOT Like '%edelweissfin%' AND data     
--            NOT Like '%edelweisstokio%'  AND data NOT Like '%edelweiss%') OR (data LIKE '%Homeservice@edelweissfin.com%'    or data LIKE '%Abhijit.Nair@edelweissfin.com%' or   data LIKE '%Durvesh.Bhambure@edelweissfin.com%' or   data LIKE '%Shivali.Shinde
--@edelweissfin.com%' or   data LIKE '%gouri.puri@edelweissfin.com%')  
     
--   DECLARE @ContactCCEmail VARCHAR(8000)     
--   SELECT @ContactCCEmail = COALESCE(@ContactCCEmail + ';', '') + Data    
--   FROM #temp4    
--   WHERE Data IS NOT NULL    
--  update #tbl_XML_Data set [cc]=@ContactCCEmail where  ID=@Counter    
     
--        end    
            
            
              --Added By Deepak On 27 March 2018--
            
            IF(@To<>'' AND @AlertType<>'sms' AND (@IsIncoming='0' OR @IsIncoming='false' OR @IsIncoming=''))  
		BEGIN  
			IF OBJECT_ID('tempdb..#tempIgnoreFilter') IS NOT NULL
				DROP TABLE #tempIgnoreFilter
				SELECT * INTO #tempIgnoreFilter FROM [dbo].Split(@To,';')   
				
				IF OBJECT_ID('tempdb..#tempIgnoreTMFilter') IS NOT NULL
					DROP TABLE #tempIgnoreTMFilter
				SELECT T.* INTO #tempIgnoreTMFilter FROM 
                (SELECT F.* FROM #tempIgnoreFilter F Left Join UserMaster UM ON UM.email=F.Data AND UM.Inst_Id=@Inst_Id
				WHERE UM.email IS NOT NULL AND UM.MasterTags.value('(tags/IgnoreMail/node())[1]','varchar(10)')=0) T Left Join
				TagMaster TM ON TM.tagName=T.Data AND TM.TagType='ExceptionRecipients' AND TM.Inst_Id=@Inst_Id 
				WHERE TM.tagName IS NOT NULL
				
				DECLARE @ContactToEmail VARCHAR(8000)   
				SELECT @ContactToEmail = COALESCE(@ContactToEmail + ';', '') + Data  
				FROM #tempIgnoreTMFilter WHERE Data IS NOT NULL  
				UPDATE #tbl_XML_Data SET [to]=@ContactToEmail  WHERE ID=@Counter
				SET @ContactToEmail=NULL
			END  

  
    IF(@CC<>'' AND @AlertType<>'sms' AND (@IsIncoming='0' OR @IsIncoming='false' OR @IsIncoming=''))  
		BEGIN  
			IF OBJECT_ID('tempdb..#tempIgnoreCCFilter') IS NOT NULL
				DROP TABLE #tempIgnoreCCFilter
				SELECT * INTO #tempIgnoreCCFilter FROM [dbo].Split(@CC,';')   
				
				IF OBJECT_ID('tempdb..#tempIgnoreCCTMFilter') IS NOT NULL
					DROP TABLE #tempIgnoreCCTMFilter
				SELECT T.* INTO #tempIgnoreCCTMFilter FROM 
                (SELECT F.* FROM #tempIgnoreCCFilter F Left Join UserMaster UM ON UM.email=F.Data AND UM.Inst_Id=@Inst_Id
				WHERE UM.email IS NOT NULL AND UM.MasterTags.value('(tags/IgnoreMail/node())[1]','varchar(10)')=0) T Left Join
				TagMaster TM ON TM.tagName=T.Data AND TM.TagType='ExceptionRecipients' AND TM.Inst_Id=@Inst_Id 
				WHERE TM.tagName IS NOT NULL
				
				DECLARE @ContactCCEmail VARCHAR(8000)   
				SELECT @ContactCCEmail = COALESCE(@ContactCCEmail + ';', '') + Data  FROM #tempIgnoreCCTMFilter 
				WHERE Data IS NOT NULL  
				UPDATE #tbl_XML_Data SET [CC]=@ContactCCEmail WHERE ID=@Counter 
				SET @ContactCCEmail=NULL	 
    END      
    ---End---        
            
            
            
            
          SELECT @ParentId=parentid,@AlertType=AlertType,@ParentType=ParentType,@Body=body,@To=[To],@AlertId=ISNULL(AlertId,0) FROM #tbl_XML_Data WHERE ID=@Counter      
          
            
            if(@Inst_Id=9 and LOWER(@AlertType)='sms' and LOWER(@ParentType)='ticket' and @AlertId=0)    
   begin     
                   declare @LOGID bigint ,@TicketMasterTag xml    
     SET @LOGID=(select * from OPENQUERY(EXPONENTIA_FINONE_PULSE, 'select MAX(TO_NUMBER(LOG_ID)) AS MAXCOUNT from HF_REPORTING.SMS_LOG'))    
     SET @LOGID=@LOGID+1    
          
          
          
      INSERT OpenQuery(EXPONENTIA_FINONE_PULSE, 'select App_ID,SMS_CATEGORY_ID,MOBILE_NUMBER,CUSTOMER_ID,MESSAGE_ID,MESSAGE,STATUS,CREATED_ON,CREATED_BY,LOG_ID,SEND_ON,REASON from HF_REPORTING.SMS_LOG')     
              SELECT 0 as [AppID],39 as [SMS_CATEGORY_ID],@To as MOBILE_NUMBER,4605 as[CUSTOMERID],'' AS MESSAGE_ID,@Body as MESSAGE,'' as STATUS,getdate()as [CREATED_ON],4605 as[CREATED_BY],@LOGID as LOG_ID,null as SEND_ON,null as REASON    
          
      INSERT OpenQuery(EXPONENTIA_FINONE_PULSE, 'select ID,App_ID,SMS_CATEGORY_ID,MOBILE_NO,CUSTOMER_ID,AGREEMENTNO,ENTITY_NAME,CREATED_BY,LOB_ID,WHERE_QUERY,PROCESS_KEY,STATUS,CREATED_ON,LOG,FROMDATE,TODATE,MESSAGE from HF_REPORTING.SMS_PROCESS')     
      SELECT @LOGID,0 as [AppID],39 as SMS_Category_ID,@To as Mobile_No,4605 as CUSTOMER_ID,'' as AGREEMENTNO,'ER' as ENTITY_NAME,4605 as CREATED_BY,'' as LOB_ID,'' as WHERE_QUERY,'' as PROCESS_KEY,'' as STATUS,GETDATE()as CREATED_ON,    
      null as LOG,null as FROMDATE,null as TODATE,@Body as Message    
         
         
         
                         
--Insert SMSID int ticket table master tag column     
              set @TicketMasterTag=(select MasterTags from Tickets with (nolock) where Inst_Id=@Inst_Id and TicketId=@ParentId )    
    
   if(@TicketMasterTag is null)    
      begin     
    update tickets set  MasterTags='<tags><SMSLOGID>'+cast(@LOGID as varchar(50))+'</SMSLOGID></tags>' where Inst_Id=@Inst_Id and TicketId=@ParentId    
    and MasterTags is  null    
       end    
      else     
        begin    
    
   UPDATE dbo.Tickets    
   SET mastertags.modify('insert <SMSLOGID>{sql:variable("@LOGID")}</SMSLOGID> as last into (/tags)[1]')     
   WHERE TicketId=@ParentId and  MasterTags.value('(tags/SMSLOGID/node())[1]','varchar(50)') is  null and MasterTags is not null    
   and Inst_Id=@Inst_Id    
        end    
            
        end    
        --end     
            
            
            
            
    
      IF OBJECT_ID('tempdb..#temp1') IS NOT NULL                                         
     drop table #temp1    
                    IF OBJECT_ID('tempdb..#temp2') IS NOT NULL                                         
     drop table #temp2    
                    IF OBJECT_ID('tempdb..#temp3') IS NOT NULL                                         
     drop table #temp3    
                    IF OBJECT_ID('tempdb..#temp4') IS NOT NULL                                         
     drop table #temp4      
  ----End Added by pravin rane by temperary basis on 08-Sept-2017 for RF    
       
  SET @Counter=@Counter+1;      
      END      
        
       Create Table #TempAttachment(    
       Attachment_Id varchar(20),    
       Message varchar(500)    
        )  
            
     
    declare @Alertcnt int,@AlertLoopCounter int=1,  
   @IsAttachment bit,@newXMLAttachments xml       
      select @Alertcnt=(select COUNT(*) from #tbl_XML_Data)  
      WHILE(@AlertLoopCounter <= @Alertcnt)  
      begin  
     declare @AlertIDNew bigint  
     select @AlertIDNew= ISNULL(AlertId,0),@newXMLAttachments=LstAttachments  from #tbl_XML_Data where ID=@AlertLoopCounter  
        
      if(@AlertIDNew=0)  
      begin  
      INSERT INTO Alerts(AlertType,ParentType,ParentId,Subject,Body,Attachment,[From],[To],Processed,Status,Corfirmation_ID,ErrorMsg,CC,BCC          
     ,Inst_Id,TemplateId,MasterTags,CreatedBy,OpenTags,MailKey,IsIncoming,MailSentOn,ConnId,TotxtAll,MailPath)      
        
      SELECT AlertType,ParentType,ParentId,left(Subject,500) AS Subject,Body,Attachment,[From],[To],Processed,Status,Corfirmation_ID,ErrorMsg,CC          
     ,BCC,@Inst_Id,TemplateId,MasterTags.query('/MasterTags/tags'),@UserId,OpenTags.query('/OpenTags/otag'),MailKey,IsIncoming,MailSentOn      
     ,ConnId,TotxtAll,MailPath FROM #tbl_XML_Data WHERE ISNULL(AlertId,0)=0  and ID=@AlertLoopCounter    
  --SELECT SCOPE_IDENTITY() AS AlertId,'Record saved successfuly.' AS MESSAGE      
       select @AlertId = SCOPE_IDENTITY()   
       
       INSERT INTO AlertToCC 
       SELECT @AlertId,OTO,OCC FROM #tbl_XML_Data WHERE ID=@AlertLoopCounter
        
                
     set @IsAttachment = @newXMLAttachments.exist('LstAttachments/Attachment')   
   
     if(@IsAttachment=1)  
     begin   
       select @newXMLAttachments =  @newXMLAttachments.query('LstAttachments')   
     DECLARE @IAttachment INT                                                       
              
              IF OBJECT_ID('tempdb..#tbl_XML_Data_AlertAttachmentsAdd') IS NOT NULL                                 
  DROP TABLE #tbl_XML_Data_AlertAttachmentsAdd       
               
                                   
    EXEC sp_xml_preparedocument @IAttachment OUTPUT, @newXMLAttachments;                  
                   
  SELECT *  INTO #tbl_XML_Data_AlertAttachmentsAdd  FROM OPENXML (@IAttachment, 'LstAttachments/Attachment', 2)                                  
  WITH                                  
   (               
     Attachment_Id varchar(20)            
    ,[Path] varchar(1000)            
    ,FileType varchar(1000)            
    ,ParentId varchar(20)            
    ,parenttype varchar(100)            
    ,Title varchar(1000)            
    ,MasterTags xml  
    ,SystemFileName varchar(1000)            
    ,UserFileName varchar(1000)        
    ,IsActive varchar(20)    
    ,MailKey varchar(1000)         
   )                                                                                                                 
                                    
  EXEC sp_xml_removedocument @IAttachment;    
       
       
       update #tbl_XML_Data_AlertAttachmentsAdd set ParentId=@AlertId from #tbl_XML_Data_AlertAttachmentsAdd where ISNULL(Attachment_Id,0)=0 and ISNULL(ParentId,0)=0  
       

        set @newXMLAttachments = (select * from #tbl_XML_Data_AlertAttachmentsAdd FOR XML RAW ('Attachment'), ROOT ('LstAttachments'), ELEMENTS) --Convert into list of attahment xml format  
            
			 

         insert into #TempAttachment  
       exec USP_SaveAttachmentsList @Inst_Id,@UserId,@newXMLAttachments      
       
     end  
         
       
     end  
        
      else if(@AlertIDNew>0)  
       begin   
  
         
     UPDATE A SET A.AlertType=XA.AlertType,A.ParentType=XA.ParentType,A.ParentId=XA.ParentId,      
    A.Subject=XA.Subject,A.Body=XA.Body,A.Attachment=XA.Attachment,A.[From]=XA.[From],A.[To]=XA.[To],A.Processed=XA.Processed,A.Status=XA.Status,      
    A.Corfirmation_ID=XA.Corfirmation_ID,A.ErrorMsg=XA.ErrorMsg,A.CC=XA.CC,A.BCC=XA.BCC,A.Inst_Id=@Inst_Id,A.TemplateId=XA.TemplateId,      
    A.MasterTags=XA.MasterTags.query('/MasterTags/tags'),      
    A.CreatedBy=@UserId,A.OpenTags=XA.OpenTags.query('/OpenTags/otag'),      
    A.MailKey=XA.MailKey,A.IsIncoming=XA.IsIncoming,A.MailSentOn=XA.MailSentOn,A.ConnId=XA.ConnId,A.TotxtAll=XA.TotxtAll,      
    A.MailPath=XA.MailPath      
    FROM Alerts A INNER JOIN #tbl_XML_Data XA ON  A.AlertId=XA.AlertId   
    where  A.AlertId=@AlertIDNew  
  
  
    set @IsAttachment = @newXMLAttachments.exist('LstAttachments/Attachment')   
  
    if(@IsAttachment=1)  
    begin   
      select @newXMLAttachments =  @newXMLAttachments.query('LstAttachments')   
    
    DECLARE @IAttachmentUpdate INT                                                       
              
                             
       IF OBJECT_ID('tempdb..#tbl_XML_Data_AlertAttachments') IS NOT NULL                                 
    DROP TABLE #tbl_XML_Data_AlertAttachments     
                                     
   EXEC sp_xml_preparedocument @IAttachmentUpdate OUTPUT, @newXMLAttachments;                  
                     
    SELECT *  INTO #tbl_XML_Data_AlertAttachments  FROM OPENXML (@IAttachmentUpdate, 'LstAttachments/Attachment', 2)                                  
    WITH                                  
     (               
      Attachment_Id varchar(20)            
           ,[Path] varchar(1000)            
           ,FileType varchar(1000)            
     ,ParentId varchar(20)            
      ,parenttype varchar(100)            
     ,Title varchar(1000)            
     ,MasterTags xml  
    ,SystemFileName varchar(1000)            
    ,UserFileName varchar(1000)        
    ,IsActive varchar(20)    
    ,MailKey varchar(1000)     
     )                                                                                                                 
                                      
    EXEC sp_xml_removedocument @IAttachmentUpdate;    
      
  
         
       --declare @UpdatedAlertID bigint  
       --select @UpdatedAlertID=ISNULL(AlertId,0) from #tbl_XML_Data where AlertId=@AlertIDNew  
       --select @UpdatedAlertID  
   update #tbl_XML_Data_AlertAttachments set ParentId=@AlertIDNew     
     
    set @newXMLAttachments = (select * from #tbl_XML_Data_AlertAttachments FOR XML RAW ('Attachment'), ROOT ('LstAttachments'), ELEMENTS)   
                
			 
               insert into #TempAttachment  
      exec USP_SaveAttachmentsList @Inst_Id,@UserId,@newXMLAttachments      
         
    end  
        
      end  
       SET @AlertLoopCounter = @AlertLoopCounter + 1  
       end  
  
       
  
     
       
  SELECT MAX(AlertId) AS AlertId,'Record saved successfuly.' AS MESSAGE FROM Alerts      
  WHERE Inst_Id = @Inst_Id --and UpdatedDTM > DATEADD(SECOND, -10,GETDATE())      
       
  IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                 
  DROP TABLE #tbl_XML_Data    
   IF OBJECT_ID('tempdb..#TempAttachment') IS NOT NULL                                 
  DROP TABLE #TempAttachment        
 COMMIT TRAN      
END TRY      
BEGIN CATCH           
rollback   TRAN              
  SELECT @ErrorMessage=ERROR_MESSAGE(),@ErrorSeverity=ERROR_SEVERITY(),@ErrorState=ERROR_STATE()                                     
     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);               
END CATCH      
      


-------------------------------------------------------------------------------------

USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_SaveListOfFeedBack]    Script Date: 04/10/2018 15:02:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 
/************************************************************************
 '     Object Name   : USP_SaveListOfFeedBack
 '     Purpose       : To Save FeedBack
 '     Author        : Deepak
 '     Creation Date : 31 March 2017
 '     -------------------------------------------------------------------- 
 '	   Test: 
 USP_SaveListOfFeedBack 18,3426,'<ArrayOfFeedback><Feedback><parenttype>Client</parenttype>
<FeedbackId>0</FeedbackId><ParentId>25955</ParentId>
<FeedbackTypeId>655749</FeedbackTypeId>
<FeedbackType>ClientFeedback</FeedbackType>
<Rating>0</Rating>
<SurveyId>0</SurveyId>
<MasterTags>
<tags><Feedback>Neutral</Feedback>
</tags>
</MasterTags><FeedbackPeriodId>0</FeedbackPeriodId>
<Year>0</Year><Remarks /><UpdateDTM />
<QuestionId>655758</QuestionId>
</Feedback>
<Feedback><parenttype>Client</parenttype>
<FeedbackId>0</FeedbackId><ParentId>25956</ParentId>
<FeedbackTypeId>655749</FeedbackTypeId>
<FeedbackType>ClientFeedback</FeedbackType>
<Rating>0</Rating>
<SurveyId>0</SurveyId>
<MasterTags>
<tags><Feedback>Satisfied</Feedback>
</tags>
</MasterTags><FeedbackPeriodId>0</FeedbackPeriodId>
<Year>0</Year><Remarks /><UpdateDTM />
<QuestionId>655759</QuestionId>
</Feedback>
<Feedback><parenttype>Client</parenttype>
<FeedbackId>0</FeedbackId><ParentId>25956</ParentId>
<FeedbackTypeId>655749</FeedbackTypeId>
<FeedbackType>ClientFeedback</FeedbackType>
<Rating>0</Rating>
<SurveyId>0</SurveyId>
<MasterTags>
<tags><Feedback>Highly Dissatisfied</Feedback>
</tags>
</MasterTags><FeedbackPeriodId>0</FeedbackPeriodId>
<Year>0</Year><Remarks /><UpdateDTM />
<QuestionId>655759</QuestionId>
</Feedback>
</ArrayOfFeedback>'
	Select * from Feedback where inst_id=18 order by Feedbackid desc
 **************************************************************************/ 
ALTER  PROCEDURE [dbo].[USP_SaveListOfFeedBack]
 (
	@Inst_Id INT,@UserId int,@ParamXML xml 
 )AS
 BEGIN TRY
	DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT
	 DECLARE @I INT , @inTime Datetime,@OutTime Datetime                      
 set @inTime=getdate()                  
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;    
	SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'ArrayOfFeedback/Feedback', 2)
	WITH                                
   (   
		FeedbackId VARCHAR(1000),
		ParentId VARCHAR(1000),
		parenttype VARCHAR(1000),
		FeedbackType VARCHAR(1000),
		FeedbackTypeId VARCHAR(1000),
		RatingType VARCHAR(1000),
		Rating VARCHAR(1000),
		SurveyId VARCHAR(1000),
		MasterTags XML,
		OpenTags XML,
		FeedbackPeriodId VARCHAR(1000),
		[Year] VARCHAR(1000),
		Remarks VARCHAR(1000),
		QuestionId VARCHAR(1000),
		FeedBackDate VARCHAR(1000),
		IsActive VARCHAR(100)
  )                                                                                                                 
  EXEC sp_xml_removedocument @I;
  DECLARE @FeedbackId VARCHAR(100),@FeedbackTypeId VARCHAR(1000),@FeedbackType VARCHAR(1000),@IsActive VARCHAR(100)
  SELECT @FeedbackId=ISNULL(FeedbackId,0),@FeedbackTypeId=RatingType,@FeedbackType=FeedbackType,@IsActive=IsActive FROM #tbl_XML_Data 
		
		IF @Inst_Id=20 
		BEGIN

		IF (Select COunt(1)From  #tbl_XML_Data Where FeedbackId=0)>0--Added By Deepak As Discussed on 28Dec2017 with Abhijit,Vipul Sir & Sunil Sir to update the FeedBackId if QuestionId,QuestionSetId & Opportunity_Id matched found 
				BEGIN			
				Update X SET X.FeedBackId=F.FeedbackId FROM #tbl_XML_Data X INNER JOIN Feedback F ON X.QuestionId=F.QuestionId
				--AND X.MasterTags.value('(MasterTags/tags/Opportunity_Id/node())[1]','varchar(20)')=F.MasterTags.value('(tags/Opportunity_Id/node())[1]','varchar(20)')
				--AND X.MasterTags.value('(MasterTags/tags/QuestionSetId/node())[1]','varchar(20)')=F.MasterTags.value('(tags/QuestionSetId/node())[1]','varchar(20)')
					AND X.MasterTags.value('(MasterTags/tags/Opportunity_Id/node())[1]','varchar(20)')=F.Opportunity_Id
				AND X.MasterTags.value('(MasterTags/tags/QuestionSetId/node())[1]','varchar(20)')=QuestionSetId
				WHERE F.Inst_Id=@Inst_Id AND X.FeedbackId=0 AND F.IsActive=1
			END

		UPDATE TP SET TP.Rating=OT.T.value('@RatingValue','int')
		FROM #tbl_XML_Data TP Left Join 
		TagMaster TM ON TP.FeedbackTypeId=TM.TagId
		cross apply  TM.OpenTags.nodes('//otag//tags//Rating') AS OT(T)
		WHERE OT.T.value('.','nvarchar(100)')=TP.MasterTags.value('(MasterTags/tags/Feedback/node())[1]','varchar(100)')
		END
		ELSE
		BEGIN
		UPDATE TP SET TP.Rating=OT.T.value('@RatingValue','int')
		FROM #tbl_XML_Data TP Left Join 
		TagMaster TM ON TP.RatingType=TM.TagId
		cross apply  TM.OpenTags.nodes('//otag//tags//Rating') AS OT(T)
		WHERE OT.T.value('.','nvarchar(100)')=TP.MasterTags.value('(MasterTags/tags/Feedback/node())[1]','varchar(100)')
		END
		
		--UPDATE TP SET TP.Rating=OT.T.value('@RatingValue','int')
		--FROM #tbl_XML_Data TP Left Join 
		--TagMaster TM ON TP.RatingType=TM.TagId
		--cross apply  TM.OpenTags.nodes('//otag//tags//Rating') AS OT(T)
		--WHERE OT.T.value('.','nvarchar(100)')=TP.MasterTags.value('(MasterTags/tags/Feedback/node())[1]','varchar(100)')
		
		INSERT INTO Feedback (ParentId,ParentType,FeedbackTypeId,RatingType,Rating,SurveyId,MasterTags,OpenTags,FeedbackPeriodId,[Year],
		Remarks,UpdateDTM,UpdatedBy,Inst_Id,QuestionId,FeedBackDate,IsActive,Opportunity_ID,QuestionSetId,ReferenceId,ParentFeedbackId)
	    SELECT ParentId,parenttype,FeedbackTypeId,RatingType,Rating,SurveyId,MasterTags.query('/MasterTags/tags'),OpenTags.query('/OpenTags/otag'),
	    FeedbackPeriodId,[Year],Remarks,GETDATE(),@UserId,@Inst_Id,QuestionId,GETDATE(),IsActive
		,isnull(MasterTags.value('(MasterTags/tags/Opportunity_Id/node())[1]','varchar(20)'),0)
		,isnull(MasterTags.value('(MasterTags/tags/QuestionSetId/node())[1]','varchar(20)'),0),
		isnull(MasterTags.value('(MasterTags/tags/ReferenceId/node())[1]','varchar(20)'),0),
		isnull(MasterTags.value('(MasterTags/tags/ParentFeedbackId/node())[1]','varchar(20)'),0)
		 FROM #tbl_XML_Data where isnull(FeedbackId,0)=0
	    
	    update f set 
	    ParentId= x.ParentId,
	    ParentType=X.ParentType,
	    FeedbackTypeId=X.FeedbackTypeId,
	    RatingType=X.RatingType,
	    Rating=X.Rating,
	    SurveyId=X.SurveyId,
	    MasterTags=X.MasterTags.query('/MasterTags/tags'),
	    OpenTags=X.OpenTags.query('/OpenTags/otag'),
	    FeedbackPeriodId=X.FeedbackPeriodId,
	    [Year]=X.[Year],
		Remarks=X.Remarks,
		UpdateDTM=GETDATE(),
		UpdatedBy=@UserId,
		Inst_Id=@Inst_Id,
		QuestionId=X.QuestionId,
		f.IsActive=X.IsActive
	   ,f.Opportunity_ID=isnull(X.MasterTags.value('(MasterTags/tags/Opportunity_Id/node())[1]','varchar(20)'),0)--Added by pravin rane on 15-mar-2018 becuase opportunityid stored in physical column
	   ,f.QuestionSetId=isnull(X.MasterTags.value('(MasterTags/tags/QuestionSetId/node())[1]','varchar(20)'),0)--Added by pravin rane on 15-mar-2018 becuase QuestionSetId stored in physical column
	   ,f.ReferenceId=isnull(X.MasterTags.value('(MasterTags/tags/ReferenceId/node())[1]','varchar(20)'),0)--Added by pravin rane on 15-mar-2018 becuase ReferenceId stored in physical column
	  ,f.ParentFeedbackId=isnull(X.MasterTags.value('(MasterTags/tags/ParentFeedbackId/node())[1]','varchar(20)'),0)--Added by pravin rane on 15-mar-2018 becuase ParentFeedbackId stored in physical column
		 from  Feedback f
	    inner join #tbl_XML_Data X on X.FeedbackId=f.FeedbackId
	    where isnull(X.FeedbackId,0)!=0
	    
		SELECT isnull(SCOPE_IDENTITY(),MAX(FeedbackId)) AS FeedbackId,'Record Saved' AS 'Message' from #tbl_XML_Data 
     IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                           
     DROP TABLE #tbl_XML_Data  

	      set @OutTime=getdate()                                               
  insert into spExecutionTime values ('USP_SaveListOfFeedBack',@inTime,@OutTime,@ParamXML)     

 END TRY
 BEGIN CATCH
	SELECT @ErrorMessage='Error: ' + ERROR_MESSAGE(),@ErrorSeverity=ERROR_SEVERITY(),@ErrorState=ERROR_STATE()                                           
	RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);   
 END CATCH


----------------------------------------------------------------------------------------------

USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_GetFeedback]    Script Date: 04/10/2018 15:01:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
/************************************************************************    
 '     Object Name   : USP_GetFeedback    
 '     Purpose       : To Get Feedback    
 '     Author        : Deepak    
 '     Creation Date : 3 March 2017    
 '     --------------------------------------------------------------------     
 '    Test:     
 Opportunity_id=169475  
 USP_GetFeedback 20,1692,'<NewDataSet><isactive><![CDATA[true]]></isactive><parenttype>Client</parenttype><opportunity_id><![CDATA[170394]]></opportunity_id></NewDataSet>'    
 USP_GetFeedback 20,3757,'<NewDataSet><isactive><![CDATA[true]]></isactive><parenttype>Client</parenttype></NewDataSet>'    
 USP_GetFeedback_TestTempVar 20,3757,'<NewDataSet><isactive><![CDATA[true]]></isactive><parenttype>Client</parenttype><opportunity_id><![CDATA[148740]]></opportunity_id></NewDataSet>'    
 Select * from Feedback    
 **************************************************************************/     
 ALTER PROCEDURE [dbo].[USP_GetFeedback]    
 (    
 @Inst_Id INT,@UserId int,@ParamXML xml     
 )AS    
 BEGIN TRY    
 DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT    
 DECLARE @I INT,@inTime Datetime,@OutTime Datetime                                
 set @inTime=getdate()                                                     
 declare @ParamXMLNew xml          
 set  @ParamXMLNew= @ParamXML                                                                                                             
 --   EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;       
   
 --DECLARE @tbl_XML_Data TABLE  
 --(  
 --  parenttype VARCHAR(20),    
 -- fromdate VARCHAR(100),    
 -- todate VARCHAR(100),                                      
 -- feedback VARCHAR(1000),    
 -- ratingtype VARCHAR(1000),    
 -- rating VARCHAR(1000),    
 -- questionid VARCHAR(1000),    
 -- opportunity_id varchar(1000),   --Added by pravin rane on 23-May-2017    
 -- questionsetid varchar(100),    
 -- parentid varchar(100),    
 -- feedbacktypeid varchar(100),    
 -- referenceid VARCHAR(100),    
 -- isactive VARCHAR(100),  
 -- feedbackid VARCHAR(100)    
 --)  
  
 --Insert Into @tbl_XML_Data   
 --Select *  
 --FROM OPENXML (@I, 'NewDataSet', 2)   
 -- WITH                                     
 --(       
 -- parenttype VARCHAR(100),    
 -- fromdate VARCHAR(100),    
 -- todate VARCHAR(100),                                      
 -- feedback VARCHAR(1000),    
 -- ratingtype VARCHAR(1000),    
 -- rating VARCHAR(1000),    
 -- questionid VARCHAR(1000),    
 -- opportunity_id varchar(1000),   --Added by pravin rane on 23-May-2017    
 -- questionsetid varchar(100),    
 -- parentid varchar(100),    
 -- feedbacktypeid varchar(100),    
 -- referenceid VARCHAR(100),    
 -- isactive VARCHAR(100),  
 -- feedbackid VARCHAR(100)    
 --)       
                                                                 
 ----SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                            
 ----WITH                                     
 ----(       
 ---- parenttype VARCHAR(100),    
 ---- fromdate VARCHAR(100),    
 ---- fromdate VARCHAR(100),                                      
 ---- feedback VARCHAR(1000),    
 ---- ratingtype VARCHAR(1000),    
 ---- rating VARCHAR(1000),    
 ---- questionid VARCHAR(1000),    
 ---- opportunity_id varchar(1000),   --Added by pravin rane on 23-May-2017    
 ---- questionsetid varchar(100),    
 ---- parentid varchar(100),    
 ---- feedbacktypeid varchar(100),    
 ---- referenceid VARCHAR(100),    
 ---- isactive VARCHAR(100),  
 ---- feedbackid VARCHAR(100)    
      
 ----)                                                 
 --EXEC sp_xml_removedocument @I;      
 DECLARE     
   @parenttype VARCHAR(20),    
   @fromdate VARCHAR(20),    
   @todate VARCHAR(20),    
   @feedback VARCHAR(1000),    
   @ratingtype VARCHAR(50),    
   @rating VARCHAR(50),    
   @questionid bigint,    
   @opportunity_id bigint,   --Added by pravin rane on 23-May-2017    
   @questionsetid bigint,    
   @parentid bigint,    
   @feedbacktypeid bigint,    
   @referenceid bigint,    
   @isactive VARCHAR(10),  
   @feedbackid VARCHAR(15)  
     
 --SELECT @feedback=feedback,@ratingtype=ratingtype,@rating=rating,@questionid=questionid,@fromdate=fromdate,@todate=todate,@parenttype=parenttype,    
 --@opportunity_id=opportunity_id,@questionsetid=questionsetid,@parentid=parentid,@feedbacktypeid=feedbacktypeid,@referenceid=referenceid,@isactive=isactive,@feedbackid=feedbackid   
 --FROM @tbl_XML_Data    
  
 SELECT  
  @opportunity_id=Node.Data.value('(opportunity_id)[1]','BigInt'),  
        @isactive=Node.Data.value('(isactive)[1]','Bit'),  
  @parenttype=Node.Data.value('(parenttype)[1]','varchar(20)'),  
  @feedbackid=Node.Data.value('(feedbackid)[1]','BigInt'),  
  @ratingtype=Node.Data.value('(ratingtype)[1]','varchar(50)'),  
  @rating=Node.Data.value('(rating)[1]','varchar(50)'),  
  @questionid=Node.Data.value('(questionid)[1]','BigInt'),  
  @fromdate=Node.Data.value('(fromdate)[1]','varchar(20)'),  
  @todate=Node.Data.value('(todate)[1]','varchar(20)'),  
  @questionsetid=Node.Data.value('(questionsetid)[1]','BigInt'),  
  @parentid=Node.Data.value('(parentid)[1]','BigInt'),  
  @feedbacktypeid=Node.Data.value('(feedbacktypeid)[1]','BigInt'),  
  @referenceid=Node.Data.value('(referenceid)[1]','BigInt'),  
  @feedback=Node.Data.value('(feedback)[1]','varchar(1000)')   
  FROM @ParamXMLNew.nodes('/NewDataSet') Node(Data)  
     
  SELECT F.FeedbackId,CM.ClientName,F.ParentId,F.ParentType,F.FeedbackTypeId,F.Rating,F.MasterTags,F.OpenTags,F.FeedbackPeriodId,F.[Year],F.Remarks,    
  CONVERT(VARCHAR(15),F.UpdateDTM,106) AS 'Date',F.UpdatedBy,UM.UserName AS 'UpdatedByName',    
  F.QuestionId,    
  --QT.tagName AS 'Question'     
  '' AS 'Question',F.RatingType,F.FeedBackDate,ISNULL(F.IsActive,0) AS 'IsActive'  
  FROM Feedback F with (nolock)   
  LEFT JOIN ClientMaster CM with (nolock)  ON F.ParentId=CM.Client_Id   and CM.Inst_Id=@Inst_Id 
  LEFT JOIN UserMaster UM with (nolock)  ON UM.UserId=F.UpdatedBy AND UM.Inst_Id=@inst_id 
  Left Join Opportunity O with (nolock)  ON O.Opportunity_Id=F.Opportunity_Id AND O.Inst_Id=@Inst_Id-- AND O.Inst_Id=@Inst_Id  
    --Left Join Opportunity O with (nolock)  ON O.Opportunity_Id=F.MasterTags.value('(tags/Opportunity_Id/node())[1]','varchar(15)')  
  --LEFT JOIN TagMaster QT ON isnull(QT.TagId,0)=isnull(F.QuestionId,0) AND QT.TagType='Question'    
  WHERE F.Inst_Id=@inst_id   --AND QT.Inst_Id=@inst_id     
   AND (@opportunity_id IS NULL OR O.Opportunity_Id=@opportunity_id)   
  AND (@parenttype IS NULL OR F.ParentType=@parenttype)     
  AND (@parentid IS NULL OR F.ParentId=@parentid)   
  AND (@feedbackid IS NULL OR F.FeedbackId=@feedbackid)     
  AND (@isactive IS NULL OR F.IsActive=@isactive)     
  AND (@feedbacktypeid IS NULL OR F.FeedbackTypeId=@feedbacktypeid)     
  AND (@fromdate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),F.UpdateDTM,106)) >= CONVERT(DATETIME,CONVERT(VARCHAR(11),@fromdate,106)))                                                                   
  AND (@todate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),F.UpdateDTM,106))<= CONVERT(DATETIME,CONVERT(VARCHAR(11),@todate,106)))    
  AND (@questionid IS NULL OR F.QuestionId=@QuestionId)     
  AND (@feedback IS NULL OR LOWER(F.MasterTags.value('(tags/Feedback/node())[1]','varchar(100)'))=LOWER(@feedback))    
     --AND (@opportunity_id IS NULL OR F.MasterTags.value('(tags/Opportunity_Id/node())[1]','varchar(100)')=@opportunity_id)--Added by pravin rane on 23-may-2017    
   
     AND (@questionsetid IS NULL OR F.QuestionSetId=@questionsetid)    
     AND (@referenceid IS NULL OR F.ReferenceId=@referenceid)    
    --AND (@questionsetid IS NULL OR F.MasterTags.value('(tags/QuestionSetId/node())[1]','varchar(15)')=@questionsetid)      
    -- AND (@referenceid IS NULL OR F.MasterTags.value('(tags/ReferenceId/node())[1]','varchar(15)')=@referenceid)      
      
    
 --  OPTION(RECOMPILE)    
     set @OutTime=getdate()              
        insert into spExecutionTime values ('USP_GetFeedback',@inTime,@OutTime,@ParamXMLNew)              
 END TRY    
 BEGIN CATCH    
 SELECT @ErrorMessage='Error: ' + ERROR_MESSAGE(),@ErrorSeverity=ERROR_SEVERITY(),@ErrorState=ERROR_STATE()                                               
 RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);       
 END CATCH    
    
---------------------------------------------------------------------------------------

USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_ReOpenTicketMail]    Script Date: 04/10/2018 15:01:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 /************************************************************************                                                    
 '     Object Name   : USP_ReOpenTicketMail                                          
 '     Purpose       : 
 '     Author        : Deepak
 '     Creation Date : 6 March 2018
 ------------------------------------------------------------------------------------------------------------------------------------------------------------
 [USP_ReOpenTicketMail] 1482,9,'<NewDataSet><fromdate>01 jan 2013</fromdate><todate>13 Mar 2019</todate></NewDataSet>'
************************************************************************/                 
ALTER PROC [dbo].[USP_ReOpenTicketMail]
(
@UserId INT,@Inst_Id INT, @ParamXML XML
)    
AS    
BEGIN

  DECLARE @I INT                                                                                       
     EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;    
     SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                           
  WITH(    
	fromdate varchar(100),
	todate varchar(100)
	  )    
	EXEC sp_xml_removedocument @I;    
     
	DECLARE
	@fromdate varchar(100),     
	@todate varchar(100)    
       
	SELECT @fromdate=fromdate,@todate=todate FROM #tbl_XML_Data
	
	IF OBJECT_ID('tempdb..#TempRank') IS NOT NULL 
	DROP TABLE #TempRank Select Rank() 
	Over(Partition by TH.TicketId Order by LastUpdatedDTM)AS 'Rank', TH.TicketId,LastStatus,LastUpdatedDTM INTO #TempRank 
	FROM TicketHistory TH Inner Join Tickets T ON TH.TicketId=T.TicketId WHERE T.Inst_Id=@Inst_Id AND LastStatus='Re-Open'
	
	IF OBJECT_ID('tempdb..#TempTicket') IS NOT NULL
	DROP TABLE #TempTicket 
	Select * INTO #TempTicket From 
	( 
	SELECT T.TicketId,Convert(VARCHAR(11),T.Date,106) AS 'Date',T.Type,T.SubType,ISNULL(CM.ClientName,'') AS 'ClientName',A.AlertId,LTRIM(RTRIM(replace(dbo.RemoveHtmlString(A.Body),CHAR(10),''))) AS 'Body' 
	FROM Tickets T Left Join #TempRank TR ON T.TicketId=TR.TicketId LEFT JOIn ClientMaster CM ON CM.Client_Id=T.ParentId AND T.ParentType='Client'
	Left JOin Alerts A ON A.ParentId=T.TicketId AND A.ParentType='Ticket' AND (A.UpdatedDTM > TR.LastUpdatedDTM AND A.UpdatedDTM<=DATEADD(S,2,GETDATE()))
	WHERE T.Inst_Id=@Inst_Id AND T.MasterTags.value('(tags/PulseID/node())[1]','varchar(100)') IS NOT NULL AND T.Status='Close'
	AND TR.TicketId IS NOT NULL AND TR.Rank=1 AND A.[Subject] LIKE '%loan Number%' AND A.IsIncoming=1
	AND (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),T.[Date],106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))
	AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),T.[Date],106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))

	UNION ALL

	SELECT T.TicketId,Convert(VARCHAR(11),T.Date,106) AS 'Date',T.Type,T.SubType,ISNULL(CM.ClientName,'') AS 'ClientName',A.AlertId,LTRIM(RTRIM(replace(dbo.RemoveHtmlString(A.Body),CHAR(10),''))) AS 'Body' 
	FROM Tickets T LEFT JOIN Alerts A ON T.TicketId=A.ParentId AND A.ParentType='Ticket' AND (A.UpdatedDTM > T.UpdatedDTM AND A.UpdatedDTM<=DATEADD(S,2,GETDATE()))
	LEFT JOIn ClientMaster CM ON CM.Client_Id=T.ParentId AND T.ParentType='Client' 
	WHERE T.Inst_Id=@Inst_Id AND T.MasterTags.value('(tags/PulseID/node())[1]','varchar(100)') IS NOT NULL AND T.Status='Re-Open'
	AND A.[Subject] LIKE '%loan Number%' AND A.IsIncoming=1
	AND (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),T.[Date],106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))
	AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),T.[Date],106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))
	)T
	

	IF OBJECT_ID('tempdb..#TempArank') IS NOT NULL
	DROP TABLE #TempArank
	Select ROW_NUMBER() Over(Partition By TicketId Order By A.AlertId) AS 'RowNo',T.TicketId,A.Body,A.AlertId
	INTO #TempArank from #TempTicket T Left Join Alerts A ON T.TicketId=A.ParentId AND A.ParentType='Ticket'
	WHERE A.Inst_Id=@Inst_Id AND A.IsIncoming=1
	
	SELECT DISTINCT TT.*,LTRIM(RTRIM(replace(dbo.RemoveHtmlString(TA.Body),CHAR(10),'')))  AS 'TicketCreatedBody' 
	FROM #TempTicket TT Left Join #TempArank TA ON TT.TicketId=TA.TicketId AND TA.RowNo=1

END

--------------------------------------------------------------------------------------

USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_SaveTickets]    Script Date: 04/10/2018 15:01:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[USP_SaveTickets]                                                                                            
/************************************************************************                                                                                                                                                                                      
 '     Object Name   : USP_SaveTickets                                                                                                                                                                                                                         
 '     Purpose       :  save Tickets                                                                                                      
 '     Author         : sagar patil                                                                                                                                                                   
 '     Creation Date   : 15 april 2015                                                                                                                                                                                                                         
 '     Code Change History  :                                                                                                                                                                                                                                  
 '     --------------------------------------------------------------------                                                                                                       
 '     CH#  | Modified Date |  Modified By     |  Purpose                                                                                                                                   
 '     --------------------------------------------------------------------                                                                                                       
 '       1  |   1 jan 2014  | sagar patil     |                                                                                                                                                 
 '     --------------------------------------------------------------------                                                                                      
  '      1  |   10 jun 2015  | sagar patil    | added closed parent ticket and ticket automicity logic                                         
         --------------------------------------------------------------------                                                                      
         1  |   26 April 2016       | Pravin Rane   | added TAT in TicketHistory table                                                                         
 '     --------------------------------------------------------------------                                      
         1  | 23 Jun 2016    | Pravin Rane   | added ParentId,RaisedBy,Priority,MasterTags in TicketHistory table                                 
 '-------------------------------------------------------------------------------------------------------                                          
                                                                                                         
 To test :-                                                                            
 --[USP_SaveTickets] 9,651,                               
 '<NewDataSet>
  <TicketId>54165</TicketId>
  <parenttype>client</parenttype>
  <Date>1/25/2018 17:52:00 PM</Date>
  <ParentId>3469825</ParentId>
  <Description>testing by pravin</Description>
  <Type>COMPLAINT</Type>
  <SubType>WELKITNOTRECD</SubType>
  <TAT>2018-01-24</TAT>
  <Status>Open</Status>
  <Resolution />
  <AssignedTo>0</AssignedTo>
  <AssignedDTM>1900-01-01</AssignedDTM>
  <MasterTags>
    <tags>
  <MarkAsRead>0</MarkAsRead>
  <MarkAsReplied>0</MarkAsReplied>
  <Actionable>1</Actionable>
    </tags>
  </MasterTags>
  <OpenTags>
    <otag />
  </OpenTags>
  <UpdatedBy>4610</UpdatedBy>
  <UpdatedDTM>2018-01-31 15:07:15.450</UpdatedDTM>
  <ResolutionDate>1900-01-01</ResolutionDate>
  <Assignee />
  <Assigner>Pravin Rane</Assigner>
  <ParentName>Siddharth Banavalikar</ParentName>
  <ParentTicketId>0</ParentTicketId>
  <Priority />
  <Escalation />
  <Title>testing RF by pravin</Title>
  <Raisedby>0</Raisedby>
  <RaisedByName></RaisedByName>
  <TATFlag>0</TATFlag>
  <lstTicketHistory />
</NewDataSet>'                                                                               
                                               
                Select * from Tickets where TicketId=54108
     select * from tickets where ticketID=478                                                                  
                                                 
 [USP_SaveTickets] 9,670,                                                                                      
'<NewDataSet>                                                                                      
  <TicketId>0</TicketId>                                                       
 <Date>2018-01-29 17:49:35.851</Date>                                                                                      
 <parenttype>Client</parenttype>                                                                                      
 <ParentId>737571</ParentId>                                                           
   <Description>test</Description>                                        
   <Type>ROI</Type>                                        
   <SubType>ROI Approval</SubType>                                                          
 <AssignedTo>372</AssignedTo>                                                                             
 <Status>Close</Status> 
 </NewDataSet>'                                                                       
                                                                             
  [USP_SaveTickets]  10,970, '<NewDataSet><TicketId>22893</TicketId><parenttype>Client</parenttype><Date>2016-10-20 00:00:00</Date><ParentId>3366169</ParentId><Description>test</Description><Type>REQUEST</Type><SubType>SOA</SubType>                       
 <TAT>2016-10-22</TAT><Status>Open</Status><Resolution /><AssignedTo>0</AssignedTo><AssignedDTM /><MasterTags><tags>                                             
                 <MarkAsRead>0</MarkAsRead><MarkAsReplied>0</MarkAsReplied><RelationshipNo>3433417434</RelationshipNo><Actionable>1</Actionable></tags></MasterTags>                                         
<OpenTags><otag /></OpenTags><UpdatedBy>651</UpdatedBy><UpdatedDTM>2016-10-21</UpdatedDTM><ResolutionDate>2016-10-21</ResolutionDate><Assignee /><Assigner /><ParentName>Ajay Parakh</ParentName><ParentTicketId>22891</ParentTicketId><Priority>High</Priorit 
y>                                                      
<Escalation /><Title>Issue test pravin</Title><Raisedby>0</Raisedby><RaisedByName>0</RaisedByName><lstTicketHistory /></NewDataSet>'                                                                            
                                                                                                          
************************************************************************/                                                                                                       
                      
@Inst_Id INT,@UserId int,@ParamXML xml                                                                                                        
AS                                                                                                        
BEGIN TRY                                                                                   
                                                                                                       
                                      
DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT                                                                                                    
                                                                              
 DECLARE @I INT  , @inTime Datetime,@OutTime Datetime                                   
                                              
       set @inTime=getdate()                                         
                                                                                                                         
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;                                                                                                        
                                                                                                         
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                                                    
 WITH                                                                                                                        
  (                                                                      
 TicketId varchar(1000),                              
 Date varchar(1000),                                                                                      
 parenttype varchar(1000),                                                                                      
 ParentId varchar(1000),                                                              
 Description text,                     
 Type varchar(1000),                                                                                      
 SubType varchar(1000),                                                   
 TAT varchar(1000),                                                                                      
 Status varchar(1000),                                                                                      
 Resolution VARCHAR(max),                                                         
 AssignedTo varchar(1000),                                                                                      
 AssignedDTM varchar(1000),                                                                                      
 MasterTags xml,                                                                                      
 OpenTags xml,                                                                                            
 ResolutionDate  varchar(1000),                                                                                      
 ParentTicketId varchar(1000),                                                                                    
 Priority varchar(10),                      
 Raisedby varchar(1000),                                                                                    
 Title VARCHAR(100),                                                        
 Escalation varchar(20),                                                                                  
 UpdatedDTM varchar(50),
 TATFlag varchar(50)                                                                   
  )                                                                                                                                                                                 
                                                                                                                         
 EXEC sp_xml_removedocument @I;                                                                          
                                                    
                                                     
--  set @OutTime=getdate()                                                                                    
--insert into spExecutionTime values ('USP_SaveTickets',@inTime,@OutTime,@ParamXML)                                                                                        
                                                                                                     
DECLARE @TicketId varchar(100), @Date varchar(100),@ParentType varchar(100),@ParentId varchar(100)                                                                        
  ,@Type varchar(500),@SubType varchar(500),@TAT VARCHAR(50),@Status VARCHAR(50),                                                                                    
  @Resolution VARCHAR(max),@MASTERTAGS XML,@OPENTAGS XML,                                                                                      
  @AssignedTo INT,@AssignedDTM varchar(50),@ResolutionDate varchar(50),--@Description varchar(max),                                                                               
   @IsRecordExists INT,@ParentTicketId int,@UpdatedDTM varchar(50)  ,                                                                   
   @Template_Id int,@CurrentStatus varchar(100)  ,@Title varchar(100),                                                                   
   @MasterXML as XML,@Actionable xml ,@FromTime varchar(50),@ToTime varchar(50),@Template_OpenTags xml,@TagParent as int ,
   @TATFlag int,@UniqueCode VARCHAR(20),@UniqueCodeCId VARCHAR(20),@Designation varchar(100)     
   ,@PreviousType varchar(200),@PreviousSubType varchar(200) ,@PreviousAssignedTo int--added by pravin rane on 26-Oct-2017 
   ,@WorkFlowID int=0--Added by pravin rane by 23-Nov-2017   
   ,@PreviousApproverID varchar(200),@CurrentApproverID varchar(200)--Added by pravin rane by 08-Jan-2018
   ,@WorkFlowSwitch int=0,@WorkFlowMasterTag xml, @totalstatusdayscnt int=0   --Added by pravin rane on 29-Jan-2018
            --@Statusdayscount added this parameter save into tickethistory table for inst_id=9 -30-jan-2018          
      select @TicketId=ISNULL(TicketId,0), @Date=[Date],@ParentType=ParentType,@ParentId=ParentId,@Type=[Type],                                                                                          
   @SubType=SubType,@TAT=TAT,@Status=[Status],@AssignedTo=AssignedTo,--@Description=Description ,                                                                                  
   @Resolution=Resolution,@MASTERTAGS=MasterTags, @OPENTAGS=OpenTags,                                                     
   @AssignedDTM=AssignedDTM,@ResolutionDate=ResolutionDate,                                                                                  
   @ParentTicketId=ParentTicketId,@UpdatedDTM=UpdatedDTM,@Title=Title ,@TATFlag=isnull(TATFlag,0)                                                              
    from #tbl_XML_Data        
    
    
    ---From Email Added By Deepak on 22Jan2018---
  --  IF (SELECT Count(ISNULL(TicketId,0)) FROM #tbl_XML_Data WHERE ISNULL(MasterTags.value('(MasterTags/tags/SenderEmail/node())[1]','varchar(100)'),'')<>'')=0 AND @TicketId=0
  --  BEGIN
		--DECLARE @From VARCHAR(100),@SenderEmail XML,@MTagNode XML
		--SELECT TOP 1 @From=Details FROM ContactDetails WHERE Inst_Id=@Inst_Id AND ParentType='Client' AND ParentId=@ParentId AND isDefault=1 AND [Type]='Email'
		--SET @SenderEmail=CAST('<SenderEmail>'+ISNULL(@From,'')+'</SenderEmail>' AS XML)
		
		--UPDATE #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@SenderEmail") as last into (/MasterTags/tags)[1]') WHERE  MasterTags IS NOT NULL
		--SET @MTagNode=CAST('<MasterTags><tags>'+CAST(@SenderEmail AS VARCHAR(100))+'</tags></MasterTags>' AS XML)
		
		--UPDATE #tbl_XML_Data set MasterTags=@MTagNode WHERE  MasterTags IS NULL
		
  --  END
    
	---Change ParentId From MasterTags ClientCode-- Added By Deepak on 20 June 2017----
	
	SELECT @UniqueCode=MasterTags.value('(MasterTags/tags/ClientCode/node())[1]','varchar(100)') FROM #tbl_XML_Data
	IF ISNULL(@UniqueCode,'')<>''
	BEGIN
		SELECT @UniqueCodeCId=Client_Id FROM ClientMaster where Inst_Id =@Inst_Id AND RTRIM(LTRIM(UniqueCode))=RTRIM(LTRIM(@UniqueCode))
		IF ISNULL(@UniqueCodeCId,'')<>''
		BEGIN
			SET @ParentId=@UniqueCodeCId
		END
		ELSE
		BEGIN
			SELECT @ParentId=MasterTags.value('(tags/parentid/node())[1]','VARCHAR(100)') FROM FeatureMaster WHERE Inst_Id =@Inst_Id AND FeatureId=4
		END
	END
	
	
	
	--Find client Designation
	--Added by pravin rane on 12-Jul-2017
	SELECT @Designation=MasterTags.value('(tags/Designation/node())[1]','varchar(100)') FROM ClientMaster where Inst_Id=@Inst_Id and Client_Id=@ParentId
	IF ISNULL(@Designation,'')<>''
	BEGIN
	select @MASTERTAGS=MasterTags from #tbl_XML_Data
	if(@MASTERTAGS is not null)
	 begin
	   UPDATE #tbl_XML_Data  SET mastertags.modify('delete(//MasterTags//tags//Designation)[1]') from #tbl_XML_Data       
	  
		  declare @mtagdesgin xml                                        
		  set @mtagdesgin=convert(xml,'<Designation>'+@Designation+'</Designation>')                                        
		  update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtagdesgin") as last into (/MasterTags/tags)[1]') where  MasterTags is not null                                        
      end  
      else                                        
      begin                                         
           update #tbl_XML_Data set MasterTags='<MasterTags><tags><Designation>'+@Designation+'</Designation></tags></MasterTags>'  where MasterTags is null                                                                 
      end                                        
		
	END
	
	
	
------End--------   
                        
                                                        
----Added By Deepak on 14 Sep 2016 for checking if Type and Sub-type exist or not-------------                                        
                                         
 IF (SELECT Count(1) FROM TagMaster WHERE Inst_Id=@Inst_Id AND TagType='TaskCategory' AND tagName=@Type AND TagIsActive=1)=0                                        
 BEGIN                                        
  SELECT @ErrorMessage=N'Type Not Exist. %s%s',@ErrorSeverity=16,@ErrorState=7                                                                             
  RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState,'#:#',@TicketId);                                                             
 END                                        
                                         
 IF(SELECT COUNT(1) FROM TagMaster T INNER JOIN TagMaster TT ON T.TagParent=TT.TagId                                        
  WHERE T.Inst_Id=@Inst_Id AND T.TagType='TaskSubCategory' AND T.tagName=@SubType                                        
  AND TT.tagName=@Type AND TT.Inst_Id=@Inst_Id AND TT.TagIsActive=1)=0                                        
 BEGIN                                        
  SELECT @ErrorMessage=N'Sub-Type Not Exist. %s%s',@ErrorSeverity=16,@ErrorState=7                                                           
  RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState,'#:#',@TicketId);                                                        
 END                                        
------------------------------------------------------------------------------------------------                                        
          
          			
							--Added by pravin rane on 16-Jan-2018 because in call center same type and subtype are exist on multiple time.			
										   declare  @BusinessType varchar(500)      
				select @BusinessType=MasterTags.value('(tags/BusinessType/node())[1]','varchar(200)') from ClientMaster where Inst_Id=@Inst_Id and Client_Id=@ParentId and ISNULL(IsActive,0)=1  
                                                        
                  if(isnull(@Type,'')='')                                          
      BEGIN                                          
    set @Type=(select top 1 tg.Tagname  from TagMaster tg inner join TagMaster tgm on tgm.TagParent=tg.TagId where tgm.tagName=@SubType  and tgm.Inst_Id=@Inst_Id                                           
    and tgm.TagIsActive=1 and tg.TagIsActive=1 ) 
    
     if(isnull(@Type,'')!='')
     begin 
        set @TagParent=(select TagId from TagMaster where tagName =@Type and TagType='TaskCategory' and Inst_Id=@Inst_Id and isnull(TagIsActive,0)=1 and (@BusinessType is null or MasterTags.value('(tags/Business/node())[1]','varchar(150)')=@BusinessType) )
     end
     else
     begin
          set @TagParent=0  
     end
   
      END  
         ELSE  
         BEGIN  
                   select @TagParent=TagId from TagMaster where tagName = @Type and TagType='TaskCategory' and Inst_Id=@Inst_Id and isnull(TagIsActive,0)=1  and (@BusinessType is null or MasterTags.value('(tags/Business/node())[1]','varchar(150)')=@BusinessType)
          END                                          
                                          
                             
        
                                                        
                        
   --vishnukanth  02 Dec 2015                                                     
   --Only For Inst 9(RF). If Type is Blank and SubType is in ([Final Income Tax Certificate],[Provisional Income Tax Certificate],[Statement of Account],[Others]) then set Type as 'General'                                                    
   --if(@Inst_Id=9 and isnull(@Type,'')='' and (@SubType  in ('Final Income Tax Certificate','Provisional Income Tax Certificate','Statement of Account','Others')))                                                    
   -- BEGIN              
   --   set @Type='General'                                                    
   -- END                                                
    --vishnukanth  02 Dec 2015                                                    
          
          
          
                                            
                                           
                                             
                                        
                                                                                                      
                                                                               
                                                    
   --vishnukanth 20 Nov 2015             
                                 
   if(@ParentId=0)                                                          
   Begin                                                  
                                           
  if exists (select * from   #tbl_XML_Data  where MasterTags.exist('(//tags/RelationshipNo)')=1)                                        
  begin                                        
                                             
     --declare @LoanNo as varchar(100)                                                          
     --select  @LoanNo=CAST( #tbl_XML_Data.MasterTags.query('data(/MasterTags/tags/RelationshipNo)') as varchar(50)) from  #tbl_XML_Data                                                   
                                                  
    --Added by pravin rane on 27 Jan 2015                                         
     declare @LoanNo as varchar(100)                                               
       select  @LoanNo=ISNULL(nullif(CAST( #tbl_XML_Data.MasterTags.query('data(/MasterTags/tags/RelationshipNo)') as varchar(50)),''),0) from  #tbl_XML_Data                                                                        
     --end                                                  
      select  top 1 @ParentId=  parentid from Relationships where CAST( MasterTags.query('data(/tags/RelationshipNo)')  as varchar(50))=@LoanNo                                                          
                                                   
                                               
               
                                                                
      if(@ParentId=0)                                                          
      Begin                                                          
      SELECT @ErrorMessage=N'Relationship Mapping Does Not Exists. %s%s',@ErrorSeverity=16,@ErrorState=7                                                                             
         RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState,'#:#',@TicketId);                                                             
                                                            
      END                                                         
    END                                                        
   End                                                          
                                                             
   --vishnukanth 20 Nov 2015                                                                             
                                                                                                      
         set @IsRecordExists=0                                                                 
--   select @IsRecordExists = COUNT(1),@TicketId=ISNULL(cm.TicketId,0)                                                                               
--   from Tickets cm                                                                                  
--   where cm.Inst_Id=@Inst_Id                                                                                                       
--   AND (ISNULL(@ParentType,ISNULL(cm.ParentType,'')) =ISNULL(cm.ParentType,''))                                                                                                    
--   AND (ISNULL(@ParentId,ISNULL(cm.ParentId,'')) =ISNULL(cm.ParentId,''))                                                                                       
--  AND (ISNULL(Date,ISNULL(CONVERT(DATETIME, cm.Date, 11) ,'')) =ISNULL(CONVERT(DATETIME, cm.Date, 11),''))                                                                                
----AND (@Date IS NULL OR ISNULL(convert(datetime,CONVERT(VARCHAR(11),cm.Date,106)),'')=convert(datetime,CONVERT(VARCHAR(11),@Date,106)))                                                    
--   --AND (ISNULL(Date,ISNULL(cm.Date,'')) =ISNULL(cm.Date,''))                                                                                
--   AND (@Type IS NULL OR ISNULL(cm.Type,'')=@Type)                                        
--   AND (@SubType IS NULL OR ISNULL(cm.SubType,'')=@SubType)                                                 
--   AND (@TAT IS NULL OR ISNULL(convert(datetime,CONVERT(VARCHAR(11),cm.TAT,106)),'')=convert(datetime,CONVERT(VARCHAR(11),@TAT,106)))                                                                                                 
--   AND (@Status IS NULL OR ISNULL(cm.Status,'')=@Status)                                                                                      
--  AND (@AssignedTo IS NULL OR ISNULL(cm.AssignedTo,0)=@AssignedTo)                                                                                      
--   AND (@AssignedDTM IS NULL OR ISNULL(convert(datetime,CONVERT(VARCHAR(11),cm.AssignedDTM,106)),'')=convert(datetime,CONVERT(VARCHAR(11),@AssignedDTM,106)))                                                                                               
  
   
--   AND (@ResolutionDate IS NULL OR ISNULL(convert(datetime,CONVERT(VARCHAR(11),cm.ResolutionDate,106)),'')=convert(datetime,CONVERT(VARCHAR(11),@ResolutionDate,106)))                      
         
            
--   AND (ISNULL(@ParentTicketId,ISNULL(cm.ParentTicketId,0)) =ISNULL(cm.ParentTicketId,0))                                                                     
--   AND (@Description IS NULL OR ISNULL(cm.Description,'')=@Description)                                                      
--   AND (@Resolution IS NULL OR ISNULL(CM.Resolution,'')= @Resolution)                                                                  
--   AND (@Title IS NULL OR ISNULL(CM.Title,'')= @Title)                                                                                        
--   AND (ISNULL(@TicketId,0)!=cm.TicketId)                                                                              
--   GROUP BY cm.TicketId                                                  
                                                                
                                                                                                  
IF(@IsRecordExists!=0)                                                                                                  
 BEGIN                                                                                                   
  SELECT @ErrorMessage=N'Records already exists. %s%s',@ErrorSeverity=12,@ErrorState=4                                                     
                                                                             
                                                                              
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState,'#:#',@TicketId);                                                                               
                                                                                             
 END                                                                                              
 ELSE                                                  
 BEGIN                                                              
                                                                         
                                                                      
 if(@TicketId=0) -- Insert                     
   Begin                                             
                                           
    --Added By Pravin Rane on 11 May 2016                                        
    set @FromTime=(Select ISNULL(MasterTags.value('(/tags/FromTime/node())[1]','varchar(15)'),'') from FeatureMaster where Inst_Id=@Inst_Id and FeatureDesc='Working Hours' and FeatureId=31 and MasterTags is not null and IsActive=1)                       
                 
    set @ToTime=(Select ISNULL(MasterTags.value('(/tags/ToTime/node())[1]','varchar(15)'),'') from FeatureMaster where Inst_Id=@Inst_Id and FeatureDesc='Working Hours' and FeatureId=31 and MasterTags is not null and IsActive=1)                            
            
   if(@FromTime<>'' and @ToTime <>'')                                        
    begin                                         
       declare  @TicketCreatedTime varchar(10),@Date1 datetime                                        
       set @TicketCreatedTime=(select convert(char(8),GETDATE(), 108))                                        
       if(@TicketCreatedTime<>'')                                        
       begin                                         
    select CONVERT(varchar,@FromTime,108) as FromTime,CONVERT(varchar,@ToTime,108) as ToTime,                                        
    CONVERT(varchar,@TicketCreatedTime,108)as TicketCreatedTime into #Comparetime                                        
           if( select COUNT(1) from #Comparetime where  CONVERT(varchar,TicketCreatedTime,108)<CONVERT(varchar,FromTime,108) and CONVERT(varchar,TicketCreatedTime,108)<CONVERT(varchar,ToTime,108))<=0                                        
     begin                                         
                 set @Date=DATEADD(day, 1, convert(nvarchar(10),GETDATE(),126));--Set next day date                                        
                 --select @Date as NextDayDate                                        
                  set @Date=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,cast(@Date as datetime),0,@ParentId,@ParentType), 120)                                        
              end                                        
          else                                         
                   begin                                         
 set @Date=GETDATE()                                        
                   end                                        
       end                                        
     end                                        
    else                                        
     begin                                         
     set @Date=GETDATE();                                         
    end                                        
                          
   --Added By Pravin Rane on 11 May 2016                                        
                                                                    
      set  @CurrentStatus=NULL;                                                                      
     -- set @Date=GETDATE();  -- vishnukanth 11 Dec 2015. While Inserting new record it will be getdate(). Update is not allowed to this field.                                            
      If(isnull(@AssignedTo,0)!=0)                                          
        BEGIN                                          
        set @AssignedDTM=GETDATE();                                          
        END                                          
      ELSE                                          
       BEGIN                               
        set @AssignedDTM=NULL;                                          
        set @AssignedTo=NULL;                                          
       END                                         
                                                  
   End                                                                 
   ELSE  --Update                                                                   
   Begin                                                                      
     --select @CurrentStatus = [status] from Tickets where TicketId=@TicketId    
         select @CurrentStatus = [status],@PreviousType=Type,@PreviousSubType=SubType,@PreviousAssignedTo=ISNULL(AssignedTo,0) from Tickets where TicketId=@TicketId  --Added by pravin rane on 18-Oct-2017 because mail should be sent when change the type subtype for RF                                         
                                               
      If(isnull(@AssignedTo,0)!=0)                                       
        BEGIN                               
        declare @PrevAssignedTo int;                                          
        select  @PrevAssignedTo= AssignedTo from Tickets where TicketId=@TicketId                                          
        If(ISNULL(@PrevAssignedTo,0)!= ISNULL( @AssignedTo , 0 ))                                          
          BEGIN                                         
          set @AssignedDTM=GETDATE();                                          
          END                                               ELSE                                        
           BEGIN                                        
            select @AssignedDTM= AssignedDTM from Tickets where TicketId=@TicketId                                        
           END                                        
        END                       
      ELSE                                          
       BEGIN                                          
        set @AssignedDTM=NULL;                                          
        set @AssignedTo=NULL;                                          
       END                                          
                                        
   End                                               
    DECLARE @DueDateOverridable as bit                                        
   SELECT @DueDateOverridable=COUNT(1) from FeatureMaster where FeatureId=46 and FeatureDesc like 'Due Date Overridable' and Inst_Id=@Inst_Id and IsActive=1                                        
   DECLARE @MasterTAT varchar(100)                      
   IF (@DueDateOverridable=0)                                           
   BEGIN                                         
  IF(ISNULL(@SubType,'')!='')                                                          
  BEGIN                                                                            
                                                                                 
   SELECT @MasterTAT=CAST(MasterTags.query('tags/TAT/text()') as varchar(100)) from TagMaster                                                    
   WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
                                                                                    
                                                   
                                                                       
   -- IF(ISNULL(@MasterTAT,'')!='')                                                                            
   -- BEGIN                                                                            
   --    select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,cast(@Date as datetime),CAST(@MasterTAT as int)), 120)                                                                             
   -- END                    
   --END                                                                          
    declare @ReOpenStatus int
    set @ReOpenStatus=(select COUNT(1) from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=49 and IsActive=1 and FeatureDesc='Re-Open Ticket Status')                      
   --Added By Pravin Rane on 26-Dec-2016 only for AP when reopen Close ticket then set date getdate and change the status and TAT also                      
   if(@ReOpenStatus>0 and @TicketId>0 and @Status='Re-Open')                      
   begin                       
    select @CurrentStatus = [status] from Tickets where TicketId=@TicketId and Inst_Id=@Inst_Id                       
    if(@CurrentStatus='Close' and @Status='Re-Open')                      
    begin                       
     set @Date=GETDATE()                      
     --set @AssignedDTM=NULL;                                          
     --set @AssignedTo=NULL;                       
     update #tbl_XML_Data set Resolution=null,Escalation=null where TicketId=@TicketId                      
                          
    end                      
  end                               
   ---End                                                                          
   IF(ISNULL(@MasterTAT,'')!='')                                                                            
   BEGIN                                                                         
    select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,cast(@Date as datetime),CAST(@MasterTAT as int),@ParentId,@ParentType), 120)                                                    
   END                       
  END                      
 END                    
 ELSE                    
 BEGIN                     
  --Added By Pravin Rane on 26-Dec-2016 only for AP when reopen Close ticket then set date getdate and change the status and TAT also                      
 if(@ReOpenStatus>0 and @TicketId>0 and @Status='Re-Open')                      
    begin                       
     select @CurrentStatus = [status] from Tickets where TicketId=@TicketId and Inst_Id =@Inst_Id                       
     if(@CurrentStatus='Close' and @Status='Re-Open')                      
     begin                       
      set @Date=GETDATE()                      
      --set @AssignedDTM=NULL;                                          
      --set @AssignedTo=NULL;                       
      update #tbl_XML_Data set Resolution=null,Escalation=null where TicketId=@TicketId                      
                           
     end                      
    end                       
                     
 declare @datetoday as Datetime                    
 set @datetoday=CONVERT(DAtetime, convert(date,GETDATE()))                      
  IF(ISNULL(@TAT,@datetoday)=@datetoday or @TATFlag=0)   --For congnitive                 
  BEGIN                    
   IF(ISNULL(@SubType,'')!='')                                                          
   BEGIN                       
                                                                                  
    SELECT @MasterTAT=CAST(MasterTags.query('tags/TAT/text()') as varchar(100)) from TagMaster                                                                             
    WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
                                                                        
    -- IF(ISNULL(@MasterTAT,'')!='')                                                                            
    -- BEGIN                                                                            
    --    select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,cast(@Date as datetime),CAST(@MasterTAT as int)), 120)                                                                             
    -- END                    
    --END                                                                            
                              
                       
                                
---End                                                                          
    IF(ISNULL(@MasterTAT,'')!='')                                                                            
    BEGIN                                                                         
     select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,cast(@Date as datetime),CAST(@MasterTAT as int),@ParentId,@ParentType), 120)                                                    
    END                                                                                
   END                       
  END      
                
  END                        
                           
    --------------------------------                  
                                  
 IF(ISNULL(@SubType,'')!='')                                                          
 BEGIN    
 set @AssignedTo=isnull(nullif(@AssignedTo,''),0)        
  If(isnull(@AssignedTo,0)=0 or @TATFlag=0)  --@TATFlag=0 This condition check for congitive tickets                                      
  BEGIN                                  
   DECLARE @MasterAssigned varchar(100)                                  
                                  
   --SELECT @MasterAssigned=CAST(MasterTags.query('tags/DefaultAssigneeId/text()') as varchar(100)) from TagMaster                                  
   --WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
   
    --added by pravin rane on 04-Jan-2017 for call center dissussed with vipul(Temperary solution find business type through tickets parentid in ClientMaster table)                           
        
		if(@Inst_Id=20)
			begin
			 --   declare  @BusinessType varchar(500)      
				--select @BusinessType=MasterTags.value('(tags/BusinessType/node())[1]','varchar(200)') from ClientMaster where Inst_Id=@Inst_Id and Client_Id=@ParentId
				SELECT @MasterAssigned=CAST(MasterTags.query('tags/DefaultAssigneeId/text()') as varchar(100)) from TagMaster                                  
				WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
				and isnull(MasterTags.value('(tags/Business/node())[1]','varchar(200)'),'')=isnull(@BusinessType,'')
			end --Added by pravin rane on 04_Jan_2017 temperary 
			    else
			    begin
 	         		SELECT @MasterAssigned=CAST(MasterTags.query('tags/DefaultAssigneeId/text()') as varchar(100)) from TagMaster                                  
					WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
		        end   
   
   
   
   
   
                                  
   IF(ISNULL(@MasterAssigned,'')!='')                                  
   BEGIN                                  
    select @AssignedTo=@MasterAssigned                          
    select @AssignedDTM=GETDATE()                          
    select @Status='Assign'                          
   END                                  
  END                                  
 END                     
                                     
   --------------------------------                                
                                     
--Commented by Awadha Taddy on 18-Nov-2015 and added the following section                                             
--exec [Get_Workflow] @inst_Id,1,@CurrentStatus,@Status                                                                      
                                                                         
--   select @status=nextstatus,@Template_Id=Template_Id                                                                       
--   from tmpWorkflow     

--Added by pravin rane on --23-Nov-2017
    SELECT @WorkFlowID=MasterTags.value('(tags/WorkFlowId/node())[1]','varchar(10)'),
    @WorkFlowSwitch=MasterTags.value('(tags/WorkFlowSwitch/node())[1]','varchar(10)')--Added by pravin rane on 29-Jan-2018
      from TagMaster                                  
    WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  

	if(isnull(@WorkFlowID,'')='')
	begin 
	set @WorkFlowID=1
	end
	
	if(isnull(@WorkFlowSwitch,'')='')
	begin 
	set @WorkFlowSwitch=0
	end


--Added by pravin rane on 30-Jan-2018(following code added becuase status days calculate base on StatusChangeDate from specific category's
	if(@WorkFlowSwitch=0 and @TicketId>0 and @Inst_Id=@Inst_Id)
	begin
    UPDATE #tbl_XML_Data                                     
    SET mastertags.modify('delete(//MasterTags//tags//StatusChangeDate)[1]') from #tbl_XML_Data  where                                        
    MasterTags.value('(MasterTags/tags/StatusChangeDate/node())[1]','varchar(100)') is not  null  
    end
								  
--Ended by pravin rane on 30-Jan-2018


--Added by pravin on 31-Jan-2018 for inst_id=9 when change category and subcategory then set status='open'(as discussed with vipul and dhiraj)


if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=82 and IsActive=1)
    begin
   
		if(isnull(@PreviousType,'')<>@Type or isnull(@PreviousSubType,'')<>@SubType)		
		begin
		set @CurrentStatus=''
        end

      end
--Ended 
                                     
   --IF EXISTS(select NextStatus from [FN_WORKFLOW_STATUS](@inst_Id,1,@CurrentStatus,@Status))   
   
   --Check @WorkFlowSwitch node value for inst_id=9. Calculate tat status wise when @WorkFlowSwitch node value is 1
   
 
 if(@WorkFlowSwitch=0)--Added by pravin rane on 29-Jan-2018
 begin
     IF EXISTS(select NextStatus from [FN_WORKFLOW_STATUS](@inst_Id,@WorkFlowID,@CurrentStatus,@Status))                                                                      
     BEGIN                                                              
 -- select @Status=NextStatus,@Template_Id=Template_Id from [FN_WORKFLOW_STATUS](@inst_Id,1,@CurrentStatus,@Status)                                       
 --Added By Pravin Rane 3-Feb-2016                                           
   --select @Status=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags from [FN_WORKFLOW_STATUS](@inst_Id,1,@CurrentStatus,@Status)                                         
       --select @Status=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags from [FN_WORKFLOW_STATUS](@inst_Id,@WorkFlowID,@CurrentStatus,@Status)    --Added by pravin rane on 23-Nov-2017 Now workflow is defined in subcategory mastertags                                     
    select @Status=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags from [FN_WORKFLOW_STATUS](@inst_Id,@WorkFlowID,@CurrentStatus,@Status)    --Added by pravin rane on 29-Jan-2018 Now workflow is defined in subcategory mastertags                                     
     declare @ActionableValue varchar(1)                                         
     set @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
   if(@Actionable is not null)                                        
       begin        
       select @MASTERTAGS=MasterTags from #tbl_XML_Data                                
     if(@MASTERTAGS is not null)                                        
     begin                                        
     --For Edit delete existing node in #tbl_XML_Data table                                        
         UPDATE #tbl_XML_Data                                        
    SET mastertags.modify('delete(//MasterTags//tags//Actionable)[1]') from #tbl_XML_Data  where                                        
    MasterTags.value('(MasterTags/tags/Actionable/node())[1]','varchar(100)') is not  null                                        
                                             --declare @ActionableValue varchar(1)                                        
      declare @mtag xml                                        
      --set @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
      set @mtag=convert(xml,'<Actionable>'+@ActionableValue+'</Actionable>')                                        
      update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtag") as last into (/MasterTags/tags)[1]') where  MasterTags is not null                                        
     end                                        
                                             
      else                                        
      begin                                         
      update #tbl_XML_Data set MasterTags='<MasterTags><tags><Actionable>'+@ActionableValue+'</Actionable></tags></MasterTags>'  where MasterTags is null                                                                 
      end                                        
        end                         
        --End                                                           
     END                                                             
     ELSE                                                              
     BEGIN                                                              
  SET @Status=@CurrentStatus                                                              
     END    
 end
  
   
     --select @CurrentStatus                                                                
         --Added by pravin rane on 27-July-2017     
         --This block added because when change status hold to any status then calculate total days of hold status                   
         declare @holddate varchar(11),@holddayscnt int=0,@totalholddayscnt int=0
         --if(@Inst_Id=9)
         --begin
          select  @MASTERTAGS=MasterTags from #tbl_XML_Data
          
          
                 if(LOWER(@Status)='hold')
			 begin 
	
	           set @holddate=(select CONVERT(varchar(11),getdate(),113))
	          
	         
				  if(@MASTERTAGS is not null)                                        
				     begin 
				  --Delete existing Holddate node
					   UPDATE #tbl_XML_Data                                        
					   SET mastertags.modify('delete(//MasterTags//tags//HoldDate)[1]') from #tbl_XML_Data  where                                        
					   MasterTags.value('(MasterTags/tags/HoldDate/node())[1]','varchar(100)') is not  null  
     
						declare @Holdtag xml  
						set @Holdtag=convert(xml,'<HoldDate>'+@holddate+'</HoldDate>')                                        
						update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@Holdtag") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
				  end
				  else                                        
				  begin   
		                                    
				  update #tbl_XML_Data set MasterTags='<MasterTags><tags><HoldDate>'+@holddate+'</HoldDate></tags></MasterTags>'  where MasterTags is null                                                                 
			      end   
				  
			 end
			 
          
          --when change status  hold to any status then update days count
			   if(LOWER(@CurrentStatus)='hold' and LOWER(@Status)<>'hold' and @TicketId>0)
			 begin
		
			   declare  @prevholddate varchar(100),@currentholddayscnt int
	           select @prevholddate= MasterTags.value('(tags/HoldDate/node())[1]','varchar(100)')
	           ,@holddayscnt=ISNULL(MasterTags.value('(tags/HoldDaysCount/node())[1]','varchar(100)'),0)
	           from Tickets where
	           ticketid=@TicketId  and inst_id=@Inst_Id     
				  
				  if(isnull(@prevholddate,'')='')
				  begin
				  set @prevholddate=0 
				  end
				--set @currentholddayscnt=(SELECT DATEDIFF(day, @prevholddate, CONVERT(varchar(11),getdate(),113)))
				
				set @currentholddayscnt=isnull(dbo.[fn_DiffInDates](@Inst_Id,@prevholddate,CONVERT(varchar(11),getdate(),113),@ParentId,@ParentType),0)
				
				set @totalholddayscnt=@holddayscnt+@currentholddayscnt
				  if(@MASTERTAGS is not null)                                        
				  begin 
				  --Delete existing Holddate node
					   UPDATE #tbl_XML_Data                                        
					   SET mastertags.modify('delete(//MasterTags//tags//HoldDaysCount)[1]') from #tbl_XML_Data  where                                        
					   MasterTags.value('(MasterTags/tags/HoldDaysCount/node())[1]','varchar(100)') is not  null  
     
						declare @Holddayscount xml  
						set @Holddayscount=convert(xml,'<HoldDaysCount>'+cast(@totalholddayscnt as varchar(10))+'</HoldDaysCount>')                                        
						update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@Holddayscount") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
				  end
					  else                                        
					  begin                                         
					  update #tbl_XML_Data set MasterTags='<MasterTags><tags><HoldDaysCount>'+CAST(@totalholddayscnt AS VARCHAR(10))+'</HoldDaysCount></tags></MasterTags>'  where MasterTags is null                                                                 
			      end   
				  
			 end
          
          
      
			 
         --end
          --End Added by pravin rane on 27-July-2017  
                                                     
                                         
                                                                         
--print @status                                                                      
--print  @Template_Id                                                                        
    
    --Added by pravin rane on 18-Oct-2017 when user change type or subtype then mail should be sent to client
                                                                              
     if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=72 and IsActive=1)
    begin
    
		if( ((isnull(@PreviousType,'')<>@Type or isnull(@PreviousSubType,'')<>@SubType) and @TicketId>0) or(@TicketId=0 and ISNULL(@type,'')<>'Unassigned' and ISNULL(@SubType,'')<>'Unassigned'))
		begin
	                 
	                    --Added by pravin rane on 12-Feb-2018 when pulse category ticket is re-open and change category and subcategory then delete PulseID node in master tag column.
	                 declare @PulseID varchar(100)
	                 select @PulseID = MasterTags.value('(MasterTags/tags/PulseID/node())[1]','varchar(100)')  from #tbl_XML_Data where  MasterTags.value('(MasterTags/tags/PulseID/node())[1]','varchar(100)') is not  null and MasterTags is not null
	                 if(isnull(@PulseID,'')<>'' and @Inst_Id=9)
	                 begin
	                 UPDATE #tbl_XML_Data                                        
							SET mastertags.modify('delete(//MasterTags//tags//PulseID)[1]') from #tbl_XML_Data  where                                        
							MasterTags.value('(MasterTags/tags/PulseID/node())[1]','varchar(100)') is not  null  
	                 end
	                 --End
	                 
	                 
	                 
	                 
	                --Following code added temperarily for inst_id=9 becuase from front end TATFlag=1 code is not moved on uat or live server.tat is calculated by currentdate and subcategory wise TAT
	             --Added by pravin rane on 01-Jan-2018
	             
	             --start following  block use tat calculated as getdatewise for normal subcategory
	      --       if(@Inst_Id=9 and @WorkFlowSwitch=0)
	      --       begin
	             
					  --SELECT @MasterTAT=CAST(MasterTags.query('tags/TAT/text()') as varchar(100)) from TagMaster                                                                             
					  --WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
					  --  IF(ISNULL(@MasterTAT,'')!='')                                                                            
       --                 BEGIN   
					  --    select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,GETDATE(),CAST(@MasterTAT as int),@ParentId,@ParentType), 120)   
       --                 END
	      --       end
	             
	             --Added by pravin rane on 07-Feb-2018 because calculate  TAT categorywise and intimation send to client
	             
	                    if(@Inst_Id=9)
	             begin
	             
					  SELECT @MasterTAT=CAST(MasterTags.query('tags/TAT/text()') as varchar(100)) from TagMaster                                                                             
					  WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
					    IF(ISNULL(@MasterTAT,'')!='')                                                                            
                        BEGIN   
					      select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,GETDATE(),CAST(@MasterTAT as int),@ParentId,@ParentType), 120)   
                        END
                        
                        if(isnull(@TAT,'')<>'')
                        begin
                        
                         select  @MASTERTAGS=MasterTags from #tbl_XML_Data
                        if(@MASTERTAGS is not null)
                        begin
                        
							UPDATE #tbl_XML_Data                                        
							SET mastertags.modify('delete(//MasterTags//tags//TicketTAT)[1]') from #tbl_XML_Data  where                                        
							MasterTags.value('(MasterTags/tags/TicketTAT/node())[1]','varchar(100)') is not  null  
	     
							declare @TicketTAT xml  
							set  @TicketTAT=convert(xml,'<TicketTAT>'+cast(@TAT as varchar(20))+'</TicketTAT>')                                        
							update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@TicketTAT") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
				        end
				  	   else                                        
						  begin                                         
							   update #tbl_XML_Data set MasterTags='<MasterTags><tags><TicketTAT>'+CAST(@TAT AS VARCHAR(20))+'</TicketTAT></tags></MasterTags>'  where MasterTags is null                                                                 
						  end   
                        
                        end
                        
	             end
	             
	             ---
	        
	        
	             
	
	--End added by pravin rane on 29-Jan-2018 
	               
              declare @OpenTemplateCategoryTags varchar(max) ,@OpenTagsCategory xml              
              
                       select  @OpenTagsCategory=OpenTags from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=72 and IsActive=1                 
                   
                          if(@Template_OpenTags is null)  --If Template opentag is null then assign FeatureMaster OpenTag                
                          begin 
                          set @Template_OpenTags= @OpenTagsCategory                 
                          end                  
                          else                  
                          begin   
                          		
			                create table #CategoryTemplates
								(
								TemplateID int
								)
			select @OpenTagsCategory as CategoryOpenTag,@Template_OpenTags as Template_OpenTag  into #CategoryOpentag

		insert into #CategoryTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #CategoryOpentag CategoryOpenTag
		cross apply CategoryOpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
		
		insert into #CategoryTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #CategoryOpentag CategoryTemplatesOpenTag
		cross apply CategoryTemplatesOpenTag.Template_OpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			
			declare @CategoryTemplateIDCounter int,@CategoryTemplateLoopCounter int=1,@CategoryTempID varchar(50),@CatTempID varchar(50)   
          select distinct TemplateID, IDENTITY( int ) AS ID into #tempCategory from #CategoryTemplates
          
			  select @CategoryTemplateIDCounter=(select COUNT(*) from #tempCategory)
			 set @Template_OpenTags=null
			   WHILE(@CategoryTemplateLoopCounter <= @CategoryTemplateIDCounter)
			  begin
			  set @CatTempID=(select ISNULL(TemplateID,0) from #tempCategory where ID=@CategoryTemplateLoopCounter)
			   if(@OpenTemplateCategoryTags IS NULL)
                  begin
                  --set @OpenTags='<![CDATA[<CoApplicant ID="'+@CoApplicantID+'">'+@CoApplicantName+'</CoApplicant>]]>'
                  set @OpenTemplateCategoryTags='<Template_Id>'+@CatTempID+'</Template_Id>'
                  end
                 else
                begin
                      set @OpenTemplateCategoryTags=@OpenTemplateCategoryTags+'<Template_Id>'+@CatTempID+'</Template_Id>'
                end
            SET @CategoryTemplateLoopCounter = @CategoryTemplateLoopCounter + 1
      
          end
          
        set @Template_OpenTags=CONVERT(xml,'<otag><tags type="Template_Id">'+@OpenTemplateCategoryTags+'</tags></otag>')
		    
     end
		end
end  







       --Added by pravin rane on 01-Jan-2018 tat calculate should be status wise for specific category's(ROI Approval,Foreclosure Approval)
	              if(@Inst_Id=9 and @WorkFlowSwitch=1)
	             begin
	                 declare @WorkFlowOpenTag xml, @OpenTemplateWorkFlowTags varchar(max)
	             IF EXISTS(select NextStatus from [FN_WORKFLOW_STATUS](@inst_Id,@WorkFlowID,@CurrentStatus,@Status))                                                                      
                 BEGIN  
	                 
					  select @Status=NextStatus,@Template_Id=Template_Id,@WorkFlowMasterTag=Actionable,@WorkFlowOpenTag=Template_OpenTags from [FN_WORKFLOW_STATUS](@inst_Id,@WorkFlowID,@CurrentStatus,@Status)     --Added by pravin rane on 29-Jan-2018 Now workflow is defined in subcategory mastertags                                     
					 declare @statusActionableValue varchar(1)                                         
					 set @statusActionableValue=(select @WorkFlowMasterTag.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
				   if(@WorkFlowMasterTag is not null)                                        
					   begin        
					        select @MASTERTAGS=MasterTags from #tbl_XML_Data                                
					 if(@MASTERTAGS is not null)                                        
					   begin                                        
					 --For Edit delete existing node in #tbl_XML_Data table                                        
						 UPDATE #tbl_XML_Data                                        
					   SET mastertags.modify('delete(//MasterTags//tags//Actionable)[1]') from #tbl_XML_Data  where                                        
					   MasterTags.value('(MasterTags/tags/Actionable/node())[1]','varchar(100)') is not  null                                        
															 --declare @ActionableValue varchar(1)                                        
					   declare @mtagstatus xml                                        
					  --set @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
					   set @mtagstatus=convert(xml,'<Actionable>'+@statusActionableValue+'</Actionable>')                                        
					   update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtagstatus") as last into (/MasterTags/tags)[1]') where  MasterTags is not null                                        
					 end                                        
                                             
					  else                                        
					  begin                                         
					  update #tbl_XML_Data set MasterTags='<MasterTags><tags><Actionable>'+@statusActionableValue+'</Actionable></tags></MasterTags>'  where MasterTags is null                                                                 
					  end                                        
						end                         
						--End   
						
						--Added by pravin rane on 08-Feb-2018 send mail to client next status wise(template define in workflow opentag column)
								
					   if(@WorkFlowOpenTag is null)        
                          begin 
                          set @Template_OpenTags= @WorkFlowMasterTag                 
                          end                  
                          else                  
                          begin   
                          		
			                create table #WorkFlowStatusTemplate
								(
								TemplateID int
								)
			select @WorkFlowOpenTag as WorkFlowStatusOpentag,@Template_OpenTags as Template_OpenTag  into #WorkFlowStatusOpentag

		insert into #WorkFlowStatusTemplate
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #WorkFlowStatusOpentag WorkFlowStatusOpentag
		cross apply WorkFlowStatusOpentag.nodes('otag/tags/Template_Id') AS FM(V) 
		
		insert into #WorkFlowStatusTemplate
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #WorkFlowStatusOpentag WorkFlowStatusTemplateOpenTag
		cross apply WorkFlowStatusTemplateOpenTag.Template_OpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			
			declare @WorkFlowStatusTemplateIDCounter int,@WorkFlowStatusLoopCounter int=1,@WorkFlowStatusCatTempID varchar(50)   
          select distinct TemplateID, IDENTITY( int ) AS ID into #tempWorkFlowStatus from #WorkFlowStatusTemplate
          
			  select @WorkFlowStatusTemplateIDCounter=(select COUNT(*) from #tempWorkFlowStatus)
			 set @Template_OpenTags=null
			   WHILE(@WorkFlowStatusLoopCounter <= @WorkFlowStatusTemplateIDCounter)
			  begin
			  set @WorkFlowStatusCatTempID=(select ISNULL(TemplateID,0) from #tempWorkFlowStatus where ID=@WorkFlowStatusLoopCounter)
			   if(@OpenTemplateWorkFlowTags IS NULL)
                  begin
                  --set @OpenTags='<![CDATA[<CoApplicant ID="'+@CoApplicantID+'">'+@CoApplicantName+'</CoApplicant>]]>'
                  set @OpenTemplateWorkFlowTags='<Template_Id>'+@WorkFlowStatusCatTempID+'</Template_Id>'
                  end
                 else
                begin
                      set @OpenTemplateWorkFlowTags=@OpenTemplateWorkFlowTags+'<Template_Id>'+@WorkFlowStatusCatTempID+'</Template_Id>'
                end
            SET @WorkFlowStatusLoopCounter = @WorkFlowStatusLoopCounter + 1
      
          end
          
        set @Template_OpenTags=CONVERT(xml,'<otag><tags type="Template_Id">'+@OpenTemplateWorkFlowTags+'</tags></otag>')
		    
     end
						
						
						
						                                                        
					 END                                                             
					 ELSE                                                              
					 BEGIN                                                              
				       SET @Status=@CurrentStatus                                                              
					 END    
					 
				
					 
					   --Status wise tat calculated
					  
					    
					    if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=81 and IsActive=1)
					    begin
					    
					      set @MasterTAT=(select @WorkFlowMasterTag.value('(tags/TAT/node())[1]','varchar(10)')) --Getting status wise TAT
					    
					    IF(ISNULL(@MasterTAT,'')!='' and isnull(@CurrentStatus,'')<>@Status)    
					                                                                     
                        BEGIN   
								select @TAT=CONVERT(VARCHAR(10),dbo.fn_AddBizDays(@Inst_Id,GETDATE(),CAST(@MasterTAT as int),@ParentId,@ParentType), 120)   
							
							  declare @statuschangedate varchar(11),@statuschangedayscnt int=0
							  --When status change then date and date difference stored into xml node
							    set @statuschangedate=(select CONVERT(varchar(11),getdate(),113))
	                    
	               
	                    
	                           select   @MASTERTAGS=MasterTags from #tbl_XML_Data --Getting updated mastertags from #tbl_XML_Data table 
	          
							   if(@MASTERTAGS is not null)                                        
				                begin 
				           --Delete existing StatusChangeDate node
								  UPDATE #tbl_XML_Data                                        
								  SET mastertags.modify('delete(//MasterTags//tags//StatusChangeDate)[1]') from #tbl_XML_Data  where                                        
								  MasterTags.value('(MasterTags/tags/StatusChangeDate/node())[1]','varchar(100)') is not  null  
								  
								  --  UPDATE #tbl_XML_Data                                        
								  --SET mastertags.modify('delete(//MasterTags//tags//WorkFlowId)[1]') from #tbl_XML_Data  where                                        
								  --MasterTags.value('(MasterTags/tags/WorkFlowId/node())[1]','varchar(100)') is not  null  
     
     
								  declare @Statustag xml  
								--  set @Statustag=convert(xml,'<StatusChangeDate>'+@statuschangedate+'</StatusChangeDate><WorkFlowId>'+cast(@WorkFlowID as varchar(10))+'</WorkFlowId>')                                        
								    set @Statustag=convert(xml,'<StatusChangeDate>'+@statuschangedate+'</StatusChangeDate>')                                        
								  update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@Statustag") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
					           end
							   else                                        
							  begin   
							--	  update #tbl_XML_Data set MasterTags='<MasterTags><tags><StatusChangeDate>'+@statuschangedate+'</StatusChangeDate><WorkFlowId>'+cast(@WorkFlowID as varchar(10))+'</WorkFlowId></tags></MasterTags>'  where MasterTags is null                                                                 
							   update #tbl_XML_Data set MasterTags='<MasterTags><tags><StatusChangeDate>'+@statuschangedate+'</StatusChangeDate></tags></MasterTags>'  where MasterTags is null                                                                 
							  end   
					  
					  --Calculate total days count
			               declare  @prevstatusdate varchar(100),@currentstatusdayscnt int
						   select @prevstatusdate= MasterTags.value('(tags/StatusChangeDate/node())[1]','varchar(100)')
						   --,@statuschangedayscnt=ISNULL(MasterTags.value('(tags/StatusChangeDays/node())[1]','varchar(100)'),0)
						   from Tickets where
						   ticketid=@TicketId  and inst_id=@Inst_Id     
				  
				
				  
				  if(isnull(@prevstatusdate,'')='')
				  begin
				  set @prevstatusdate=(select CONVERT(varchar(11),getdate(),113))
				  end
				  
				   
			
				
					set  @totalstatusdayscnt=isnull(dbo.[fn_DiffInDates](@Inst_Id,@prevstatusdate,CONVERT(varchar(11),getdate(),113),@ParentId,@ParentType),0)
					--Above commented point will discussed with vipul patel tomorrow
					--select isnull(dbo.[fn_DiffInDates](9,CONVERT(varchar(11),getdate(),113),CONVERT(varchar(11),getdate(),113),3469825,'Client'),0)
					--select 	 @currentstatusdayscnt =DATEDIFF(DAY, CONVERT(varchar(11),getdate(),113),CONVERT(varchar(11),getdate(),113))
					if(@totalstatusdayscnt>0)
					begin
					set  @totalstatusdayscnt= @totalstatusdayscnt-1--when pass same date then output will come 1 it should be zero
					end
					
					--set @totalstatusdayscnt=@statuschangedayscnt+@currentstatusdayscnt
					
							--set @Statusdayscount=convert(xml,'<StatusChangeDays>'+cast(@totalstatusdayscnt as varchar(10))+'</StatusChangeDays>')   
					
				  --select   @MASTERTAGS=MasterTags from #tbl_XML_Data--Getting updated mastertags from #tbl_XML_Data table
				  --   if(@MASTERTAGS is not null)                                        
				  --   begin 
				  ----Delete existing StatusChangeDays node
						--   --UPDATE #tbl_XML_Data                                        
						--   --SET mastertags.modify('delete(//MasterTags//tags//StatusChangeDays)[1]') from #tbl_XML_Data  where                                        
						--   --MasterTags.value('(MasterTags/tags/StatusChangeDays/node())[1]','varchar(100)') is not  null  
	     
						--	declare @Statusdayscount xml  
						--	set @Statusdayscount=convert(xml,'<StatusChangeDays>'+cast(@totalstatusdayscnt as varchar(10))+'</StatusChangeDays>')                                        
						--	update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@Statusdayscount") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
				  --    end
					 -- else                                        
					 -- begin                                         
						--	 update #tbl_XML_Data set MasterTags='<MasterTags><tags><StatusChangeDays>'+CAST(@totalstatusdayscnt AS VARCHAR(10))+'</StatusChangeDays></tags></MasterTags>'  where MasterTags is null                                                                 
			   --       end   
                        END
		                   
			
						
	                   end
	             end





--Added by pravin rane on 26-Oct-2017 when user assign ticket then mail should be sent to user
                                                                              
     if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=73 and IsActive=1)
    begin
		if(((@PreviousAssignedTo<>@AssignedTo) and @TicketId>0) or(@TicketId=0 and ISNULL(@AssignedTo,0)>0))
		begin
	               
                        declare @OpenTemplateAssignedTo varchar(max) ,@OpenTagsAssignedTo xml               
                        select  @OpenTagsAssignedTo=OpenTags from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=73 and IsActive=1                 
                   
                          if(@Template_OpenTags is null)  --If Template opentag is null then assign FeatureMaster OpenTag                
                          begin 
                          set @Template_OpenTags= @OpenTagsAssignedTo                 
                          end                  
                          else                  
                          begin   
                          		
			                create table #AssingedTemplates
						    (
								TemplateID int
							)
			          select @OpenTagsAssignedTo as AssingedToOpenTag,@Template_OpenTags as Template_OpenTag  into #AssingedToOpentag


		insert into #AssingedTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #AssingedToOpentag AssingedToOpenTag
	    cross apply AssingedToOpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			
		insert into #AssingedTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #AssingedToOpentag AssingedToTemplatesOpenTag
		cross apply AssingedToTemplatesOpenTag.Template_OpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			
			declare @AssingedTemplateIDCounter int,@AssingedTemplateLoopCounter int=1,@AssingedTempID varchar(50),@AssignedTempID varchar(50)   
          select distinct TemplateID, IDENTITY( int ) AS ID into #tempAssignedTo from #AssingedTemplates
          
			  select @AssingedTemplateIDCounter=(select COUNT(*) from #tempAssignedTo)
			 set @Template_OpenTags=null
			   WHILE(@AssingedTemplateLoopCounter <= @AssingedTemplateIDCounter)
			  begin
			  set @AssignedTempID=(select ISNULL(TemplateID,0) from #tempAssignedTo where ID=@AssingedTemplateLoopCounter)
			   if(@OpenTemplateAssignedTo IS NULL)
                  begin
                  --set @OpenTags='<![CDATA[<CoApplicant ID="'+@CoApplicantID+'">'+@CoApplicantName+'</CoApplicant>]]>'
                  set @OpenTemplateAssignedTo='<Template_Id>'+@AssignedTempID+'</Template_Id>'
                  end
                 else
                begin
                      set @OpenTemplateAssignedTo=@OpenTemplateAssignedTo+'<Template_Id>'+@AssignedTempID+'</Template_Id>'
                end
            SET @AssingedTemplateLoopCounter = @AssingedTemplateLoopCounter + 1
      
          end
          
        set @Template_OpenTags=CONVERT(xml,'<otag><tags type="Template_Id">'+@OpenTemplateAssignedTo+'</tags></otag>')
		    
     end
		end
end 


--Added by pravin rane on 08-Jan-2018 when user assign ticket then mail should be sent to Approver
                                                                              

     if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=77 and IsActive=1)
    begin
    
             select @PreviousApproverID =ISNULL(MasterTags.value('(tags/ApproverId/node())[1]','varchar(50)'),0) from Tickets where TicketId=@TicketId  --Added by pravin rane on 08-Jan-2018 because mail should be sent when change the Approver In Value Chain                                     
select @CurrentApproverID =ISNULL(MasterTags.value('(MasterTags/tags/ApproverId/node())[1]','varchar(100)'),0) from #tbl_XML_Data 
    
		if(((@PreviousApproverID<>@CurrentApproverID) and @TicketId>0) or(@TicketId=0 and ISNULL(@CurrentApproverID,0)>0))
		begin
	               
                        declare @OpenTemplateApproverID varchar(max) ,@OpenTagsApproverID xml               
                        select  @OpenTagsApproverID=OpenTags from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=77 and IsActive=1                 
                   
                          if(@Template_OpenTags is null)  --If Template opentag is null then assign FeatureMaster OpenTag                
                          begin 
                          set @Template_OpenTags= @OpenTagsApproverID              
                          end                  
                          else                  
                          begin   
                          		
			                create table #ApproverTemplates
						    (
								TemplateID int
							)
			          select @OpenTagsApproverID as ApproverOpenTag,@Template_OpenTags as Template_OpenTag  into #ApproverOpentag


		insert into #ApproverTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #ApproverOpentag ApproverOpentag
	    cross apply ApproverOpentag.nodes('otag/tags/Template_Id') AS FM(V) 
			
		insert into #ApproverTemplates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #ApproverOpentag ApproverTemplatesOpenTag
		cross apply ApproverTemplatesOpenTag.Template_OpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			
			declare @ApprovedIDCounter int,@ApprovedLoopCounter int=1,@ApprovedTempID varchar(50)
          select distinct TemplateID, IDENTITY( int ) AS ID into #tempApproverID from #ApproverTemplates
          
			  select @ApprovedIDCounter=(select COUNT(*) from #tempApproverID)
			 set @Template_OpenTags=null
			   WHILE(@ApprovedLoopCounter <= @ApprovedIDCounter)
			  begin
			  set @ApprovedTempID=(select ISNULL(TemplateID,0) from #tempApproverID where ID=@ApprovedLoopCounter)
			   if(@OpenTemplateApproverID IS NULL)
                  begin
                  --set @OpenTags='<![CDATA[<CoApplicant ID="'+@CoApplicantID+'">'+@CoApplicantName+'</CoApplicant>]]>'
                  set @OpenTemplateApproverID='<Template_Id>'+@ApprovedTempID+'</Template_Id>'
                  end
                 else
                begin
                      set @OpenTemplateApproverID=@OpenTemplateApproverID+'<Template_Id>'+@ApprovedTempID+'</Template_Id>'
                end
            SET @ApprovedLoopCounter = @ApprovedLoopCounter + 1
      
          end
          
        set @Template_OpenTags=CONVERT(xml,'<otag><tags type="Template_Id">'+@OpenTemplateApproverID+'</tags></otag>')
		    
     end
		end
end 


--Added by pravin rane on 06-March-2018 (currently for value chain)


--Added by pravin rane on 06-March-2018 (currently for value chain)


                if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=86 and IsActive=1)
	             begin
	             
	 
	             
	                  IF(ISNULL(@SubType,'')!='')                                                          
                        BEGIN                                                                            
      
					      declare @Overridable varchar(10),@LoginRAID varchar(10), @LoginRAName varchar(200)
				                                                                               
				         SELECT @Overridable=CAST(MasterTags.query('tags/Override/text()') as varchar(100)) from TagMaster                                                    
				          WHERE tagName=@SubType and TagType='TaskSubCategory' and Inst_Id=@Inst_Id and ISNULL(TagParent,0)=@TagParent and ISNULL(TagIsActive,0)=1  
						
						   declare @WorkflowActionMasterTag xml
						   set @WorkflowActionMasterTag=@Actionable
							    if(@WorkflowActionMasterTag is not null)
							    begin 
							     declare @ApproverBy varchar(20)                                         
                                    set @ApproverBy=(select @WorkflowActionMasterTag.value('(tags/Approver/node())[1]','varchar(20)'))   
                                    
                                    if(ISNULL(@ApproverBy,'')<>'')
                                    begin
										   Create Table #TempApproverDetails
										   (  
											UserID int,  
											UserName varchar(200)  
										   )  
										 
										   declare @RAApproverxml xml
										   set @RAApproverxml='<NewDataSet><keyword>'+ cast(isnull(@ApproverBy,'') as varchar(20))+'</keyword></NewDataSet>'
									
										   INSERT INTO #TempApproverDetails  
										   EXEC USP_GetApprover @Inst_Id,@UserId,@RAApproverxml
										   
										   
										   select @LoginRAName=UserName,@LoginRAID=UserID from #TempApproverDetails
										   if (@CurrentApproverID=0)
										    set @CurrentApproverID=''
										    
										   if((ISNULL(@Overridable,'')<>'' and ISNULL(@CurrentApproverID,'')='') or(ISNULL(@Overridable,'')='' and ISNULL(@CurrentApproverID,'')=''))
						      begin
							
								if(isnull(@LoginRAName,'')<>'' and isnull(@LoginRAID,'')<>'')
								begin
					
								
									 select  @MASTERTAGS=MasterTags from #tbl_XML_Data
									if(@MASTERTAGS is not null)
									 begin
			                        
										UPDATE #tbl_XML_Data                                        
										SET mastertags.modify('delete(//MasterTags//tags//ApproverId)[1]') from #tbl_XML_Data  where                                        
										MasterTags.value('(MasterTags/tags/ApproverId/node())[1]','varchar(100)') is not  null  
										
										UPDATE #tbl_XML_Data                                        
										SET mastertags.modify('delete(//MasterTags//tags//ApproverName)[1]') from #tbl_XML_Data  where                                        
										MasterTags.value('(MasterTags/tags/ApproverName/node())[1]','varchar(100)') is not  null  
				     
										declare @Approverdetails xml  
										set  @Approverdetails=convert(xml,'<ApproverId>'+cast(@LoginRAID as varchar(10))+'</ApproverId><ApproverName>'+cast(@LoginRAName as varchar(200))+'</ApproverName>')                                        
										update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@Approverdetails") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
									 end
				  				   else                                        
									  begin                                         
										   update #tbl_XML_Data set MasterTags='<MasterTags><tags><ApproverId>'+CAST(@LoginRAID AS VARCHAR(20))+'</ApproverId><ApproverName>'+cast(@LoginRAName as varchar(200))+'</ApproverName></tags></MasterTags>'  where MasterTags is null                                                                 
									  end   
								end
						 end
									   
                                  end
                                       
                                     
							    end
							    	end
							    	
						 
                        
       --                  else  if(ISNULL(@Overridable,'')='' and ISNULL(@CurrentApproverID,'')='')
						 --begin
							--	if(isnull(@LoginRAName,'')<>'' and isnull(@LoginRAID,'')<>'')
							--	begin
							--		 select  @MASTERTAGS=MasterTags from #tbl_XML_Data
							--		if(@MASTERTAGS is not null)
							--		 begin
			                        
							--			UPDATE #tbl_XML_Data                                        
							--			SET mastertags.modify('delete(//MasterTags//tags//ApproverId)[1]') from #tbl_XML_Data  where                                        
							--			MasterTags.value('(MasterTags/tags/ApproverId/node())[1]','varchar(100)') is not  null  
										
							--			UPDATE #tbl_XML_Data                                        
							--			SET mastertags.modify('delete(//MasterTags//tags//ApproverName)[1]') from #tbl_XML_Data  where                                        
							--			MasterTags.value('(MasterTags/tags/ApproverName/node())[1]','varchar(100)') is not  null  
				     
							--			declare @LoginRADetails xml  
							--			set  @LoginRADetails=convert(xml,'<ApproverId>'+cast(@LoginRAID as varchar(10))+'</ApproverId><ApproverName>'+cast(@LoginRAName as varchar(200))+'</ApproverName>')                                        
							--			update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@LoginRADetails") as last into (/MasterTags/tags)[1]') where  MasterTags is not null    
							--		 end
				  	--			   else                                        
							--		  begin                                         
							--			   update #tbl_XML_Data set MasterTags='<MasterTags><tags><ApproverId>'+CAST(@LoginRAID AS VARCHAR(20))+'</ApproverId><ApproverName>'+cast(@LoginRAName as varchar(200))+'</ApproverName></tags></MasterTags>'  where MasterTags is null                                                                 
							--		  end   
							--	end
						 --end
                        
	               end


--Added By Deepak On 28 March 2018--

	IF @Inst_Id=9
	BEGIN
	IF EXISTS(SELECT * FROM #tbl_XML_Data WHERE MasterTags.value('(MasterTags/tags/ModeType/node())[1]','varchar(100)') IS NULL)
		BEGIN
			DECLARE @ModeTypeNode XML
			SET @ModeTypeNode=CAST('<ModeType>Services</ModeType>' AS XML)
			
			IF ISNULL(CAST(@MasterTags AS VARCHAR(MAX)),'')<>''
				BEGIN
				UPDATE #tbl_XML_Data              
				SET mastertags.modify('delete(//MasterTags//tags//ModeType)[1]')              
				FROM #tbl_XML_Data  WHERE MasterTags IS NOT NULL AND  ISNULL(TicketId,0)=0     
					
				UPDATE #tbl_XML_Data set MasterTags.modify('insert sql:variable("@ModeTypeNode") as last into (/MasterTags/tags)[1]') 
				WHERE ISNULL(TicketId,0)=0 AND MasterTags IS NOT NULL   
			END
		ELSE
		BEGIN
			UPDATE #tbl_XML_Data              
			SET mastertags.modify('delete(//MasterTags//tags//ModeType)[1]')              
			FROM #tbl_XML_Data  WHERE MasterTags IS NOT NULL AND ISNULL(TicketId,0)=0  
	
			UPDATE #tbl_XML_Data SET MasterTags='<MasterTags><tags><ModeType>Services</ModeType></tags></MasterTags>'               
			WHERE MasterTags IS NULL AND ISNULL(TicketId,0)=0			
			END
		END
	END
---------END-----------------	
                            
 IF(@TicketId=0)                                 
   BEGIN                                 
                                                                                                      
  INSERT INTO Tickets(                                                                                          
   Date,                                                                                      
   ParentType,                                                                                      
   ParentId,                                                                          
   Description,                                                                               
   Type,                                                                                      
   SubType,                                                                                      
   TAT,                                                                                      
   Status,                                                                                      
   Resolution,                                                                 
   AssignedTo,                        
   AssignedDTM,                                                                                      
   MasterTags,                                                          
   OpenTags,                                                                                      
   UpdatedBy,                                                                                      
   UpdatedDTM,                                                                                      
   Inst_Id,                                  
   ResolutionDate,                                                                                      
   ParentTicketId,                                                                                    
   Priority,                                                                                    
   Raisedby,                                                                                 
   Title,                                                                                    
Escalation                                                    
   )                                                                                  
    select                               
   --Date,                                             
   @Date ,                                                                                                 
   ParentType,                                                                                      
   --ParentId,                                                                
   @ParentId,                                                          
   Description,                                                                             
   --Type,                                                     
    @Type,                                                                                     
   SubType,                                                                  
   @TAT,                                                                                      
   --Status,                                                             
   @Status,                                                                      
   Resolution,                                                                            
   @AssignedTo,                                                                                      
   --AssignedDTM,                                                                                      
    @AssignedDTM,                                        
   MasterTags.query('/MasterTags/tags'),                                                                                                
   OpenTags.query('/OpenTags/otag'),                                                         
   @UserId,                                                                                      
   GETDATE(),                                                                       
   @Inst_Id,                                                        
   ResolutionDate,                                                                                      
   ParentTicketId,                                                                                
   Priority,                                                                                    
   Raisedby,                                                               
   Title,                                                                                    
   Escalation                                         
  from #tbl_XML_Data                                                                                        
                                                                               
   set @MasterXML= '<tags><PrevStatus></PrevStatus></tags>'                                                                            
                                                                                           
    select @TicketId= SCOPE_IDENTITY()                             
    select @TicketId as TicketId,'Record saved successfuly.' as message  ,@Template_Id as Template_Id ,                                                                   
    @MasterXML as MasterTag,@Template_OpenTags as Template_OpenTags                                                                                                     
   END                                   
  ELSE                                                                                    
  BEGIN                                                                                        
                                                                          
      ------Temperary added by pravin rane 08-June-2016                                                                               
                                                                                        
  IF(@UpdatedDTM IS NOT NULL AND CONVERT(VARCHAR(19), cast(@UpdatedDTM as datetime), 120)                                                                               
  !=(SELECT CONVERT(VARCHAR(19), cast(UpdatedDTM as datetime), 120) FROM Tickets WHERE TicketId=@TicketId ))                                                       
  BEGIN    
                                                                                    
     SELECT @ErrorMessage='Records already Updated.',@ErrorSeverity=12,@ErrorState=5                                                                                   
     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);                                                                                        
  END                                                
  ELSE                                                                                  
   BEGIN                                                
                                          
  -------                                                                          
                                                  
                                                  
                                                      
 -- If child ticket is open then parent is not allowed to be closed.                                                
                                                    
  DECLARE @ChildTicketIds INT                                                
  SELECT top 1 @ChildTicketIds=TicketId FROM Tickets where ParentTicketId=@TicketId and status!='Close'                                                
                                                                                      
  IF (@ChildTicketIds>0 and @Status='Close')                                                                  
   BEGIN                                                             
     SELECT @ErrorMessage='If child ticket is open then parent is not allowed to be closed.',@ErrorSeverity=13,@ErrorState=6                               
     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);                                                                            
                                                    
   END                                                                                 
                                                    
 --  If child ticket is open then parent is not allowed to be closed.                                                                                   
                                           
                                                      
      --Added By Pravin Rane on 31-Dec-2015                                        
      -- if child and parent ticket is close and when i open child ticket then  parent ticket should be open as well as child ticket.                                        
      if(@ParentTicketId>0)                                        
      begin                                        
             declare @ParentTktID int                                        
    SELECT  @ParentTktID =TicketId FROM Tickets where status='Close' and TicketId=@ParentTicketId and Inst_Id=@Inst_Id                                          
     if(@ParentTktID >0)       
     begin                                    
                                             
                                             
        INSERT INTO TicketHistory(                                                                                            
        TicketId,                                                                                
        LastAssignedTo,                                                                     
        LastAssignedDTM,                                                                
        LastStatus,                                                                                            
        LastResolution,                                                                                            
        LastType,                                                        
        LastSubType,                                                                                            
        LastUpdatedBy,                                                                             
        LastUpdatedDTM,                                                                                            
        HistoryDTM,                                                                                            
        ResolutionDate,                                                                                          
    Escalation,                                        
        TAT,  --Added by pravin rane on 26April2016                                         
        ParentId, --Added By pravin rane on 23-June-2016                                        
        MasterTags,                                        
                       Priority,                                        
                       RaisedBy ------End Added By pravin rane on 23-June-2016                                             
                                                                                        
        )                                                                                            
        select TicketId,AssignedTo,AssignedDTM,Status,Resolution,Type,SubType,                                                  
        UpdatedBy,UpdatedDTM,GETDATE(),ResolutionDate,Escalation,@TAT,ParentId,MasterTags,Priority,RaisedBy from Tickets                                                                                            
        where TicketId=@ParentTktID                                          
        --Update Parent Ticket Status when parent ticket status is close and child ticket is open                                        
       update Tickets set Status='Open', UpdatedBy=@UserId,UpdatedDTM=GETDATE()                                       
        where TicketId=@ParentTktID                                        
                                                
     end                    
        end                                                                                
                                          
  --Added By Pravin Rane on 31-Dec-2015                                        
                                                 

                  --Added by pravin rane on 30-Jan-2018                             
              if(@WorkFlowSwitch=0)
              begin 
                                                                                         
			   INSERT INTO TicketHistory(                                                                                      
			   TicketId,                                
			   LastAssignedTo,                                                               
			   LastAssignedDTM,                                                                                      
			   LastStatus,                                                                                      
			   LastResolution,                                                                                      
			   LastType,                                    
			   LastSubType,                                                                
			   LastUpdatedBy,                                                                                      
			   LastUpdatedDTM,                                                                                      
			   HistoryDTM,                                                                                      
			   ResolutionDate,                                                                                    
			   Escalation,                                        
			   TAT,                                        
			   ParentId, --Added By pravin rane on 23-June-2016                                        
			   MasterTags,                                        
			   Priority,                                        
			   RaisedBy ------End Added By pravin rane on 23-June-2016                            
			   )                                                                                      
			   select TicketId,AssignedTo,AssignedDTM,Status,Resolution,Type,SubType,                                                                                      
			   UpdatedBy,UpdatedDTM,GETDATE(),ResolutionDate,Escalation,TAT,ParentId,MasterTags,Priority,RaisedBy  from Tickets                                   
			   where TicketId=@TicketId                                      
         end                     
            else if( @WorkFlowSwitch=1 and @Inst_Id=9)
           begin
           
           
           select  TicketId,AssignedTo,AssignedDTM,Status,Resolution,Type,SubType,                                                                                      
			   UpdatedBy,UpdatedDTM,GETDATE() as CurrentDate,ResolutionDate,Escalation,TAT,ParentId,MasterTags,Priority,RaisedBy into #tempticketHistory from Tickets where TicketId=@TicketId         
            declare @HistoryMasterTag xml
            select @HistoryMasterTag= mastertags from #tempticketHistory 
             if(@HistoryMasterTag is not null)
              begin
				UPDATE #tempticketHistory
				SET mastertags.modify('insert <StatusChangeDays>{sql:variable("@totalstatusdayscnt")}</StatusChangeDays> as last into (/tags)[1]') 
				where MasterTags.value('(tags/StatusChangeDays/node())[1]','varchar(50)') is  null and MasterTags is not null
             end
			 else
			 begin
			 update #tempticketHistory set mastertags ='<tags><StatusChangeDays>'+cast(@totalstatusdayscnt as varchar(10))+'</StatusChangeDays></tags>'
			 where MasterTags is null
			   end
           
           
             INSERT INTO TicketHistory(                                                                                      
			   TicketId,                                
			   LastAssignedTo,                                                               
			   LastAssignedDTM,                                                                                      
			   LastStatus,                                                                                      
			   LastResolution,                                                                                      
			   LastType,                                    
			   LastSubType,                                                                
			   LastUpdatedBy,                                                                                      
			   LastUpdatedDTM,                                                                                      
			   HistoryDTM,                                                                                      
			   ResolutionDate,                                                                                    
			   Escalation,                                        
			   TAT,                                        
			   ParentId, --Added By pravin rane on 23-June-2016                                        
			   MasterTags,                                        
			   Priority,                                        
			   RaisedBy ------End Added By pravin rane on 23-June-2016                            
			   )                                                                                      
			   select TicketId,AssignedTo,AssignedDTM,Status,Resolution,Type,SubType,                                                                                      
			   UpdatedBy,UpdatedDTM,GETDATE(),ResolutionDate,Escalation,TAT,ParentId,MasterTags,Priority,RaisedBy  from #tempticketHistory                                   
			   where TicketId=@TicketId          
           
           end             
                         
                         
                                                                                         
                   declare @prevstatus int                                          
      
      set @prevstatus=(select count(*) from Tickets where ticketid=@TicketId and Inst_Id=@Inst_Id and status='Close')                                                                        
                                                                                                  
    UPDATE c                                                                                                     
    SET                                                                                        
   --c.Date=td.Date, -- vishnukanth 11 Dec 2015. While Inserting new record it will be getdate(). Update is not allowed to this field.                                            
   c.Date=(case when @Inst_Id=15 and @Status='Re-Open' and @CurrentStatus='Close'   then @Date  else  c.Date end),  --Added by pravin rane on 26-Dec-2016                                      
   c.ParentType=td.ParentType,                                                                                      
   c.ParentId=td.ParentId,                                        
   c.Description=td.Description,                                                                                      
   --c.Type=td.Type,                                     
    c.Type=@Type,                                                                                 
   c.SubType=td.SubType,                                                                             
   c.TAT=@TAT,                 
   --c.Status=td.Status,                                                                                      
   c.Status=@Status,                                                             
   c.Resolution=td.Resolution,                                                                                      
   c.AssignedTo=@AssignedTo,                                                                                      
   --c.AssignedDTM=td.AssignedDTM,                                        
   c.AssignedDTM=@AssignedDTM,                                                                                         
   C.MasterTags=td.MasterTags.query('/MasterTags/tags'),                                                                                                
   C.OpenTags=td.OpenTags.query('/OpenTags/otag'),                                                                                      
   c.UpdatedBy=@UserId,                                  
   c.UpdatedDTM=GETDATE(),                                                                                      
   c.Inst_Id=@Inst_Id,                                                           
  -- c.ResolutionDate=(case when @prevstatus=0 and @Status='Close' then GETDATE() else  c.ResolutionDate end),                         
   c.ResolutionDate=(case when @prevstatus=0 and @Status='Close' then GETDATE()                       
                          when @Inst_Id=15 and @Status='Re-Open' and @CurrentStatus='Close' then null else  c.ResolutionDate end), --Added By pravin rane on 26-Dec-2016                                                                                      
   c.ParentTicketId=td.ParentTicketId,                                                                                    
   c.Priority=td.Priority,                                                                                    
   c.Raisedby=td.Raisedby,                                                                                    
   c.Title=td.Title,                                                                                    
   c.Escalation=td.Escalation                                                                                        
    FROM Tickets c                                                                                                    
    INNER JOIN #tbl_XML_Data td on c.TicketId=td.TicketId                                                                                                
                                 
    --AND Type='parentticket'                                                          
                                      
                          
-- If all child tickets are closed then parent ticket gets closed automatically -- this code is to be commented. Parent ticket will also be closed manually.                                                      
  --DECLARE @ParentTicketCount INT,@ClosedTicketCount INT,@ParentticketIds INT                                                                                  
  --SELECT @ParentticketIds=ISNULL(ParentTicketId,0) FROM Tickets where TicketId=@TicketId                                                                                  
                                                                                      
  --IF (@ParentticketIds>0)                                                                  
  -- BEGIN                                                                                  
                                                                                      
  --  SELECT @ParentTicketCount=COUNT(1) FROM Tickets where ParentTicketId=@ParentTicketId                                                                                  
                                                                                      
  --SELECT @ClosedTicketCount=COUNT(1) FROM Tickets where ParentTicketId=@ParentTicketId AND Status='Closed'                                                                                  
                                            
  --IF(@ParentTicketCount=@ClosedTicketCount)                                     
  -- BEGIN                                                                                  
  --   UPDATE Tickets set Status='Closed',UpdatedDTM=GETDATE() WHERE TicketId=@ParentTicketId                                                                                  
  -- END                                                                                   
  --                                  END                                                  
-- If all child tickets are closed then parent ticket gets closed automatically -- this code is to be commented. Parent ticket will also be closed manually.                                                                          
                                                                                      
                                                                              
 -- declare @MasterXML as varchar(200)                                                          
  set @MasterXML= '<tags><PrevStatus>'+ @CurrentStatus + '</PrevStatus></tags>'      
  
--Added by pravin rane on 29-July-2017 because when user select homeservice category from front end then ticket will be automatically closed and mail should sent to user(concat of workflow opentag and Feturemaster open tag)
if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=67 and IsActive=1)
begin
      
    if exists (select * from   #tbl_XML_Data  where MasterTags.exist('(//tags/UpdateVia)')=1)    --Check EmailCategory node is exist or not                                 
    begin                   
    declare @EmailCategory  varchar(100),@OpenTags_FM xml ,@OpenTemplateTags varchar(max)                 
    select @EmailCategory=MasterTags.value('(MasterTags/tags/UpdateVia/node())[1]','varchar(100)') from  #tbl_XML_Data --Get value of EmailCategory
            if(LOWER(@EmailCategory)='homeservice' and @Status='Close')  
            begin    
                       select  @OpenTags_FM=OpenTags from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=67 and IsActive=1                 
                   
                          if(@Template_OpenTags is null)  --If Template opentag is null then assign FeatureMaster OpenTag                
                          begin 
                          set @Template_OpenTags= @OpenTags_FM                 
                          end                  
                          else                  
                          begin   
                          		
			                create table #Templates
								(
								TemplateID int
								)
			select @OpenTags_FM as FMOpenTag,@Template_OpenTags as Template_OpenTag  into #FMOpentag

		insert into #Templates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #FMOpentag FMOpenTag
			cross apply FMOpentag.nodes('otag/tags/Template_Id') AS FM(V) 
			
				insert into #Templates
		SELECT FM.V.value('.','nvarchar(100)') AS 'TemplateID'  
	 	from #FMOpentag WorkFlowOpenTag
			cross apply WorkFlowOpenTag.Template_OpenTag.nodes('otag/tags/Template_Id') AS FM(V) 
			declare @TemplateIDCounter int,@TemplateLoopCounter int=1,@TempID varchar(50)
          select distinct TemplateID, IDENTITY( int ) AS ID into #temp from #Templates
			  select @TemplateIDCounter=(select COUNT(*) from #temp)
			 set @Template_OpenTags=null
			   WHILE(@TemplateLoopCounter <= @TemplateIDCounter)
			  begin
			  set @TempID=(select ISNULL(TemplateID,0) from #temp where ID=@TemplateLoopCounter)
			   if(@OpenTemplateTags IS NULL)
                  begin
                  --set @OpenTags='<![CDATA[<CoApplicant ID="'+@CoApplicantID+'">'+@CoApplicantName+'</CoApplicant>]]>'
                  set @OpenTemplateTags='<Template_Id>'+@TempID+'</Template_Id>'
                  end
                 else
                begin
                      set @OpenTemplateTags=@OpenTemplateTags+'<Template_Id>'+@TempID+'</Template_Id>'
                end
            SET @TemplateLoopCounter = @TemplateLoopCounter + 1
             
          end
            declare @otags xml
        set @Template_OpenTags=CONVERT(xml,'<otag><tags type="Template_Id">'+@OpenTemplateTags+'</tags></otag>')
			                          
                          end       
		    end
     end
 end
                                                              
 
 
 
 --Added by pravin rane on 21-August-2017 update childtickets specific node in mastertag column as per parent ticket
 if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=69 and IsActive=1)
begin

	declare @ParentTicketMasterTag xml,@ChildTicketCount int,
	@UpdatedMasterTag varchar(max)=''

	select @ParentTicketMasterTag=mastertags from Tickets where Inst_Id=@Inst_Id and TicketId=@TicketId
	select @ChildTicketCount=COUNT(1) from Tickets where Inst_Id=@Inst_Id and ParentTicketId=@TicketId

	if(@ParentTicketMasterTag is not null and @ChildTicketCount>0)--if parentticket mastertag column is not null and child ticket count greater than zero then update child tickets mastertag
	begin 
--As discussed with dhiraj currently subticket mastertag column will be never null
declare @CustomerName varchar(200),@LAN varchar(100),@InterestCalDate varchar(20),@AmountReceived varchar(20),@DepositDate varchar(20),
        @ChequeNo varchar(100),@Amount varchar(20),@ForeClosureCharges varchar(20),@ExcessCollected varchar(200),@ShortCollected varchar(200),
        @PrePaymentPenaltyCharges varchar(100),@EffectPriority varchar(100),@ROIEffect varchar(100),@TenureChanges varchar(200),@ReasonIfAny varchar(500),
        @SwappingInstrument varchar(200),@ChangeOfDueDate varchar(20),@ReStructureOfLoan varchar(100),@LetterID varchar(10),@LetterName varchar(50),
        @HoldReason varchar(500),@UpdateVia varchar(100)
        
        select @CustomerName=@ParentTicketMasterTag.value('(tags/CustomerName/node())[1]','varchar(100)'),
         @LAN=@ParentTicketMasterTag.value('(tags/LAN/node())[1]','varchar(100)') ,
        @InterestCalDate=@ParentTicketMasterTag.value('(tags/InterestCalDate/node())[1]','varchar(100)') ,
        @AmountReceived=@ParentTicketMasterTag.value('(tags/AmountReceived/node())[1]','varchar(100)') ,
        @DepositDate=@ParentTicketMasterTag.value('(tags/DepositDate/node())[1]','varchar(100)') ,
        @ChequeNo=@ParentTicketMasterTag.value('(tags/ChequeNo/node())[1]','varchar(100)') ,
        @Amount=@ParentTicketMasterTag.value('(tags/Amount/node())[1]','varchar(100)') ,
        @ForeClosureCharges=@ParentTicketMasterTag.value('(tags/ForeClosureCharges/node())[1]','varchar(100)') ,
        @ExcessCollected=@ParentTicketMasterTag.value('(tags/ExcessCollected/node())[1]','varchar(100)') ,
        @ShortCollected=@ParentTicketMasterTag.value('(tags/ShortCollected/node())[1]','varchar(100)') ,
        @PrePaymentPenaltyCharges=@ParentTicketMasterTag.value('(tags/PrePaymentPenaltyCharges/node())[1]','varchar(100)') ,
        @EffectPriority=@ParentTicketMasterTag.value('(tags/EffectPriority/node())[1]','varchar(100)') ,
        @ROIEffect=@ParentTicketMasterTag.value('(tags/ROIEffect/node())[1]','varchar(100)') ,
        @TenureChanges=@ParentTicketMasterTag.value('(tags/TenureChanges/node())[1]','varchar(100)') ,
        @ReasonIfAny=@ParentTicketMasterTag.value('(tags/ReasonIfAny/node())[1]','varchar(100)') ,
        @SwappingInstrument=@ParentTicketMasterTag.value('(tags/SwappingInstrument/node())[1]','varchar(100)') ,
        @ChangeOfDueDate=@ParentTicketMasterTag.value('(tags/ChangeOfDueDate/node())[1]','varchar(100)') ,
        @ReStructureOfLoan=@ParentTicketMasterTag.value('(tags/ReStructureOfLoan/node())[1]','varchar(100)'),
        --@LetterID=@ParentTicketMasterTag.value('(tags/LetterID/node())[1]','varchar(100)'),
       -- @LetterName=@ParentTicketMasterTag.value('(tags/LetterName/node())[1]','varchar(100)'),
        @HoldReason=@ParentTicketMasterTag.value('(tags/HoldReason/node())[1]','varchar(100)')
       -- @UpdateVia=@ParentTicketMasterTag.value('(tags/UpdateVia/node())[1]','varchar(100)')
        from tickets where Inst_Id=@Inst_Id and TicketId=@TicketId
        
      
        
            if(COALESCE (@CustomerName, '') <> '')
         begin
			 UPDATE Tickets 
			SET mastertags.modify('delete(//tags//CustomerName)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			set  @UpdatedMasterTag='<CustomerName>'+@CustomerName+'</CustomerName>'
        end
            if(COALESCE(@LAN, '') <> '')
              begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//LAN)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
	         
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<LAN>'+@LAN+'</LAN>'
			 
        end
            if(COALESCE (@InterestCalDate, '') <> '')
              begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//InterestCalDate)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
	         
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<InterestCalDate>'+@InterestCalDate+'</InterestCalDate>'
			 
        end
            if(COALESCE (@AmountReceived, '') <> '')
        begin
          UPDATE Tickets 
         SET mastertags.modify('delete(//tags//AmountReceived)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
        
         set  @UpdatedMasterTag=@UpdatedMasterTag+ '<AmountReceived>'+@AmountReceived+'</AmountReceived>'
      
        end
            if(COALESCE (@DepositDate, '') <> '')
          begin
        
         UPDATE Tickets 
         SET mastertags.modify('delete(//tags//DepositDate)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
         
         set  @UpdatedMasterTag=@UpdatedMasterTag+ '<DepositDate>'+@DepositDate+'</DepositDate>'
       
        end
            if(COALESCE (@ChequeNo, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ChequeNo)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ChequeNo>'+@ChequeNo+'</ChequeNo>'
	
        end
            if(COALESCE (@Amount, '') <> '')
        begin
            UPDATE Tickets 
           SET mastertags.modify('delete(//tags//Amount)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
           set  @UpdatedMasterTag=@UpdatedMasterTag+ '<Amount>'+@Amount+'</Amount>'
  
        end
            if(COALESCE (@ForeClosureCharges, '') <> '')
        begin
			  UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ForeClosureCharges)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ForeClosureCharges>'+@ForeClosureCharges+'</ForeClosureCharges>'
		
        end
            if(COALESCE (@ExcessCollected, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ExcessCollected)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ExcessCollected>'+@ExcessCollected+'</ExcessCollected>'
		
        end
          else  if(COALESCE (@ShortCollected, '') <> '')
        begin
        
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ShortCollected)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ShortCollected>'+@ShortCollected+'</ShortCollected>'
		
        end
            if(COALESCE (@PrePaymentPenaltyCharges, '') <> '')
        begin
			 UPDATE Tickets 
			SET mastertags.modify('delete(//tags//PrePaymentPenaltyCharges)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<PrePaymentPenaltyCharges>'+@PrePaymentPenaltyCharges+'</PrePaymentPenaltyCharges>'
		
        end
            if(COALESCE (@EffectPriority, '') <> '')
        begin
			UPDATE Tickets 
			SET mastertags.modify('delete(//tags//EffectPriority)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			set  @UpdatedMasterTag=@UpdatedMasterTag+ '<EffectPriority>'+@EffectPriority+'</EffectPriority>'
		
        end
            if(COALESCE (@ROIEffect, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ROIEffect)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ROIEffect>'+@ROIEffect+'</ROIEffect>'
		
        end
            if(COALESCE (@TenureChanges, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//TenureChanges)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<TenureChanges>'+@TenureChanges+'</TenureChanges>'
			 
        end
            if(COALESCE (@ReasonIfAny, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ReasonIfAny)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ReasonIfAny>'+@ReasonIfAny+'</ReasonIfAny>'
			 
        end
            if(COALESCE (@SwappingInstrument, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//SwappingInstrument)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<SwappingInstrument>'+@SwappingInstrument+'</SwappingInstrument>'
			
        end
            if(COALESCE (@ChangeOfDueDate, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ChangeOfDueDate)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ChangeOfDueDate>'+@ChangeOfDueDate+'</ChangeOfDueDate>'
			
        end
            if(COALESCE (@ReStructureOfLoan, '') <> '')
        begin
			 UPDATE Tickets 
			 SET mastertags.modify('delete(//tags//ReStructureOfLoan)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 set  @UpdatedMasterTag=@UpdatedMasterTag+ '<ReStructureOfLoan>'+@ReStructureOfLoan+'</ReStructureOfLoan>'
			 
        end
    --        if(COALESCE (@LetterID, '') <> '')
    --    begin
			 --UPDATE Tickets 
			 --SET mastertags.modify('delete(//tags//LetterID)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 --set  @UpdatedMasterTag=@UpdatedMasterTag+ '<LetterID>'+@LetterID+'</LetterID>'
			 
    --    end
    --        if(COALESCE (@LetterName, '') <> '')
    --    begin
			 --UPDATE Tickets 
			 --SET mastertags.modify('delete(//tags//LetterName)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			 --set  @UpdatedMasterTag=@UpdatedMasterTag+ '<LetterName>'+@LetterName+'</LetterName>'
			 
    --    end
            if(COALESCE (@HoldReason, '') <> '')
        begin
			  UPDATE Tickets 
			  SET mastertags.modify('delete(//tags//HoldReason)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId
			  set  @UpdatedMasterTag=@UpdatedMasterTag+ '<HoldReason>'+@HoldReason+'</HoldReason>'
			 
        end
    --        if(COALESCE (@UpdateVia, '') <> '')
    --    begin
			 --UPDATE Tickets 
			 --SET mastertags.modify('delete(//tags//UpdateVia)[1]') from Tickets where inst_id=@Inst_Id and ParentTicketId=@TicketId 
			 --set  @UpdatedMasterTag=@UpdatedMasterTag+ '<UpdateVia>'+@UpdateVia+'</UpdateVia>'
			
    --    end
        
        
                       declare @subticketmastertag xml  
						set @subticketmastertag=convert(xml,@UpdatedMasterTag)                                        
						update Tickets set  MasterTags.modify('insert sql:variable("@subticketmastertag") as last into (/tags)[1]') where  MasterTags is not null    
						and Inst_Id=@Inst_Id and ParentTicketId=@TicketId
	end

end
 


 --Added by pravin rane on 11-Jan-2018 because for value chain when IsDeleteTemplate node value is 1 then template should not be sent to user
 declare @IsDeleteTemplate varchar(10)
 select @IsDeleteTemplate= MasterTags.value('(MasterTags/tags/IsDeleteTemplate/node())[1]','varchar(10)') from  #tbl_XML_Data
 
  if(isnull(@IsDeleteTemplate,'')='1' and @Template_OpenTags is not null)
  begin
    SET @Template_OpenTags.modify('delete /otag/tags/.[@type="Template_Id"]');
  end
 --Ended by pravin rane 11-01-2018
 
                                                                                        
  SELECT @TicketId as TicketId,'Record saved successfuly.' as message ,                                                                    
  ISNULL(@Template_Id,0) as Template_Id , @MasterXML as MasterTag,@Template_OpenTags as Template_OpenTags                                                                     
                                                             
   END   --Temperary commented by pravin rane on 8-June-2016                                                                                  
                                                     
  END                                                                                                  
 END                                                    
         
      
                                                                                        
                                                  
  set @OutTime=getdate()                                                                                    
insert into spExecutionTime values ('USP_SaveTickets',@inTime,@OutTime,@ParamXML)                                          
                                                                                  
                                                                                                      
     IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                                                                                                       
     drop table #tbl_XML_Data                                            
                                                                                                           
     IF OBJECT_ID('tempdb..#Comparetime') IS NOT NULL                                                                                                                
     drop table #Comparetime      
     
      IF OBJECT_ID('tempdb..#CategoryTemplates') IS NOT NULL                                                                                                                
     drop table #CategoryTemplates                                                                                       
                               
      IF OBJECT_ID('tempdb..#CategoryOpentag') IS NOT NULL                                                                                                                
     drop table #CategoryOpentag                                                                                       
                               
     IF OBJECT_ID('tempdb..#tempCategory') IS NOT NULL                                                                                                                
     drop table #tempCategory                                                                                       
                               
     IF OBJECT_ID('tempdb..#AssingedTemplates') IS NOT NULL                                                                                                                
     drop table #AssingedTemplates                                                                                       
                               
     IF OBJECT_ID('tempdb..#AssingedToOpentag') IS NOT NULL                                                                                                                
     drop table #AssingedToOpentag                                                                                       
                               
     IF OBJECT_ID('tempdb..#tempAssignedTo') IS NOT NULL                                                                                                                
     drop table #tempAssignedTo                                                                                       
                               
                               
     IF OBJECT_ID('tempdb..#tempApproverID') IS NOT NULL                                                                                                                
     drop table #tempApproverID                                                                                     
                               
     IF OBJECT_ID('tempdb..#ApproverOpentag') IS NOT NULL                                                                                                                
     drop table #ApproverOpentag                                                                                       
                               
     IF OBJECT_ID('tempdb..#ApproverTemplates') IS NOT NULL                                                                                                                
     drop table #ApproverTemplates      
               
              IF OBJECT_ID('tempdb..#tempticketHistory') IS NOT NULL                                                                                                                
     drop table #tempticketHistory      
       IF OBJECT_ID('tempdb..#WorkFlowStatusTemplate') IS NOT NULL                                                                                                                
     drop table #WorkFlowStatusTemplate
     IF OBJECT_ID('tempdb..#WorkFlowStatusOpentag') IS NOT NULL                                                                                                                
     drop table #WorkFlowStatusOpentag
       IF OBJECT_ID('tempdb..#tempWorkFlowStatus') IS NOT NULL                                                                                                                
     drop table #tempWorkFlowStatus
                               
                                                                                      
                                                                                                          
END TRY                                                                                                    
BEGIN CATCH                                                                                                    
     SELECT @ErrorMessage=ERROR_MESSAGE(),@ErrorSeverity=ERROR_SEVERITY(),@ErrorState=ERROR_STATE()                                           
     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);                                                                                                                               
END CATCH 

-----------------------------------------------------------------------------------

USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Get_Tickets]    Script Date: 04/10/2018 15:01:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
ALTER  PROCedure [dbo].[Get_Tickets]                                                        
                                                                     
 --[Get_Tickets] 5415,9,'<NewDataSet><pageindexno><![CDATA[1]]></pageindexno><parenttype>client</parenttype></NewDataSet>'                                       
   --[Get_Tickets] 1482,9,'<NewDataSet><parenttype>Client</parenttype><ticketid>90572</ticketid></NewDataSet>'  
  -- [Get_Tickets] 376,9,'<NewDataSet><parenttype>Client</parenttype><tatfromdate>2018-01-12 00:00:00.000</tatfromdate><tattodate>2018-03-12 00:00:00.000</tattodate><actionable>1</actionable></NewDataSet>'     
  -- [Get_Tickets] 647,5,'<NewDataSet><recordcount><![CDATA[25]]></recordcount><parenttype>User</parenttype><status><![CDATA[Sent For Approval]]></status><pageindexno><![CDATA[1]]></pageindexno></NewDataSet>'    
  -- [Get_Tickets] 358,5,'<NewDataSet><recordcount><![CDATA[100]]></recordcount><parenttype>client</parenttype></NewDataSet>'      
 -- [Get_Tickets] 3738,20,'<NewDataSet><recordcount><![CDATA[100]]></recordcount><parenttype>Client</parenttype><business>ETLI</business></NewDataSet>'     
--************************************************************************/                    
	
@UserId int,@Inst_Id INT, @ParamXML xml                                                        
AS                                    
BEGIN                                                         
                                                
 DECLARE @I INT,  @inTime Datetime,@OutTime Datetime          
 DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT                                                                  
                          
 set @inTime=getdate()                                                   
                                                                                       
                        
 EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;                   
                                                   
                                                   
                                  
                                
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                                 
 WITH                      
  (                                                    
    ticketid varchar(1000),                                                  
 date varchar(1000),                                                  
 parenttype varchar(1000),                                 
 parentid varchar(1000),                                                   
 type varchar(1000),                                                  
 subtype varchar(1000),                                                  
 tat varchar(1000),                                                  
 status varchar(1000),                                                   
 assignedto varchar(1000),                                                  
 assigneddtm varchar(1000),                                                    
 updatedby varchar(1000),                                                   
 resolutiondate  varchar(1000),                                                  
 pageindexno varchar(1000),                                                  
 recordcount varchar(1000),                                              
 parentticketid varchar(1000),                                        
 priority varchar(10),                                                  
 raisedby varchar(1000),                                                  
 escalation varchar(20),                                          
 fromdate varchar(100),                                              
 todate varchar(100),                                        
 title varchar(1000),                                    
 --Added By Pravin Rane on 14-Aug-2015                                    
 module varchar(1000),                                    
 rcacategory varchar(1000),                                    
 plannedstartdate varchar(1000),                                    
 plannedenddate varchar(1000),                              
 clmid varchar(1000),                                    
 plannedefforts varchar(1000),                  
 email varchar(1000),        
 markasread varchar(2),        
 markasreplied varchar(2),        
 actionable varchar(1),        
 isassigned varchar(1) --Added By Pravin Rane on 24-May-2016          
,isclientintimated varchar (1)--Added By pravin Rane on 03-Jun-2016                                   
 --End by pravin Rane          
 ,meetingid varchar(15) --Added By pravin Rane on 15-Nov-2016                                                                                                       
 ,clienttype VARCHAR(50) --Added By Deepak on 2-May-2017    
 ,business VARCHAR(100)  
 ,opportunityid VARCHAR(100)  
 ,tatfromdate varchar(100)                                              
 ,tattodate varchar(100)
 ,modetype VARCHAR(100)
  )                                        
                                                   
                                                             
 EXEC sp_xml_removedocument @I;                                                          
                                                         
                                               
 DECLARE @TicketId varchar(100), @Date varchar(100),@ParentType varchar(100),@ParentId varchar(100)                                                      
  ,@Type varchar(500),@SubType varchar(500),@TAT VARCHAR(50),@Status VARCHAR(100),                                                  
  @AssignedTo INT,@AssignedDTM varchar(50),@UpdatedBy int,@ResolutionDate varchar(50),@ParentTicketId int,                                                  
  @PageIndexNo int,@recordCount int,@Priority varchar(10),@Raisedby varchar(100),@Escalation varchar(20)                                              
  ,@fromdate varchar(100), @todate varchar(100),@IgnoreClientSecurity int ,@Title varchar(1000),@clienttype VARCHAR(50)    
  ,@email varchar(1000) --vishnukanth 30 Oct 2015                
   ,@AllowCategoryAccess varchar(2) =0                    
    --Added By Pravin Rane on 14-Aug-2015                                    
   , @Module varchar(500),@RCACategory varchar(500),   @PlannedStartDate varchar(100),   @PlannedEndDate varchar(100), @CLMID varchar(100), @PlannedEfforts varchar(100)                                     
        ,@MarkAsRead varchar(2), @MarkAsReplied varchar(2),        
        --Added By Pravin Rane on 03-Feb-2016        
        @actionable varchar(1),        
         --Added By Pravin Rane on 24-May-2016        
   @isassigned varchar(1),        
    --Added By Pravin Rane on 03-June-2016        
   @isclientintimated varchar(1),      
    @meetingid varchar(15),@business VARCHAR(100),@opportunityid VARCHAR(100),@tatfromdate VARCHAR(100),@tattodate VARCHAR(100) --Added By pravin Rane on 15-Nov-2016            
    ,@modetype VARCHAR(100)                                           
    select @TicketId=ticketid, @Date=[date],@ParentType=parenttype,@ParentId=parentid,@Type=[type],                                                      
   @SubType=subtype,@TAT=tat,@Status=[status],@AssignedTo=assignedto,@UpdatedBy=updatedby,                                
   @ResolutionDate=resolutiondate,@ParentTicketId=ParentTicketId,@Priority=priority,                   
   @Raisedby=raisedby,@Escalation=escalation,@fromdate=fromdate,@todate=todate,@AssignedDTM=assigneddtm,                               
   @PageIndexNo=pageindexno, @recordCount=recordcount,@Title=title                                    
   --Added By Pravin Rane on 14-Aug-2015                                    
   ,@Module=module,@RCACategory=rcacategory,@PlannedStartDate=plannedstartdate,@PlannedEndDate=plannedenddate,@CLMID=clmid,                  
   @PlannedEfforts=plannedefforts,                  
   @email=email   -- vishnukanth 30 Oct 2015           
   --Added By Pravin Rane on 27-Jan-2016                              
    ,@markasread=markasread,@markasreplied=markasreplied,        
    --Added By Pravin Rane on 03-feb-2016        
    @actionable=actionable,        
    --Added By Pravin Rane on 24-May-2016        
    @isassigned= isassigned         
     --Added By Pravin Rane on 03-June-2016        
     ,@isclientintimated=isclientintimated      
     ,@meetingid=meetingid,@clienttype=clienttype,@business=business,@opportunityid=opportunityid,@tatfromdate=tatfromdate,@tattodate=tattodate 
     ,@modetype=modetype                                     
     from #tbl_XML_Data                                                                                             
  
 
                                               
IF(ISNULL(@PageIndexNo,0)=0)                                                                                    
 BEGIN                                                      
 set @PageIndexNo=1;                                                         
 END                                                                                    
                                                
IF(ISNULL(@recordCount,0)=0)                                   
 BEGIN                                                                                    
 set @recordCount=500;                                                                                     
 END                                                   
	
 -- IF ISNULL(@modetype,'')=''
 -- BEGIN
	--SET @modetype='Services'
 -- END 
                                            
select  @AllowCategoryAccess= cast(MasterTags.query('data(/tags/AllowCategoryAccess)')  as varchar(2))  from UserMaster where UserId=@UserId                                         
  select * into #Rowlevelsec                                                                                 
 from rowlevelsecurity                                                                                 
 where UserId=@UserId                                                                                 
 and ISNULL(AccessAllowed,0)=1 AND ISNULL(Inst_Id,0)=@Inst_Id                                             
                                                    
                                   
                                               
 /*for hierarchy level security*/                                                        
 ;with CTE(ParentId,Id,INSTID) as (                                                    
 select 0 as ParentId,CAST(@UserId as int) as Id,CAST(@Inst_Id as int) AS INSTID                                                    
 union all                                                    
 select CAST(UserMaster.UserId as int) as id,                                                    
 CAST(UserMaster.UserId as int) as ParentId,                                               
 CAST(UserMaster.Inst_Id as int) as INSTID                                                    
 from CTE                                                    
 inner join UserMaster on UserMaster.ParentUserId=CTE.Id and UserMaster.Inst_Id=INSTID                                             
                                                    
 )         
  
    --Commented by pravin rane on 18-Nov-2017  
                                         
 --insert into #Rowlevelsec(UserId,ParentType,parentId,Inst_Id)                                                    
 --select @UserId,'User',Id,@Inst_Id from CTE             
   
 --end comment  
   
 --Added by pravin rane on 18-Nov-2017 to remove duplicate entries into #rowlevelsec table when parenttype='User'  
 --add above code because when user level security applicable then one entry already insert in rowlevel security table and using above code same entry inserted and duplicate tickets are displayed  
 insert into #Rowlevelsec(UserId,ParentType,parentId,Inst_Id)     
 SELECT DISTINCT @UserId,'User',ct.Id,ct.INSTID                                           
      FROM CTE ct                                          
      LEFT JOIN #Rowlevelsec rw ON rw.UserId=@UserId AND rw.ParentType='User' AND rw.parentId=ct.Id AND rw.Inst_Id=ct.INSTID                                          
      WHERE rw.UserId IS NULL AND isnull(@UserId,0)!=0  and ISNULL(ct.id,0)>0        
   
  
   
           ---End                             
                                                    
   DECLARE @IgnoreHierarchySecurity int                                                   
   select @IgnoreHierarchySecurity=(select COUNT(1) from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=7 and IsActive=1)                                                    
 /*end for hierarchy level security*/                                                
  set @IgnoreClientSecurity=(select dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'Client',@Inst_Id))                                          
                 
                 
                                            
  --IF(@IgnoreHierarchySecurity=0)                                          
  -- BEGIN                                          
  --  select @IgnoreHierarchySecurity=(select ISNULL(IgnoreRowLevelSecurity,0) as RowLevelSecurity from UserMaster where UserId=@UserId)                                          
  -- END                                           
           --------Added By Deepak-------        
 Create table #TempAllowCategory        
 (        
  TagType Varchar(100),      
  ParentTagName Varchar(500),       
  tagName varchar(500),        
  UserId Int,
  WorkFlowSwitch int --Added by pravin rane on 02-Feb-2018    
 --TicketId bigINT      
 )         
   IF @AllowCategoryAccess='1'        
 BEGIN        
 --Insert into #TempAllowCategory Select distinct TagType,tagName,@UserId FROM TagMaster Where inst_id=@Inst_Id and TagType='TaskSubCategory'           
 Insert into #TempAllowCategory Select distinct tm.TagType,tm1.tagName as ParentTagName, tm.tagName,@UserId as UserId,isnull(tm.mastertags.value('(tags/WorkFlowSwitch/node())[1]','varchar(100)'),0)as WorkFlowSwitch  FROM TagMaster tm       
 inner join TagMaster tm1 on tm.TagParent=tm1.TagId      
 Where tm.inst_id=@Inst_Id and tm1.Inst_Id=@Inst_Id and tm.TagType='TaskSubCategory' and tm1.TagType='TaskCategory' and tm.TagIsActive=1 and tm.TagIsActive=1   
 -- and  isnull(tm.mastertags.value('(tags/WorkFlowSwitch/node())[1]','varchar(100)'),0)=0--Added by pravin rane on 01-Feb-2018--WorkFlowSwitch node is used status wise tickets display to group master users
    
 END        
 Else        
 BEGIN        
  --Insert into #TempAllowCategory SELECT distinct tm.TagType, tm.tagName,@UserId FROM TagMaster tm       
   Insert into #TempAllowCategory      
   Select distinct tm.TagType,tm1.tagName as ParentTagName, tm.tagName,@UserId as UserId,isnull(tm.mastertags.value('(tags/WorkFlowSwitch/node())[1]','varchar(100)'),0)as WorkFlowSwitch  FROM TagMaster tm       
   inner join TagMaster tm1 on tm.TagParent=tm1.TagId                                                              
   CROSS APPLY tm.OpenTags.nodes('/otag/tags[@type="ShowToUser"]/ShowTo') as EMP(ED)          
                                           
   WHERE tm.Inst_Id=@Inst_Id and EMP.ED.value('.','nvarchar(100)')=@UserId        
   and tm.TagType='TaskSubCategory' and tm1.TagType='TaskCategory' and tm1.Inst_Id=@Inst_Id      
   and tm.TagIsActive=1 and tm.TagIsActive=1      
 END        
       
       
        --Added by pravin rane on 02-Feb-2018--if security is applicable then delete category subcategory into #TempAllowCategory table where workflowswitch=1
      if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=83 and IsActive=1 and @IgnoreClientSecurity=0)
		 begin
	delete from	 #TempAllowCategory where WorkFlowSwitch=1 and UserId not in(@UserId)
		 end
    
    --End
       
       
   --Wacher  Added By Deepak on 3 March 2017    
  IF OBJECT_ID('tempdb..#TempWatcher') IS NOT NULL                                                                                        
 DROP TABLE #TempWatcher       
     
 --SELECT X.TicketId,X.Type,X.SubType,X.UserId Into #TempWatcher FROM     
 --(    
 --  SELECT DISTINCT t.TicketId,t.Type,t.SubType,EMP.ED.value('.','nvarchar(100)') as 'UserId'      
 --   FROM Tickets t with (nolock)    
 --  CROSS APPLY t.OpenTags.nodes('/otag/tags[@type="Watcher"]/Watcher') as EMP(ED)     
                                              
 --  WHERE t.Inst_Id=@Inst_Id and EMP.ED.value('.','nvarchar(100)') = @UserId    
 --)X    
     
     
        
	

 SELECT Y.TicketId,Y.Date,Y.ParentType,Y.ParentId,Y.Description,    
 Y.Type,Y.SubType,Y.TAT,Y.Status,Y.Resolution,Y.AssignedTo,Y.AssignedDTM    
 ,Y.MasterTags,Y.OpenTags,Y.UpdatedBy,Y.UpdatedDTM,Y.Inst_Id,Y.ResolutionDate,    
 Y.ParentName,                                                  
Y.Assignee,                             
Y.Assigner,                                                  
Y.ParentTicketId,                                                  
Y.Escalation,                                       
Y.Title,                                                  
Y.Raisedby,                                                  
Y.RaisedbyName,                                                  
Y.Priority        
 Into #TempWatcher    
  FROM     
(    
 SELECT t.TicketId,t.Type,t.SubType,EMP.ED.value('.','nvarchar(100)') as 'UserId' FROM Tickets t with (nolock)    
 CROSS APPLY t.OpenTags.nodes('/otag/tags[@type="Watcher"]/Watcher') as EMP(ED)     
     
 WHERE t.Inst_Id=@inst_id and EMP.ED.value('.','nvarchar(100)') = @UserId  and t.TicketId=isnull(@TicketId,t.TicketId)    
 AND (@business IS null OR  LOWER(cast(t.MasterTags.query('data(/tags/Business)')  as varchar(100)))=LOWER(@business))  
 and t.ParentType=@ParentType--Added by pravin rane on 18-Nov-2017  to get parenttype wise watcher ticket (Client or User)  
   AND (@Status is null or t.Status=@Status) --Added by pravin rane on 27-Nov-2017
	   AND (ISNULL(@Type,ISNULL(t.Type,'')) = ISNULL(t.Type,''))  --Added by pravin rane on 27-Nov-2017                                            
   AND (ISNULL(@SubType,ISNULL(t.SubType,'')) = ISNULL(t.SubType,'')) --Added by pravin rane on 27-Nov-2017
   AND (@Priority IS NULL OR ISNULL(t.Priority,'')=@Priority)--Added by pravin rane on 27-Nov-2017
)X    
INNER JOIN     
(SELECT                             
 ISNUll(cm.TicketId,0) AS TicketId,                                                  
ISNULL(cm.Date,'') AS Date,                                                  
ISNULL(cm.ParentType,'') as ParentType,                                                  
ISNULL(cm.ParentId,0) as ParentId,                                                  
ISNULL(cm.Description,'') as Description,                                                  
ISNULL(cm.[Type],'') as Type,                                                  
ISNULL(cm.SubType,'') as SubType,                                             
ISNULL(cm.TAT,'') as TAT,                                                  
ISNULL(cm.Status,'') as Status,                                                  
ISNULL(cm.Resolution,'') as Resolution,                                                  
ISNULL(cm.AssignedTo,0) as AssignedTo,                                                  
ISNULL(cm.AssignedDTM,'') as AssignedDTM,                                
ISNULL(cm.MasterTags,'<tags></tags>') as MasterTags,                                                  
ISNULL(cm.OpenTags,'<otag></otag>') as OpenTags,                                                  
ISNULL(cm.UpdatedBy,0) as UpdatedBy,                                            
ISNULL(cm.UpdatedDTM,'') as UpdatedDTM,                                                  
ISNULL(cm.Inst_Id,0) as Inst_Id,                                             
ISNULL(cm.ResolutionDate,'') as ResolutionDate,                                                  
CASE WHEN ISNULL(cp.Name,'')!='' THEN cp.Name                                                   
WHEN ISNULL(cl.ClientName,'')!='' THEN cl.ClientName    
WHEN ISNULL(ld.LeadName,'')!='' THEN ld.LeadName                                                 
WHEN ISNULL(um.UserName,'')!='' THEN um.UserName                                                  
END AS ParentName,                                                  
ISNULL(um1.UserName,'') AS Assignee,                             
ISNULL(um2.UserName,'') as Assigner,                                                  
ISNULL(ParentTicketId,0) AS ParentTicketId,                                                  
ISNULL(cm.Escalation,'') AS Escalation,                                       
ISNULL(cm.Title,'') AS Title,                                                  
ISNULL(cm.Raisedby,0) AS Raisedby,                                                  
ISNULL(ct.ContactName,'') AS RaisedbyName,                                                  
ISNULL(cm.Priority,'') AS Priority                                       
                                                  
  from Tickets cm with (nolock)         
                                                                           
  LEFT join CounterParty cp on cm.ParentId=cp.CounterParty_Id and cm.ParentType='CounterParty'                                                  
  LEFT join ClientMaster cl on cm.ParentId=cl.Client_Id and cm.ParentType='Client'    
  LEFT join Lead ld on cm.ParentId=ld.Lead_Id and cm.ParentType='Lead'                                                  
  LEFT join ContactDetails cd on cd.ParentId=cl.Client_Id and cd.ParentType='Client' and cd.Type='EMail' AND cd.isDefault=1 --vishnukanth 30 Oct 2015                  
  LEFT join UserMaster um on cm.ParentId=um.UserId and cm.ParentType='User' and um.Inst_Id=@inst_id      -- Internal Task                                                
  LEFT join UserMaster um1 on cm.AssignedTo=um1.UserId and Um1.Inst_Id=@inst_id                          -- get name of user to whom ticket is assigned      
  LEFT join UserMaster um2 on cm.UpdatedBy=um2.UserId and um2.Inst_Id=@inst_id                           -- get name of user to who modified the ticket          
  LEFT join Contacts ct on ct.Contact_Id=cm.Raisedby    
) Y ON Y.TicketId=X.TicketId    
  WHERE (                                                                                   
   @opportunityid IS null OR                                                                                  
   cast(Y.MasterTags.query('data(/tags/OpportunityId)')  as varchar(20))=@opportunityid                                
   )  
     
     
  
          
   --Insert Into #TempAllowCategory    
   --Select distinct 'TaskSubCategory',Type,SubType,UserId From #TempWatcher    
       
       
 --Added by pravin rane on 28-feb-2017 add ParentTagName subtype wise in #TempAllowCategory       
 -------------------------END---------------------------                                 
      
                                             
                                                     
    
    
SELECT                                                   
ISNUll(cm.TicketId,0) AS TicketId,                                                  
ISNULL(cm.Date,'') AS Date,                                                  
ISNULL(cm.ParentType,'') as ParentType,                                                  
ISNULL(cm.ParentId,0) as ParentId,                                                  
ISNULL(cm.Description,'') as Description,                                                  
ISNULL(cm.[Type],'') as Type,                                                  
ISNULL(cm.SubType,'') as SubType,                                             
ISNULL(cm.TAT,'') as TAT,                                                  
ISNULL(cm.Status,'') as Status,                                                  
ISNULL(cm.Resolution,'') as Resolution,                                                  
ISNULL(cm.AssignedTo,0) as AssignedTo,                                                  
ISNULL(cm.AssignedDTM,'') as AssignedDTM,                                
ISNULL(cm.MasterTags,'<tags></tags>') as MasterTags,                                                  
ISNULL(cm.OpenTags,'<otag></otag>') as OpenTags,                                                  
ISNULL(cm.UpdatedBy,0) as UpdatedBy,                                            
ISNULL(cm.UpdatedDTM,'') as UpdatedDTM,                                                  
ISNULL(cm.Inst_Id,0) as Inst_Id,                                             
ISNULL(cm.ResolutionDate,'') as ResolutionDate,                                                  
CASE WHEN ISNULL(cp.Name,'')!='' THEN cp.Name                                                   
WHEN ISNULL(cl.ClientName,'')!='' THEN cl.ClientName   
WHEN ISNULL(ld.LeadName,'')!='' THEN ld.LeadName                                                
WHEN ISNULL(um.UserName,'')!='' THEN um.UserName                                                  
END AS ParentName,                                                  
ISNULL(um1.UserName,'') AS Assignee,                             
ISNULL(um2.UserName,'') as Assigner,                                                  
ISNULL(cm.ParentTicketId,0) AS ParentTicketId,                                                  
ISNULL(cm.Escalation,'') AS Escalation,                                       
ISNULL(cm.Title,'') AS Title,                                                  
ISNULL(cm.Raisedby,0) AS Raisedby,                                                  
ISNULL(ct.ContactName,'') AS RaisedbyName,                                                  
ISNULL(cm.Priority,'') AS Priority     
  into #Tickets                                           
                                              
  from Tickets cm with (nolock)         
  LEFT join CounterParty cp on cm.ParentId=cp.CounterParty_Id and cm.ParentType='CounterParty'                                                  
  LEFT join ClientMaster cl on cm.ParentId=cl.Client_Id and cm.ParentType='Client'                           
 LEFT join Lead ld on cm.ParentId=ld.Lead_Id and cm.ParentType='Lead'                                                  
  LEFT join ContactDetails cd on cd.ParentId=cl.Client_Id and cd.ParentType='Client' and cd.Type='EMail' AND cd.isDefault=1 --vishnukanth 30 Oct 2015                  
  LEFT join UserMaster um on cm.ParentId=um.UserId and cm.ParentType='User' and um.Inst_Id=@Inst_Id      -- Internal Task                                                
  LEFT join UserMaster um1 on cm.AssignedTo=um1.UserId and Um1.Inst_Id=@Inst_Id                          -- get name of user to whom ticket is assigned          
  LEFT join UserMaster um2 on cm.UpdatedBy=um2.UserId and um2.Inst_Id=@Inst_Id                           -- get name of user to who modified the ticket          
  LEFT join Contacts ct on ct.Contact_Id=cm.Raisedby                                             
  LEFT join TagMaster tag on  cm.SubType=tag.tagName and tag.TagType='TaskSubCategory' and tag.Inst_Id=@Inst_Id                             
  AND cm.Type=tag.tagName and tag.TagType='TaskCategory'     -- vishnukanth 24 sep 2015 To eleminate duplicate records       
  LEFT JOIN TagMaster TM ON TM.tagName=cm.[Type] AND TM.Inst_Id=@Inst_Id AND TM.TagType='TaskCategory'
  LEFT join #Rowlevelsec rs           
  on           
  --((cm.AssignedTo =rs.parentId AND rs.ParentType='User') OR  --commented by sunil on 21-dec-15 to solve the mantisid -          
        -- (Um2.UserId =rs.parentId AND rs.ParentType='User') )-- OR --commented by sunil on 21-dec-15                                          
         --(rs.ParentType='Client' and rs.parentId=cl.Client_Id and rs.userid=@UserId)     
         
           --Added by pravin rane on 18-Nov-2017 for internal ticket user.  
             rs.ParentId=(case when lower(@ParentType)='client' then cl.Client_Id  
							   when lower(@ParentType)='lead' then ld.Lead_Id
                               when lower(@ParentType)='user' then um.UserId end)  
                               and rs.ParentType=@ParentType and rs.Userid=@UserId   
                        
                   
  inner join #TempAllowCategory tms on cm.SubType=tms.tagName and  cm.Type=tms.ParentTagName and tms.TagType='TaskSubCategory'         
                 
  where cm.Inst_Id=@Inst_Id            
     AND (@business IS null OR  LOWER(cast(cm.MasterTags.query('data(/tags/Business)')  as varchar(100)))=LOWER(@business))                                                
   AND (ISNULL(@TicketId,ISNULL(cm.TicketId,0)) = ISNUll(cm.TicketId,0))                                                     
   AND (ISNULL(@ParentTicketId,ISNULL(cm.ParentTicketId,0)) = ISNUll(cm.ParentTicketId,0))                                                  
   AND (ISNULL(@ParentId,ISNULL(cm.parentId,0)) = ISNUll(cm.parentId,0))                                                                
   AND (ISNULL(@ParentType,ISNULL(cm.ParentType,'')) = ISNULL(cm.ParentType,''))                                                  
   AND (ISNULL(@Type,ISNULL(cm.Type,'')) = ISNULL(cm.Type,''))                                              
   AND (ISNULL(@SubType,ISNULL(cm.SubType,'')) = ISNULL(cm.SubType,''))                                                    
   AND (@TAT IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.TAT,106)) =  convert(datetime,CONVERT(VARCHAR(11),@TAT,106)))                                                         
   AND (@Status is null or cm.Status=@Status)            
   AND (@AssignedTo is null or cm.AssignedTo=@AssignedTo)                                                    
   AND (@AssignedDTM IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.AssignedDTM,106)) =  convert(datetime,CONVERT(VARCHAR(11),@AssignedDTM,106)))    
   AND (@UpdatedBy is null or cm.UpdatedBy=@UpdatedBy)    
       
   AND (@ResolutionDate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.ResolutionDate,106)) =  convert(datetime,CONVERT(VARCHAR(11),@ResolutionDate,106)))                                                      
  AND (@Priority IS NULL OR ISNULL(cm.Priority,'')=@Priority) --commented by sunil on 21/12/15 as not used curently  --uncommented by pravin rane on 31Mar2016 currently used        
  --  AND (@Raisedby IS NULL OR ISNULL(cm.Raisedby,0)=@Raisedby)         
  --  AND (@Escalation IS NULL OR ISNULL(cm.Escalation,'')=@Escalation)                                          
  --  AND (@Title IS NULL OR ISNULL(cm.Title,'') LIKE '%'+@Title+'%')                                              
   AND (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.Date,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                             
   AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.Date,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))                                     
   AND (@tatfromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.TAT,106)) >=convert(datetime,CONVERT(VARCHAR(11),@tatfromdate,106)))     -- Added by  Deepak on 28 Feb 2018                                                       
   AND (@tattodate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.TAT,106)) <= convert(datetime,CONVERT(VARCHAR(11),@tattodate,106)))                                     
   --Added By Pravin Rane on 14-Aug-2015                   
  AND (                                                                                   
  @Module IS null OR                              
  cast(cm.MasterTags.query('data(/tags/Module)')  as varchar(20))=@Module                                                                  
  )                                      
  AND (                                                                                   
  @RCACategory IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/RCACategory)')  as varchar(20))=@RCACategory                                                                  
  )                                      
                                    
  AND (           
  @PlannedStartDate IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/PlannedStartDate)')  as varchar(20))=@PlannedStartDate                                                                  
  )                                       
  AND (                                                                                 
  @PlannedEndDate IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/PlannedEndDate)')  as varchar(20))=@PlannedEndDate                                                               
  )                                      
  AND (                                                                                   
  @CLMID IS null OR                                                        
  cast(cm.MasterTags.query('data(/tags/CLMID)')  as varchar(20))=@CLMID                                                               
  )                                       
  AND (                                                                                   
  @PlannedEfforts IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/PlannedEfforts)')  as varchar(20))=@PlannedEfforts                                                               
  )                       
        --Added By Pravin Rane on 27-Jan-2015        
              
              
  and (@markasread is null OR        
  isnull(cast(cm.MasterTags.query('data(/tags/MarkAsRead)')  as varchar(2)),0)=@markasread         
  --or cast(cm.MasterTags.query('data(/tags/MarkAsRead)')  as varchar(2))=@markasread         
  )        
        
   and (@markasreplied is null OR        
  isnull(cast(cm.MasterTags.query('data(/tags/MarkAsReplied)')  as varchar(2)),0)=@markasreplied         
  --or cast(cm.MasterTags.query('data(/tags/MarkAsReplied)')  as varchar(2))=@markasreplied         
    )                     
      --Added By Pravin Rane on 3-Feb-2016                             
      AND (                                                                                   
  @Actionable IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/Actionable)')  as varchar(20))=@actionable                                
  )  --End                   
                          and           
                          (                
        (@isassigned is null or isnull(cm.AssignedTo,0)=        
                
        case when @isassigned=0 then 0         
        end)        
               
                or                    
        (@isassigned is null or isnull(cm.AssignedTo,0)>        
                
        case when @isassigned=1 then 0  end)        
      )        
                                   
  --End by Pravin Rane 27-Jan-2015                 
          
    --Added By Pravin Rane on 15-Nov-2016            
          AND (                                                                                   
  @meetingid IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/MeetingId)')  as varchar(20))=@meetingid                                
  )  
          AND (                                                                                   
  @opportunityid IS null OR                                                                                  
  cast(cm.MasterTags.query('data(/tags/OpportunityId)')  as varchar(20))=@opportunityid                                
  )    
                             
 ---vishnukanth 30 Oct 2015                  
  AND (                                                                                   
  @email IS null OR                                                                                  
  cd.Details =@email                  
  )                    
 -- vishnukanth 30 OCt 2015                  
                   
                                    
   --AND ((case when @IgnoreHierarchySecurity=1 then 1                                                            
   -- when @IgnoreHierarchySecurity=0 and rs.parentId is not null OR tms.TagType IS not null then 1 end) =1                                                                                    
   --)                                          
    and ( CASE when @IgnoreClientSecurity=1 then 1           
   --(case when @IgnoreHierarchySecurity=1 then 1                                                                                  
    --when @IgnoreHierarchySecurity=0 and rs.parentId is not null OR tms.TagType IS not null then 1                     
    when @IgnoreClientSecurity=0 and rs.parentId is not null then 1  -- VISHNUKANTH 30 oCT 2015 (or tms.TagType IS not null)  IS  CONDITION IS COMMENTED                    
    else 0          
    END = 1                                                                        
   )                                 
               
       --Added By pravin rane on 03-June-2016        
  --     And        
  --    ( @isclientintimated is null OR        
  --     cast(cm.MasterTags.query('data(/tags/IsClientIntimated)')  as varchar(1))=@isclientintimated                                                               
  --)        
               
               
               
       And           
                          (                
        @isclientintimated is null or         
       isnull(cm.MasterTags.value('(tags/IsClientIntimated/node())[1]','varchar(100)'),0)=@isclientintimated        
                or                    
        @isclientintimated is null or         
        isnull(cm.MasterTags.value('(tags/IsClientIntimated/node())[1]','varchar(100)'),0)=@isclientintimated        
      )    
      AND(@clienttype IS NULL OR LOWER(CAST(cl.MasterTags.query('data(/tags/ClientSource)')  AS VARCHAR(50)))=LOWER(@clienttype)) --Added By Deepak on 2-May-2017      
	  --AND (@modetype IS NULL OR CAST(cm.MasterTags.query('data(/tags/ModeType)')  as varchar(100))=@modetype)  
        
         AND (@modetype IS NULL OR cm.MasterTags.value('(tags/ModeType/node())[1]','varchar(100)')=@modetype)  
          AND (@modetype IS NULL OR TM.MasterTags.value('(tags/ModeType/node())[1]','varchar(100)')=@modetype)  
        

                                                              
--SELECT                             
--ROW_NUMBER() OVER (order by [Date] desc, X.TicketId desc) AS RowIndex,*  into #Tickets     
      
	 

    insert into #Tickets    
          
  SELECT Y.TicketId,Y.Date,Y.ParentType,Y.ParentId,Y.Description,Y.Type,Y.SubType,Y.TAT,Y.Status,Y.Resolution,Y.AssignedTo,Y.AssignedDTM    
  ,Y.MasterTags,Y.OpenTags,Y.UpdatedBy,Y.UpdatedDTM,Y.Inst_Id,Y.ResolutionDate,    
  Y.ParentName,                          
  Y.Assignee,                             
  Y.Assigner,                                                  
  Y.ParentTicketId,                                                  
  Y.Escalation,                                       
  Y.Title,                                                  
  Y.Raisedby,                                                  
  Y.RaisedbyName,                                                  
  Y.Priority        
             FROM #TempWatcher Y    
  left join #Tickets T on Y.TicketId=T.TicketId    
  where T.TicketId is null    
      
     --  FROM #TempWatcher Y where Y.TicketId not in (select TicketId from  #Tickets)    
     
     
     
     
     --added by pravin rane on 01-Feb-2018
        --added by pravin rane on 01-Feb-2018
      if exists(select FeatureId from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=83 and IsActive=1 and @IgnoreClientSecurity=0)
		 begin
	


--Getting Disinct workflowid and status
	 select distinct wf.workflow_id,wf.nextStatus into #workflowstatus 
	 from
	 (
	  select TagId from tagmaster
    Cross Apply OpenTags.nodes('/otag/tags[@type="ShowToUser"]/ShowTo') as ShowToUser(ShowTo)
    where Inst_Id=@Inst_Id and   TagType='UserGroup' and 
	 TagIsActive=1 and  (ShowToUser.ShowTo.value('.','nvarchar(100)')=@UserId) 
	 )GroupID--alias--Getting distinct group id
	inner join workflow wf  with (nolock) on wf.OpenTags.value('(/otag/tags[@type="GroupID"]/GroupID/node())[1]','varchar(50)')= GroupID.tagid
	 where wf.Inst_Id=@Inst_Id

 
 SELECT 
 ISNUll(T.TicketId,0) AS TicketId,                                                  
ISNULL(T.Date,'') AS Date,                                                  
ISNULL(T.ParentType,'') as ParentType,                                                  
ISNULL(T.ParentId,0) as ParentId,                                                  
ISNULL(T.Description,'') as Description,                                                  
ISNULL(T.[Type],'') as Type,                                                  
ISNULL(T.SubType,'') as SubType,                                             
ISNULL(T.TAT,'') as TAT,                                                  
ISNULL(T.Status,'') as Status,                                                  
ISNULL(T.Resolution,'') as Resolution,                                                  
ISNULL(T.AssignedTo,0) as AssignedTo,                                                  
ISNULL(T.AssignedDTM,'') as AssignedDTM,                                
ISNULL(T.MasterTags,'<tags></tags>') as MasterTags,                                                  
ISNULL(T.OpenTags,'<otag></otag>') as OpenTags,                                                  
ISNULL(T.UpdatedBy,0) as UpdatedBy,                                            
ISNULL(T.UpdatedDTM,'') as UpdatedDTM,                                                  
ISNULL(T.Inst_Id,0) as Inst_Id,                                             
ISNULL(T.ResolutionDate,'') as ResolutionDate,   
CASE WHEN ISNULL(cp.Name,'')!='' THEN cp.Name                                                   
WHEN ISNULL(cl.ClientName,'')!='' THEN cl.ClientName   
WHEN ISNULL(ld.LeadName,'')!='' THEN ld.LeadName                                                
WHEN ISNULL(um.UserName,'')!='' THEN um.UserName                                                  
END  AS ParentName,                                             
ISNULL(um1.UserName,'') AS Assignee,                             
ISNULL(um2.UserName,'') as Assigner,                                                  
T.ParentTicketId,                                                  
T.Escalation,                                       
T.Title,                                                  
T.Raisedby,                                                  
ISNULL(ct.ContactName,'') AS RaisedbyName,                                                  
T.Priority        
 Into #GroupUsers  from
 Tickets T  with (nolock)
  LEFT join CounterParty cp on T.ParentId=cp.CounterParty_Id and T.ParentType='CounterParty'                                                  
  LEFT join ClientMaster cl on T.ParentId=cl.Client_Id and T.ParentType='Client'
  LEFT join Lead ld on T.ParentId=ld.Lead_Id and T.ParentType='Lead'                                                    
  LEFT join ContactDetails cd on cd.ParentId=cl.Client_Id and cd.ParentType='Client' and cd.Type='EMail' AND cd.isDefault=1 --vishnukanth 30 Oct 2015                  
  LEFT join UserMaster um on T.ParentId=um.UserId and T.ParentType='User' and um.Inst_Id=@Inst_Id      -- Internal Task                                                
  LEFT join UserMaster um1 on T.AssignedTo=um1.UserId and Um1.Inst_Id=@Inst_Id                          -- get name of user to whom ticket is assigned      
  LEFT join UserMaster um2 on T.UpdatedBy=um2.UserId and um2.Inst_Id=@Inst_Id                           -- get name of user to who modified the ticket          
  LEFT join Contacts ct on ct.Contact_Id=T.Raisedby  and ct.Inst_Id=@Inst_Id        
 LEFT join #Rowlevelsec rs           
  on           
             rs.ParentId=(case when lower(@ParentType)='client' then cl.Client_Id  
                               when lower(@ParentType)='lead' then ld.Lead_Id
                               when lower(@ParentType)='user' then um.UserId end)  
                               and rs.ParentType=@ParentType and rs.Userid=@UserId   
 
 inner join 
 (
  --Getting Type,subtype and status
 Select distinct tm.TagType,tm1.tagName as Type,tm.tagName as SubType, wfstatus.workflow_id,wfstatus.nextStatus as Status, @UserId as UserID --into #category
 FROM TagMaster tm  with (nolock)      
 inner join TagMaster tm1  with (nolock) on tm.TagParent=tm1.TagId 
inner join #workflowstatus wfstatus 
on wfstatus.Workflow_id=tm.mastertags.value('(tags/WorkFlowId/node())[1]','varchar(100)')   
 Where tm.inst_id=@Inst_Id and tm1.Inst_Id=@Inst_Id and tm.TagType='TaskSubCategory' and tm1.TagType='TaskCategory' and tm.TagIsActive=1 and tm1.TagIsActive=1 
and tm.mastertags.value('(tags/WorkFlowSwitch/node())[1]','varchar(100)')=1
 )WFStatus
 on T.Status=WFStatus.Status and t.Type=WFStatus.Type and t.SubType=WFStatus.SubType
where T.Inst_Id=@Inst_Id
and T.TicketId=isnull(@TicketId,T.TicketId)    
 AND (@business IS null OR  LOWER(cast(T.MasterTags.query('data(/tags/Business)')  as varchar(100)))=LOWER(@business))  
 and T.ParentType=@ParentType--Added by pravin rane on 01-Feb-2018  to get parenttype wise watcher ticket (Client or User)  
   AND (@Status is null or T.Status=@Status) --Added by pravin rane on 01-Feb-2018
	   AND (ISNULL(@Type,ISNULL(T.Type,'')) = ISNULL(T.Type,''))  --Added by pravin rane on 01-Feb-2018                                          
   AND (ISNULL(@SubType,ISNULL(T.SubType,'')) = ISNULL(T.SubType,'')) --Added by pravin rane on 01-Feb-2018
   AND (@Priority IS NULL OR ISNULL(T.Priority,'')=@Priority)--Added by pravin rane on 01-Feb-2018
     and ( CASE when @IgnoreClientSecurity=1 then 1           
    when @IgnoreClientSecurity=0 and rs.parentId is not null then 1  
    else 0          
    END = 1                                                                        
        ) 
         AND @opportunityid IS null OR                                                                                  
   cast(T.MasterTags.query('data(/tags/OpportunityId)')  as varchar(20))=@opportunityid 



      insert into #Tickets    
          
  SELECT Y.TicketId,Y.Date,Y.ParentType,Y.ParentId,Y.Description,Y.Type,Y.SubType,Y.TAT,Y.Status,Y.Resolution,Y.AssignedTo,Y.AssignedDTM    
  ,Y.MasterTags,Y.OpenTags,Y.UpdatedBy,Y.UpdatedDTM,Y.Inst_Id,Y.ResolutionDate,    
  Y.ParentName,                          
  Y.Assignee,                             
  Y.Assigner,                                                  
  Y.ParentTicketId,                                                  
  Y.Escalation,                                       
  Y.Title,                                                  
  Y.Raisedby,                                                  
  Y.RaisedbyName,                                                  
  Y.Priority        
             FROM #GroupUsers Y    
  left join #Tickets T on Y.TicketId=T.TicketId    
  where T.TicketId is null    

				    
         end
     
     
     
     
      
    --Ended by pravin rane 
     
     
     
     
     
     
     
     
              
          SELECT                             
ROW_NUMBER() OVER (order by [Date] desc, TicketId desc) AS RowIndex,*  into #ParentTickets     
        FROM #Tickets                   
                                                   
  --SELECT * into #ParentTickets  --Inserting into #ParentTickets done by Awadha Taddy on 24 Nov 2015 for sub ticket functionality                                                                          
  --FROM #Tickets                                                                                    
  --WHERE RowIndex                                                               
  --BETWEEN (1+ (@PageIndexNo * @recordCount))-@recordCount                                                              
  --AND @PageIndexNo * @recordCount                 
      
      
                                                   
  SELECT *   --Inserting into #ParentTickets done by Awadha Taddy on 24 Nov 2015 for sub ticket functionality                                                                          
  FROM #ParentTickets                                                                                    
  WHERE RowIndex                                                               
  BETWEEN (1+ (@PageIndexNo * @recordCount))-@recordCount                                                              
  AND @PageIndexNo * @recordCount          
      
                                                   
     
          
              
              
              
              
--Added by pravin rane on 30-aug-2016 add where clause  where ParentTicketId=0                   
            
                                                                 
                                                               
  SELECT                                                                 
  CASE                                                                 
  WHEN CEILING(CONVERT(float,COUNT(1))/@recordCount)=0 THEN 1                                                                 
  ELSE CEILING(CONVERT(float,COUNT(1))/@recordCount) END AS NoOfPages,(@PageIndexNo) as CurrentPage                                                                 
  from #Tickets            
                                                  
                                                        
                                                         
IF OBJECT_ID('tempdb..#Rowlevelsec') IS NOT NULL                                                                                          
   drop table #Rowlevelsec                                                         
IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                                         
  drop table #tbl_XML_Data                                                        
IF OBJECT_ID('tempdb..#Tickets') IS NOT NULL                                 
  drop table #Tickets                        
IF OBJECT_ID('tempdb..#ParentTickets') IS NOT NULL  --added by Awadha Taddy on 24 Nov 2015                
drop table #ParentTickets                                                          
IF OBJECT_ID('tempdb..#TempAllowCategory') IS NOT NULL  --added by Deepak on 3 Feb 2016                  
drop table #TempAllowCategory          
 IF OBJECT_ID('tempdb..#workflowstatus') IS NOT NULL                                                                                          
   drop table #workflowstatus  
    IF OBJECT_ID('tempdb..#GroupUsers') IS NOT NULL                                                                                          
   drop table #GroupUsers 
   
        
        
  set @OutTime=getdate()                    
insert into spExecutionTime values ('Get_Tickets',@inTime,@OutTime,@ParamXML)        
        
        
        
  END           
  
-----------------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[USP_SaveOpportunityDetails]    Script Date: 04/10/2018 14:59:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
                    
                              
ALTER PROC [dbo].[USP_SaveOpportunityDetails]                        
                           
                                
/************************************************************************                                                                                                                                                                                      
                   
 '     Object Name   : USP_OpportunityDetails                                                                                                                                                                                             
 '     Purpose       :  save opportunity details                              
 '     Author         : sagar patil                                                                                           
 '     Creation Date   : 1 jan 2014                                                                                                                                                                                                                   
 '     Code Change History  :                                                                                                                                                                                                                     
 '     --------------------------------------------------------------------                               
 '     CH#  | Modified Date |  Modified By     |  Purpose                                                                                                                                                                                                      
 '     --------------------------------------------------------------------                               
 '       1  |   1 jan 2014  | sagar patil     |                               
         2  |   19 Jan 2015 | vishnukanth     |    OpprotunityValue Added.                
         2  |   18 may 2015 | sagar        |    AssignedTo Added.     
         4  |  17 Feb 2016  |pravin        | check duplicate opportunity for same product when opportunity status is open and active     
         5  |  14 Sep 2016  |pravin        | Add ParentOppid column 
         6  |  19 Sep 2016  |Pravin	       | check case statement line number 110 for check duplicate                                                            
 '     --------------------------------------------------------------------                               
                                 
 To test :-                                
 --[USP_SaveOpportunityDetails] 24,5300,'<NewDataSet>
  <Opportunity_Id>0</Opportunity_Id>
  <parenttype>Lead</parenttype>
  <Opportunity_details />
  <StartDate>2018-04-25T01:01:00</StartDate>
  <EndDate>2018-04-03T00:00:00</EndDate>
  <parentId>13659</parentId>
  <MasterTags>
    <tags>
      <Location>Prabhadevi</Location>
      <Probability>InActive</Probability>
      <CreatedBy>5374</CreatedBy>
      <CreatedByName>Rupesh Bramhankar</CreatedByName>
    </tags>
  </MasterTags>
  <UpdatedBy>0</UpdatedBy>
  <UpdatedDTM>2018-04-03T15:10:59.666649+05:30</UpdatedDTM>
  <OpprotunityStatus>OTPPending</OpprotunityStatus>
  <OpportunityStatus>OTPPending</OpportunityStatus>
  <OpprotunityValue>0.0</OpprotunityValue>
  <OpportunityValue>0.0</OpportunityValue>
  <IsActive>true</IsActive>
  <ParentName />
  <AssignedTo>0</AssignedTo>
  <AssignedToName />
  <ProductId>1015221</ProductId>
  <ProductName />
  <UserName />
  <ParentOppId>0</ParentOppId>
</NewDataSet>'                        
 
 
 [bkp_USP_SaveOpportunityDetails_20_Jun_2017]21,3858,
 '<NewDataSet><Opportunity_Id>7349</Opportunity_Id><parenttype>Client</parenttype><Opportunity_details /><StartDate>2017-06-20T18:39:07.917</StartDate><EndDate>1900-01-01T00:00:00</EndDate><parentId>3831191</parentId><UpdatedBy>4528</UpdatedBy><UpdatedDTM>2017-06-20T18:39:55.897</UpdatedDTM><OpprotunityStatus>Credit Queries</OpprotunityStatus><OpportunityStatus>Credit Queries</OpportunityStatus><OpprotunityValue>0</OpprotunityValue><OpportunityValue>0</OpportunityValue><IsActive>true</IsActive><ParentName>Indi 2 First All Indi 2 Middle Indi 2 Last</ParentName><AssignedTo>3799</AssignedTo><AssignedToName>Vipul Patel</AssignedToName><ProductId>0</ProductId><ProductName /><UserName /><ParentOppId>0</ParentOppId></NewDataSet>'                    
 Select * from Opportunity WHERE Opportunity_Id=61913
 
************************************************************************/
        
@Inst_Id INT,@UserId int,@ParamXML xml                                
AS                                
BEGIN TRY                                
 SET TRANSACTION ISOLATION LEVEL READ COMMITTED;                               
                                
DECLARE @ErrorMessage NVARCHAR(4000),@ErrorSeverity INT,@ErrorState INT                            
                                
 DECLARE @I INT ,@inTime Datetime,@OutTime Datetime                                                                            
  set @inTime=getdate()             
                                                 
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;                                
                                 
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                
 WITH                                                
  (                             
       Opportunity_Id varchar(1000)                        
      ,Opportunity_details varchar(2000)                        
      ,StartDate varchar(1000)                        
      ,EndDate varchar(1000)                        
      ,parentId varchar(1000)                        
      ,parenttype varchar(1000)                        
      ,MasterTags  xml                        
      ,OpenTags  xml                        
      ,OpprotunityStatus varchar(1000)                    
      ,OpprotunityValue decimal(18,2)    
      ,OpportunityStatus varchar(1000)                    
      ,OpportunityValue decimal(18,2)                    
      ,IsActive bit              
      ,AssignedTo varchar(1000)        
      ,ProductId varchar(1000)
      ,ParentOppId varchar(1000)
  )       
          
 EXEC sp_xml_removedocument @I;                                  
                       
                             
 DECLARE @Opportunity_Id varchar(100),@Opportunity_details varchar(2000),                        
  @StartDate varchar(100),@EndDate varchar(100),@parentId varchar(100),               @ParentType varchar(100),--@MasterTags varchar(100),
  @MasterTags xml,
  @OpenTags varchar(100),                        
  @OpportunityStatus varchar(50),@IsRecordExists INT  , @OpprotunityValue decimal(18,2) ,@IsActive bit  ,@ProductId varchar(100),@ParentOppId varchar(100),@ProposalName varchar(1000),
  @RelationshipId VARCHAR(100), --Added By Deepak on 11 May 2017
  @AssignedTo varchar(50)--Added by pravin rane on 17-May-2017
  ,@CurrentStatus varchar(100),@Template_Id int, @MasterXML as XML,@Actionable xml ,@Template_OpenTags xml--Added by pravin rane on 20-Jun-2017
  ,@ActionableValue varchar(1),@Stage VARCHAR(100),@mtag XML  
 select @Opportunity_Id=ISNULL(Opportunity_Id,0),@ParentType=ParentType,                        
  @ParentId=ParentId ,@StartDate= StartDate,                        
  @EndDate=EndDate,@Opportunity_details=Opportunity_details,                    
  @OpprotunityValue=(case when OpprotunityValue is null then OpportunityValue     
        else OpprotunityValue      
     end  )  ,
     
      @OpportunityStatus=OpportunityStatus ,
     
     @IsActive=IsActive  ,@ProductId=ProductId,@ParentOppId=ParentOppId,
      @RelationshipId=MasterTags.value('(MasterTags/tags/RelationshipID/node())[1]','varchar(100)'),
      @AssignedTo=AssignedTo,
      @MasterTags=MasterTags
   from #tbl_XML_Data    
    
                  
                              
   select @IsRecordExists = COUNT(1),@Opportunity_Id=ISNULL(cm.Opportunity_Id,0) from Opportunity cm                            
   where cm.Inst_Id=@Inst_Id                               
   AND (ISNULL(@ParentType,ISNULL(cm.ParentType,'')) =ISNULL(cm.ParentType,''))                            
   AND (ISNULL(@ParentId,ISNULL(cm.ParentId,'')) =ISNULL(cm.ParentId,''))                          
  -- AND (ISNULL(@Opportunity_details,ISNULL(cm.Opportunity_details,'')) =ISNULL(cm.Opportunity_details,''))                        
   AND (ISNULL(CONVERT(VARCHAR(10),@StartDate,126),ISNULL(CONVERT(VARCHAR(10),cm.StartDate,126),'')) =ISNULL(CONVERT(VARCHAR(10),cm.StartDate,126),''))                        
   AND (ISNULL(CONVERT(VARCHAR(10),@EndDate,126),ISNULL(CONVERT(VARCHAR(10),cm.EndDate,126),'')) =ISNULL(CONVERT(VARCHAR(10),cm.EndDate,126),''))                        
   AND (ISNULL(@Opportunity_Id,0)!=cm.Opportunity_Id) 
      --Added by Pravin Rane on 16Feb     
   AND (ISNULL(@ProductId,0)=cm.ProductId)
   --Added by pravin rane on 17-May-2017
   AND (ISNULL(@AssignedTo,0)=cm.AssignedTo)
   ----
   AND cm.IsActive=1 and cm.OpportunityStatus=case when  @OpportunityStatus='' then 'Open' else @OpportunityStatus end
   group by cm.Opportunity_Id                         
      
      --Added by pravin rane on 20-Jun-2017
        select @CurrentStatus = [OpportunityStatus] from Opportunity where Opportunity_Id=@Opportunity_Id and Inst_Id=@Inst_Id  
      
        IF EXISTS(select NextStatus from [FN_WORKFLOW_STATUS](@inst_Id,2,@CurrentStatus,@OpportunityStatus))                                                              
     BEGIN     
     select @OpportunityStatus=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags from [FN_WORKFLOW_STATUS](@inst_Id,2,@CurrentStatus,@OpportunityStatus)                                                                                                  
      END
        ---End
        --Added BY Deepak on 26 Feb 2018
        IF EXISTS(SELECT FeatureDesc From FeatureMaster where Inst_Id=@Inst_Id AND IsActive=1 AND FeatureId=80) 
        BEGIN
        
			 IF EXISTS(SELECT NextStatus FROM [FN_WORKFLOW_STATUS](@inst_Id,3,@CurrentStatus,@OpportunityStatus))                                                              
				BEGIN         
					SELECT @OpportunityStatus=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags 
					FROM [FN_WORKFLOW_STATUS](@inst_Id,3,@CurrentStatus,@OpportunityStatus)
					
					-----Temp Added On 3 Apr 2018--
					DECLARE @Probability VARCHAR(50),@mtagprobability xml
					SELECT @Probability=MasterTags.value('(MasterTags/tags/Probability/node())[1]','varchar(20)') FROM #tbl_XML_Data
					IF (@Probability='InActive' AND @CurrentStatus='OTPPending' and @OpportunityStatus='OPTVerified')					
						BEGIN
							IF(@MASTERTAGS IS NOT NULL)         
								BEGIN       
									UPDATE #tbl_XML_Data                                        
									SET mastertags.modify('delete(//MasterTags//tags//Probability)[1]') FROM #tbl_XML_Data  WHERE                                        
									MasterTags.value('(MasterTags/tags/Probability/node())[1]','varchar(100)') IS NOT  NULL 
									AND Opportunity_id=@Opportunity_Id      
				
						SET @mtagprobability=CONVERT(XML,'<Probability>Active</Probability>')                                      
						UPDATE #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtagprobability") as last into (/MasterTags/tags)[1]') where  MasterTags IS NOT NULL                                        
						AND Opportunity_id=@Opportunity_Id  
							END 
						ELSE                                        
							BEGIN                                         
								UPDATE #tbl_XML_Data set MasterTags='<MasterTags><tags><Probability>Active</Probability></tags></MasterTags>'  WHERE MasterTags IS NULL                                                                 
							AND Opportunity_id=@Opportunity_Id
						END     
					END  
					----END---		                                                                                                  
				END
        END   
        --Added BY Deepak on 1 Mar 2018
         IF EXISTS(SELECT FeatureDesc From FeatureMaster where Inst_Id=@Inst_Id AND IsActive=1 AND FeatureId=87) 
        BEGIN
        
			 IF EXISTS(SELECT NextStatus FROM [FN_WORKFLOW_STATUS](@inst_Id,5,@CurrentStatus,@OpportunityStatus))                                                              
				BEGIN         
			
					SELECT @OpportunityStatus=NextStatus,@Template_Id=Template_Id,@Actionable=Actionable,@Template_OpenTags=Template_OpenTags 
					FROM [FN_WORKFLOW_STATUS](@inst_Id,5,@CurrentStatus,@OpportunityStatus)                                                                                                  
				END
        END 
        SET @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))
        SET @Stage =(select @Actionable.value('(tags/Stage/node())[1]','varchar(100)'))

        IF(@Actionable IS NOT NULL)                                        
		BEGIN        
		SELECT @MASTERTAGS=MasterTags FROM #tbl_XML_Data                                
		IF(@MASTERTAGS IS NOT NULL)                                        
			BEGIN                      
	                
			--For Edit delete existing node in #tbl_XML_Data table                                        
				UPDATE #tbl_XML_Data                                        
				SET mastertags.modify('delete(//MasterTags//tags//Actionable)[1]') FROM #tbl_XML_Data  WHERE                                        
				MasterTags.value('(MasterTags/tags/Actionable/node())[1]','varchar(100)') IS NOT  NULL 
				AND Opportunity_id=@Opportunity_Id     
				                                                                    
      --set @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
				SET @mtag=CONVERT(XML,'<Actionable>'+@ActionableValue+'</Actionable>')                                      
				UPDATE #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtag") as last into (/MasterTags/tags)[1]') where  MasterTags IS NOT NULL                                        
				AND Opportunity_id=@Opportunity_Id 

			END                                                                         
		 ELSE                                        
			BEGIN                                         
			UPDATE #tbl_XML_Data set MasterTags='<MasterTags><tags><Actionable>'+@ActionableValue+'</Actionable></tags></MasterTags>'  WHERE MasterTags IS NULL                                                                 
			AND Opportunity_id=@Opportunity_Id
			END                                        
		END       
	--	declare @OpportunityStage varchar(100)
	--	SELECT @OpportunityStage=MasterTags.value('(MasterTags/tags/Stage/node())[1]','varchar(100)') FROM #tbl_XML_Data
	--IF (ISNULL(@OpportunityStage,'')='')
	--BEGIN
		    
        IF (ISNULL(@Stage,'')<>'')
        BEGIN
			IF(@MASTERTAGS IS NOT NULL)         
			BEGIN       
				UPDATE #tbl_XML_Data                                        
				SET mastertags.modify('delete(//MasterTags//tags//Stage)[1]') FROM #tbl_XML_Data  WHERE                                        
				MasterTags.value('(MasterTags/tags/Stage/node())[1]','varchar(100)') IS NOT  NULL 
				AND Opportunity_id=@Opportunity_Id      
				
				SET @mtag=CONVERT(XML,'<Stage>'+@Stage+'</Stage>')                                      
				UPDATE #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtag") as last into (/MasterTags/tags)[1]') where  MasterTags IS NOT NULL                                        
				AND Opportunity_id=@Opportunity_Id  
			END 
			ELSE                                        
			BEGIN                                         
			UPDATE #tbl_XML_Data set MasterTags='<MasterTags><tags><Stage>'+@Stage+'</Stage></tags></MasterTags>'  WHERE MasterTags IS NULL                                                                 
			AND Opportunity_id=@Opportunity_Id
			END     
        END  
        
       -- End                                     
       
IF(@IsRecordExists!=0)                          
 BEGIN                           
   SELECT @ErrorMessage=N'Records already exists. %s%s',@ErrorSeverity=12,@ErrorState=4         
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState,'#:#',@Opportunity_Id);                            
 END                          
 ELSE                          
  --print isnull(@Opportunity_Id,0)                    
 BEGIN                          
 IF(@Opportunity_Id=0)                            
   BEGIN                            
    INSERT INTO Opportunity(                            
      Opportunity_details                        
      ,StartDate                        
      ,EndDate                        
      ,parentId                        
      ,ParentType                        
      ,MasterTags                        
      ,OpenTags                        
      ,UpdatedBy                        
      ,UpdatedDTM                        
      ,Inst_Id                        
      ,OpportunityStatus                    
      ,OpportunityValue                  
      ,IsActive              
      ,AssignedTo        
      ,ProductId
      ,ParentOppId)                                
   select                            
    Opportunity_details                        
      ,StartDate                        
      ,EndDate                        
      ,parentId            
      ,ParentType                        
      ,MasterTags.query('/MasterTags/tags')                        
      ,OpenTags.query('/OpenTags/otag')                        
      ,@UserId                        
      ,GETDATE()                        
,@Inst_Id                        
     -- ,(case when OpprotunityStatus is null then OpportunityStatus     
     --   else OpprotunityStatus      
     --end  )  
     ,@OpportunityStatus                   
      ,@OpprotunityValue                   
      ,@IsActive               
      ,AssignedTo        
      ,ProductId 
      ,ParentOppId                  
                               
    from #tbl_XML_Data  
     set @MasterXML= '<tags><PrevStatus></PrevStatus></tags>'        
    set  @Opportunity_Id= SCOPE_IDENTITY()                                       
   select SCOPE_IDENTITY() as Opportunity_Id,'Record saved successfuly.' as message,@Template_Id as Template_Id ,                                                                   
    @MasterXML as MasterTag,@Template_OpenTags as Template_OpenTags                                                              
   END                          
  ELSE                          
  BEGIN        
  
  
   --Added By Pravin Rane on 25-Aug-2016
                                                 
   INSERT INTO OpportunityHistory(                                              
    Opportunity_Id,
	Opportunity_details,
	StartDate ,
	EndDate,
	parentId,
	ParentType,
	MasterTags,
	OpenTags,
	LastUpdatedBy,
	LastUpdatedDTM,
	HistoryDTM,
	OpportunityStatus,
	OpportunityValue,
	IsActive,
	AssignedTo,
	ProductId                                  
   )                                              
   select Opportunity_Id,Opportunity_details,StartDate,EndDate,parentId,ParentType,MasterTags,                                              
   OpenTags,UpdatedBy,UpdatedDTM,GETDATE(),@OpportunityStatus,OpportunityValue,IsActive,AssignedTo,ProductId from Opportunity                                              
   where Opportunity_Id=@Opportunity_Id                                              
  
  
  
  --Update CurrentStageAgingDate in  if stage is changed
  --Added by pravin rane on 20-Jun-2017
 
     
  --if(@Opportunity_Id>0 and @CurrentStatus<>@OpportunityStatus and ISNULL(@CurrentStatus,'')<>'' and ISNULL(@OpportunityStatus,'')<>'')
  -- begin
  --      declare @CurrentStageAgingDate varchar(25)
  --      --set @CurrentStageAgingDate= CONVERT(varchar(11),getdate(),106)
  --      set @CurrentStageAgingDate=(select getdate() for XML Path(''))
    
  
    
	 --  if(@MasterTags is not null)
		--   begin 
		 
		--   --Delete  existing node(CurrentStageAgingDate) in #tbl_XML_Data table  
		   
		--   		   --delete existing node which value is null this node created from front end for exponentia SF
		--     UPDATE #tbl_XML_Data    
		--	  SET mastertags.modify('delete(//MasterTags//tags//CurrentStageAgingDate)[1]') from #tbl_XML_Data  where                                        
		--	  MasterTags.value('(MasterTags/tags/CurrentStageAgingDate/node())[1]','varchar(100)') is   null   
		   
		   
		--   --For existing  delete node 
		--	  UPDATE #tbl_XML_Data    
		--	  SET mastertags.modify('delete(//MasterTags//tags//CurrentStageAgingDate)[1]') from #tbl_XML_Data  where                                        
		--	  MasterTags.value('(MasterTags/tags/CurrentStageAgingDate/node())[1]','varchar(100)') is not  null   
	    
		--	  declare @mtag xml                                        
		--	 --set @ActionableValue=(select @Actionable.value('(tags/Actionable/node())[1]','varchar(1)'))                                        
		--	  set @mtag=convert(xml,'<CurrentStageAgingDate>'+@CurrentStageAgingDate+'</CurrentStageAgingDate>')                                        
		--	  update #tbl_XML_Data set  MasterTags.modify('insert sql:variable("@mtag") as last into (/MasterTags/tags)[1]') where  MasterTags is not null                                        
		--  end
		--  else                                        
		--	  begin
			                               
		--	  update #tbl_XML_Data set MasterTags='<MasterTags><tags><CurrentStageAgingDate>'+@CurrentStageAgingDate+'</CurrentStageAgingDate></tags></MasterTags>'  where MasterTags is null                                                                 
	
		--  end             
                   
  -- end
  --Ended Update CurrentStageAgingDate 
                    
   UPDATE c                             
   SET  C.Opportunity_details=td.Opportunity_details                        
      ,C.StartDate=td.StartDate                        
      ,C.EndDate=td.EndDate                        
     ,C.parentId=td.parentId                        
      ,C.ParentType=td.ParentType                        
      ,C.MasterTags=td.MasterTags.query('/MasterTags/tags')                        
      ,C.OpenTags=td.OpenTags.query('/OpenTags/otag')                        
      ,C.UpdatedBy=@UserId                        
      ,C.UpdatedDTM=GETDATE()                        
      ,C.Inst_Id=@Inst_Id,                        
     -- ,C.OpportunityStatus=(case when td.OpprotunityStatus is null then td.OpportunityStatus     
     --   else td.OpprotunityStatus      
     --end  )   
     C.OpportunityStatus=@OpportunityStatus
      ,C.OpportunityValue=(case when td.OpprotunityValue is null then td.OpportunityValue     
        else td.OpprotunityValue      
     end  )                  
      ,C.IsActive=td.IsActive              
      ,c.AssignedTo=td.AssignedTo          
      ,c.ProductId=td.ProductId
      ,c.ParentOppId=td.ParentOppId                   
   FROM Opportunity c             
   INNER JOIN #tbl_XML_Data td on c.Opportunity_Id=td.Opportunity_Id       
   
   
   
   
      
     set @MasterXML= '<tags><PrevStatus>'+ @CurrentStatus + '</PrevStatus></tags>'  --Added by pravin rane on 20-Jun-2017                                     
   select @Opportunity_Id as Opportunity_Id,'Record saved successfuly.' as message,      
  ISNULL(@Template_Id,0) as Template_Id , @MasterXML as MasterTag,@Template_OpenTags as Template_OpenTags --Added by pravin rane on 20-Jun-2017
   
                        
  END                          
 END 
 
	IF ISNULL(@RelationshipId,'')!=''  --Added BY Deepak On 11 May 2017
	BEGIN
		Update Relationships SET OpportunityID=@Opportunity_Id WHERE Inst_Id=@Inst_Id AND Relationship_Id =@RelationshipId 
    END

  --Added By pravin rane on 20-Feb-2017 (discussed opportunity save into Interaction table opetag column for wam  becuase on mobile end they are calling  same api more than one time)
     
     if exists (select * from   #tbl_XML_Data  where MasterTags.exist('(//MasterTags/tags/IsDiscussed)')=1)                                        
     begin
       declare @MeetingId as varchar(100),@IsDiscussed varchar(10),@ProductName varchar(500)                                              
       select  @MeetingId=ISNULL(nullif(CAST(#tbl_XML_Data.MasterTags.query('data(/MasterTags/tags/MeetingId)') as varchar(50)),''),0),
       @IsDiscussed=ISNULL(nullif(CAST(#tbl_XML_Data.MasterTags.query('data(/MasterTags/tags/IsDiscussed)') as varchar(10)),''),0)
        from  #tbl_XML_Data   
   
       
        if(@IsDiscussed='1')
        begin
        
        set @OpportunityStatus=(select  (case when OpprotunityStatus is null then OpportunityStatus     
        else OpprotunityStatus end  ) from #tbl_XML_Data)
        
    
        
        set @ProductName=(select ltrim(rtrim(tagName)) from TagMaster where TagId=@ProductId and Inst_Id=@Inst_Id)
        declare @MeetingOpenTag varchar(max),@otags xml
       
         Select  OpportunityID.OpportunityID.value('.','nvarchar(100)') as 'OpportunityID'  into #DiscussOpportunity from   interactions interactions     
         Cross Apply interactions.OpenTags.nodes('/otag/tags[@type="OpportunityId"]/OpportunityId') as OpportunityID(OpportunityID) where  interactions.opentags is not null and    
         Interactions.InteractionId=@MeetingId and  interactions.Inst_Id=@Inst_Id  and interactions.IsActive=1 
  
--drop table #DiscussOpportunity


           set @MeetingOpenTag=(select CAST(opentags as varchar(max)) from interactions where Inst_id=@Inst_Id and interactionid=cast(@MeetingId as bigint))
 
           if(@MeetingOpenTag='' OR @MeetingOpenTag is  null)
                        begin 
                        
                        set @MeetingOpenTag='<otag><tags type="OpportunityId"><OpportunityId xmlns:json="http://james.newtonking.com/projects/json" ProductName="'+@ProductName+'" OpportunityStatus="'+@OpportunityStatus+'" OpportunityValue="'+cast(@OpprotunityValue as varchar(100))+'" json:Array="true">'+@Opportunity_Id+'</OpportunityId></tags></otag>'
                      
                        update interactions  set OpenTags=CONVERT(xml,@MeetingOpenTag), updatedDTM=getdate(),updatedBy=@UserId where OpenTags is  null and Inst_Id=@Inst_Id and InteractionId=cast(@MeetingId as bigint)
                     end
                      else
                       begin
                    
                         if (select COUNT(opportunityid) from #DiscussOpportunity)>0
							 begin
							
								 --set @MeetingOpenTag=cast(convert(xml,'<OpportunityId xmlns:json="http://james.newtonking.com/projects/json" ProductName="'+@ProductName+'"OpportunityStatus="'+@OpportunityStatus+'"OpportunityValue="'+cast(ISNULL(NULLIF(@OpprotunityValue,''),'') as varchar(100))+'" json:Array="true">'+@Opportunity_Id+'</OpportunityId>')as varchar(max))
								 -- print @OpenTags
								 set @MeetingOpenTag='<OpportunityId xmlns:json="http://james.newtonking.com/projects/json" ProductName="'+@ProductName+'" OpportunityStatus="'+@OpportunityStatus+'" OpportunityValue="'+cast(@OpprotunityValue as varchar(100))+'" json:Array="true">'+@Opportunity_Id+'</OpportunityId>'
							
								 set @otags=CONVERT(xml,@MeetingOpenTag)
	                         
								  UPDATE Interactions
	                 			  SET OpenTags.modify('insert sql:variable("@otags")as last into (/otag/tags[@type="OpportunityId"])[1]'),updatedDTM=getdate(),updatedBy=@UserId   where OpenTags is not  NULL  
								  and Inst_Id=@Inst_Id  and InteractionId=cast(@MeetingId as bigint)
                              end
                      else
                      begin 
                  	         set @MeetingOpenTag='<tags type="OpportunityId"><OpportunityId xmlns:json="http://james.newtonking.com/projects/json" ProductName="'+@ProductName+'" OpportunityStatus="'+@OpportunityStatus+'" OpportunityValue="'+cast(@OpprotunityValue as varchar(100))+'" json:Array="true">'+@Opportunity_Id+'</OpportunityId></tags>'
						     	
							 set @otags=CONVERT(xml,@MeetingOpenTag)
							  UPDATE Interactions
	        	              SET OpenTags.modify('insert sql:variable("@otags")as last into (/otag)[1]'),updatedDTM=getdate(),updatedBy=@UserId  where OpenTags is not  NULL  
		                      and Inst_Id=@Inst_Id and InteractionId=cast(@MeetingId as bigint)
                        end
                   end
		
		                        
                end
        
        end
                          
          set @OutTime=getdate()                                                                                    
insert into spExecutionTime values ('USP_SaveOpportunityDetails',@inTime,@OutTime,@ParamXML)                            
  IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                               
     drop table #tbl_XML_Data                                
                                                           
  IF OBJECT_ID('tempdb..#DiscussOpportunity') IS NOT NULL                                               
     drop table #DiscussOpportunity
                              
 --exec [USP_SaveClientRowLevelSecurity] '<NewDataSet><ArrayOfInstId><Inst_Id>4</Inst_Id></ArrayOfInstId><ArrayOfInstId><Inst_Id>2</Inst_Id></ArrayOfInstId></NewDataSet>'                                                                                    
     
                               
                                  
END TRY                            
BEGIN CATCH                            
                                
     SELECT @ErrorMessage=ERROR_MESSAGE(),@ErrorSeverity=ERROR_SEVERITY(),@ErrorState=ERROR_STATE()                                 
     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);                            
                                 
END CATCH 



------------------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Rpt_Opportunity_LevelOfRelationship_Geography]    Script Date: 04/10/2018 14:59:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
    
/************************************************************************                                                      
 '     Object Name   : Rpt_Opportunity_LevelOfRelationship_Geography    
 '     Purpose       :     
 '     Author        : Deepak                                                                                                               
 '     Creation Date : 26 Sep 2016    
 EXEC [dbo].[Rpt_Opportunity_LevelOfRelationship_GeographySept] 1,2,'<NewDataSet><fromdate>2017-08-01</fromdate>    
 <todate>2017-08-31</todate>    
 </NewDataSet>'    
     
 EXEC [dbo].[Rpt_Opportunity_LevelOfRelationship_Geography] 1,2,'<NewDataSet><fromdate>2017-09-01</fromdate>    
 <todate>2017-10-30</todate><drillflag>1</drillflag>  
 </NewDataSet>'    
************************************************************************/                   
ALTER PROC [dbo].[Rpt_Opportunity_LevelOfRelationship_Geography]
(      
@UserId INT,@Inst_Id INT, @ParamXML XML      
)      
AS      
BEGIN      
  DECLARE @I INT                                                                                         
     EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;      
     SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                             
  WITH(      
 fromdate varchar(100),    
 todate varchar(100),    
 rmid BigInt,  
 drillflag Bit,  
 [geography] VARCHAR(100),  
 relationshipstatus VARCHAR(100)  
 )      
 EXEC sp_xml_removedocument @I;    
 DECLARE @fromdate AS DATETIME,@todate AS DATETIME,@rmname VARCHAR(100),@datediff INT,@M1 VARCHAR(100),@M2 VARCHAR(100),@M3 VARCHAR(100),    
 @QueryM1 nVARCHAR(MAX),@QueryM2 nVARCHAR(MAX),@QueryM3 nVARCHAR(MAX),@Query nVARCHAR(MAX),@QueryGTotal nVARCHAR(MAX),@rmid BigINt,@drillflag Bit,@geography VARCHAR(100),  
 @relationshipstatus VARCHAR(100)   
 SELECT @fromdate=fromdate,    
 @todate=todate,@rmid=rmid,@drillflag=drillflag,@geography=[geography],@relationshipstatus=relationshipstatus FROM #tbl_XML_Data    
 SELECT @datediff=DATEDIFF(d,@fromdate,@todate);    
   IF @geography='grand total'
   BEGIN
	SET @geography=null
   END
   IF ISNULL(@drillflag,0)=0  
  Begin  
  SET @drillflag=0  
  End  
     
 select * into #totMeetingAll from         
     (    
  select  distinct Product,Stage,OppId,A.InteractionId,A.InteractionDTM from (    
 select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[1]', 'varchar(100)') as  Product    
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[1]', 'varchar(100)') As Stage    
,Opentags.value('(/otag/tags/OpportunityId)[1]', 'varchar(100)') As OppId    
,I.InteractionId,I.InteractionDTM    
 from  interactions i where Inst_Id=2 and Opentags.value('(/otag/tags/OpportunityId)[1]', 'varchar(100)') is not null    
     
union      
    
select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[2]', 'varchar(100)')    
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[2]', 'varchar(100)')    
,Opentags.value('(/otag/tags/OpportunityId)[2]', 'varchar(100)') As OppId,    
I.InteractionId,I.InteractionDTM    
 from  interactions i where Inst_Id=2  and Opentags.value('(/otag/tags/OpportunityId)[2]', 'varchar(100)') is not null    
    
union      
    
select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[3]', 'varchar(100)')    
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[3]', 'varchar(100)')    
,Opentags.value('(/otag/tags/OpportunityId)[3]', 'varchar(100)') As OppId,    
I.InteractionId,I.InteractionDTM    
 from  interactions i where Inst_Id=2 and Opentags.value('(/otag/tags/OpportunityId)[3]', 'varchar(100)') is not null    
  )A    
  Inner JOin Opportunity O on A.OppId=O.Opportunity_Id    
  Inner join ClientMaster CM on CM.Client_Id=O.parentId and O.ParentType='Client'    
  --Inner JOin UserMaster UM ON UM.UserId=CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')  and CM.Client_Id=O.parentId and O.ParentType='Client'    
    Inner Join InteractionParticipants IP ON IP.InteractionId=A.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  where UM.UserName IN (    
   'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'    
   )    
  )P       
     
 IF OBJECT_ID('tempdb..#totMeeting') IS NOT NULL                                                                    
 DROP TABLE #totMeeting      
 Select * INTO #totMeeting from #totMeetingAll A Left Join TagMaster TM ON RTRIM(LTRIM(A.Stage))=RTRIM(LTRIM(TM.tagName))     
 WHERE TM.TagIsActive=1 AND TM.TagType='Stage'  AND TM.Inst_Id=@Inst_Id    
     
 IF OBJECT_ID('tempdb..#TempLevel') IS NOT NULL                                                                    
 DROP TABLE #TempLevel      
  SELECT distinct UM.UserId,UM.UserName,O.Opportunity_Id,CM.MasterTags.value('(tags/Geography/node())[1]','varchar(100)')  AS 'Geography',P.Stage as OpportunityStatus   
  into #TempLevel FROM Opportunity O     
  INNER JOIN ClientMaster CM ON CM.Client_Id=O.parentId AND O.ParentType='Client'    
  inner join #totMeeting P on P.OppId=o.Opportunity_Id     
   INNER JOIN Interactions I ON  P.InteractionId=I.InteractionId    
  --Inner Join UserMaster UM ON UM.UserId =CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')    
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE O.Inst_Id=@Inst_Id AND CM.Inst_Id =@Inst_Id    
  AND (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                           
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))     
  --AND UM.UserName IN (    
  -- 'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'    
  -- )    
   AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
 IF OBJECT_ID('tempdb..#TempOpp') IS NOT NULL                                                                    
 DROP TABLE #TempOpp    
  SELECT * INTO #TempOpp FROM (SELECT COUNT([Geography]) AS 'GeographyCount',[Geography],OpportunityStatus FROM #TempLevel     
  GROUP BY [Geography],OpportunityStatus) AS T     
  PIVOT    
  (    
    SUM(GeographyCount) FOR OpportunityStatus IN (L0,L1,L2,L3,L4,L5)     
  ) AS Pvt    
      
  --Meeting 1 Data    
  IF OBJECT_ID('tempdb..#Meeting1') IS NOT NULL                                                                    
  DROP TABLE #Meeting1    
  SELECT DISTINCT CM.MasterTags.value('(tags/Geography/node())[1]','varchar(100)') AS 'Geography',P.OppId INTO #Meeting1     
  FROM Opportunity O     
  INNER JOIN ClientMaster CM ON O.parentId=CM.Client_Id    
  inner join #totMeeting P on P.OppId=o.Opportunity_Id     
  INNER JOIN Interactions I ON  P.InteractionId=I.InteractionId    
   --Inner Join UserMaster UM ON UM.UserId =CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')    
     Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE O.ParentType='Client' AND O.Inst_Id=@inst_id  AND I.Inst_Id=@inst_id AND    
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                           
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))    
  --AND UM.UserName IN (    
  -- 'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'    
  -- )    
   AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  SELECT @M1=CONVERT(VARCHAR(11),@fromdate)    
  SELECT @M1='('+@M1+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'    
  PRINT @M1;    
      
  --Meeting Data 2    
  --SELECT @todate=DATEADD(d,-(@datediff+1),CONVERT(DATETIME,@todate))    
  --SELECT @fromdate=DATEADD(d,-(@datediff),CONVERT(DATETIME,@todate))    
  SELECT @fromdate=dbo.fn_GetFistDayOfMonth(DATEADD(M,-1,@fromdate))    
  SELECT @todate=dbo.fn_GetLastDayOfMonth(DATEADD(M,-1,@todate))    
    
  IF OBJECT_ID('tempdb..#Meeting2') IS NOT NULL                                                                    
  DROP TABLE #Meeting2    
  SELECT DISTINCT CM.MasterTags.value('(tags/Geography/node())[1]','varchar(100)') AS 'Geography',P.OppId INTO #Meeting2 FROM Opportunity O     
  INNER JOIN ClientMaster CM ON O.parentId=CM.Client_Id    
  inner join #totMeeting P on P.OppId=o.Opportunity_Id     
  INNER JOIN Interactions I ON P.InteractionId=I.InteractionId    
  -- Inner Join UserMaster UM ON UM.UserId =CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')    
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE O.ParentType='Client' AND O.Inst_Id=@inst_id AND I.Inst_Id=@inst_id AND     
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                           
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))    
   --AND UM.UserName IN (    
   --'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'    
   --)    
    AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  SELECT @M2=CONVERT(VARCHAR(11),@fromdate)    
  SELECT @M2='('+@M2+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'    
  PRINT @M2;    
      
      
  --Meeting Data 3    
  --SELECT @todate=DATEADD(d,-(@datediff+1),CONVERT(DATETIME,@todate))    
  --SELECT @fromdate=DATEADD(d,-(@datediff),CONVERT(DATETIME,@todate))    
  SELECT @fromdate=dbo.fn_GetFistDayOfMonth(DATEADD(M,-1,@fromdate))    
  SELECT @todate=dbo.fn_GetLastDayOfMonth(DATEADD(M,-1,@todate))    
  IF OBJECT_ID('tempdb..#Meeting3') IS NOT NULL                                                                    
  DROP TABLE #Meeting3    
  SELECT DISTINCT CM.MasterTags.value('(tags/Geography/node())[1]','varchar(100)') AS 'Geography',P.OppId INTO #Meeting3 FROM Opportunity O     
  INNER JOIN ClientMaster CM ON O.parentId=CM.Client_Id    
  inner join #totMeeting P on P.OppId=o.Opportunity_Id     
  INNER JOIN Interactions I ON P.InteractionId =I.InteractionId    
    --Inner Join UserMaster UM ON UM.UserId =CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')    
   Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE O.ParentType='Client' AND O.Inst_Id=@inst_id AND I.Inst_Id=@inst_id AND     
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                           
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),I.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))    
   --AND UM.UserName IN (    
   --'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'    
   --)    
    AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  SELECT @M3=CONVERT(VARCHAR(11),@fromdate)    
  SELECT @M3='('+@M3+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'    
  PRINT @M3;    
      
  IF OBJECT_ID('tempdb..#TempGeog') IS NOT NULL                                                                    
  DROP TABLE #TempGeog    
  SELECT * INTO #TempGeog FROM     
  (    
  SELECT [Geography] FROM #Meeting1    
  UNION     
  SELECT [Geography] FROM #Meeting2    
  UNION    
  SELECT [Geography] FROM #Meeting3    
  ) T    
      
  IF OBJECT_ID('tempdb..##TempM1') IS NOT NULL                                                                    
  DROP TABLE ##TempM1    
  SELECT @QueryM1='SELECT COUNT(*) AS ['+@M1+'],[Geography] INTO ##TempM1 FROM #Meeting1 GROUP BY [Geography]'    
  EXEC SP_EXECUTESQL @QueryM1    
      
  IF OBJECT_ID('tempdb..##TempM2') IS NOT NULL                                                                    
  DROP TABLE ##TempM2    
  SELECT @QueryM2='SELECT COUNT(*) AS ['+@M2+'],[Geography] INTO ##TempM2 FROM #Meeting2 GROUP BY [Geography]'    
  EXEC SP_EXECUTESQL @QueryM2    
      
  IF OBJECT_ID('tempdb..##TempM3') IS NOT NULL                                                                    
  DROP TABLE ##TempM3    
  SELECT @QueryM3='SELECT COUNT(*) AS ['+@M3+'],[Geography] INTO ##TempM3 FROM #Meeting3 GROUP BY [Geography]'    
  EXEC SP_EXECUTESQL @QueryM3    
      
  --IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                    
  --DROP TABLE ##TempMeeting    
  --SELECT @Query='SELECT ISNULL(G.[Geography],'''') AS Geography,ISNULL(O.L0,0) AS L0,ISNULL(O.L1,0) AS L1,ISNULL(O.L2,0) AS L2,    
  --ISNULL(O.L3,0) AS L3,ISNULL(O.L4,0) AS L4,ISNULL(O.L5,0) AS L5,ISNULL(M1.['+@M1+'],0) AS ['+@M1+'],ISNULL(M2.['+@M2+'],0) AS ['+@M2+'],ISNULL(M3.['+@M3+'],0) AS ['+@M3+'] INTO ##TempMeeting    
  --FROM #TempGeog G LEFT JOIN #TempOpp O ON G.[Geography]=O.[Geography]    
  --LEFT JOIN ##TempM1 M1 ON G.[Geography]=M1.[Geography]    
  --LEFT JOIN ##TempM2 M2 ON G.[Geography]=M2.[Geography]    
  --LEFT JOIN ##TempM3 M3 ON G.[Geography]=M3.[Geography]';    
    
  IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                    
  DROP TABLE ##TempMeeting    
  SELECT @Query='SELECT ISNULL(G.[Geography],'''') AS Geography,ISNULL(O.L0,0) AS L0,ISNULL(O.L1,0) AS L1,ISNULL(O.L2,0) AS L2,    
  ISNULL(O.L3,0) AS L3,ISNULL(O.L4,0) AS L4,ISNULL(O.L5,0) AS L5,ISNULL(M1.['+@M1+'],0) AS Col1,ISNULL(M2.['+@M2+'],0) AS Col2,ISNULL(M3.['+@M3+'],0) AS Col3 INTO ##TempMeeting    
  FROM #TempGeog G LEFT JOIN #TempOpp O ON G.[Geography]=O.[Geography]    
  LEFT JOIN ##TempM1 M1 ON G.[Geography]=M1.[Geography]    
  LEFT JOIN ##TempM2 M2 ON G.[Geography]=M2.[Geography]    
  LEFT JOIN ##TempM3 M3 ON G.[Geography]=M3.[Geography]';    
      
  EXEC SP_EXECUTESQL @Query    
      
  --IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                    
  --DROP TABLE ##TempSum    
  --SELECT @QueryGTotal ='SELECT ''Grand Total'' AS ''Geography'',SUM(L0) AS ''L0'',SUM(L1) AS ''L1'',SUM(L2) AS ''L2'',SUM(L3) AS ''L3'',    
  --SUM(L4) AS ''L4'',SUM(L5) AS ''L5'',SUM(['+@M1+']) AS ['+@M1+'],SUM(['+@M2+']) AS ['+@M2+'],SUM(['+@M3+']) AS ['+@M3+']     
  --INTO ##TempSum FROM ##TempMeeting'    
  IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                    
  DROP TABLE ##TempSum    
  SELECT @QueryGTotal ='SELECT ''Grand Total'' AS ''Geography'',SUM(L0) AS ''L0'',SUM(L1) AS ''L1'',SUM(L2) AS ''L2'',SUM(L3) AS ''L3'',    
  SUM(L4) AS ''L4'',SUM(L5) AS ''L5'',SUM([Col1]) AS [Col1],SUM([Col2]) AS [Col2],SUM([Col3]) AS [Col3]     
  INTO ##TempSum FROM ##TempMeeting'    
      
  EXEC SP_EXECUTESQL @QueryGTotal    
      
   IF @drillflag=0  
 Begin  
  SELECT * FROM ##TempMeeting where [Geography] IS NOT NULL    
   UNION ALL     
  SELECT * FROM ##TempSum     
 END  
 ELSE  
 BEGIN  
  Select ROW_NUMBER() Over(order by T.Opportunity_id)  AS 'SRNo',T.UserId AS 'RMId',T.UserName AS 'RMName',T.Opportunity_Id,  
  T.[Geography],T.OpportunityStatus,CONVERT(VARCHAR(11),M.InteractionDTM,106) AS 'Date',CM.ClientName,TM.tagName AS 'ProductName'  
  from #TempLevel T Left Join Opportunity O ON T.Opportunity_Id=O.Opportunity_Id  
  LEft Join ClientMaster CM ON CM.Client_Id=O.parentId AND O.ParentType='Client'  
  Left JOin TagMaster TM ON TM.TagId=O.ProductId AND TM.TagType='WamProducts' AND TM.Inst_Id=@Inst_Id
  Left Join #totMeetingAll M ON M.OppId=O.Opportunity_Id AND M.Product=TM.tagName AND TM.Inst_Id=@Inst_Id
  Where (@rmid IS NULL OR UserId=@rmid) AND (@relationshipstatus IS NULL OR T.OpportunityStatus=@relationshipstatus)  
  AND (@geography IS NULL OR T.[Geography]=@geography)  

 END  
  IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                    
  DROP TABLE ##TempMeeting    
  IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                    
  DROP TABLE ##TempSum    
  
    
      
END      

-------------------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Rpt_Opportunity_LevelOfRelationship]    Script Date: 04/10/2018 14:59:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************                                                        
 '     Object Name   : Rpt_Opportunity_LevelOfRelationship      
 '     Purpose       :       
 '     Author        : Deepak                                                                                                                 
 '     Creation Date : 26 Sep 2016      
 EXEC [dbo].[Rpt_Opportunity_LevelOfRelationship] 1,2,'<NewDataSet><fromdate>2017-09-01</fromdate>  
 <todate>2017-09-30</todate><drillflag>1</drillflag></NewDataSet>'  
      
************************************************************************/                     
ALTER PROC [dbo].[Rpt_Opportunity_LevelOfRelationship]        
(        
@UserId INT,@Inst_Id INT, @ParamXML XML        
)        
AS        
BEGIN        
  DECLARE @I INT                                                                                           
     EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;        
     SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                               
  WITH(        
 fromdate varchar(100),      
 todate varchar(100),      
 rmid BigInt,  
 drillflag Bit,  
 relationshipstatus VARCHAR(100)  
 )        
 EXEC sp_xml_removedocument @I;      
 DECLARE @fromdate AS DATETIME,@todate AS DATETIME,@rmid BigInt,@datediff INT,@M1 VARCHAR(100),@M2 VARCHAR(100),@M3 VARCHAR(100),      
 @QueryM1 nVARCHAR(MAX),@QueryM2 nVARCHAR(MAX),@QueryM3 nVARCHAR(MAX),@Query nVARCHAR(MAX),@QueryGTotal nVARCHAR(MAX),@drillflag bit,@relationshipstatus VARCHAR(100)  
 SELECT @fromdate=fromdate,      
 @todate=todate,      
 @rmid=rmid,  
 @drillflag=drillflag,@relationshipstatus=relationshipstatus FROM #tbl_XML_Data      
 SELECT @datediff=DATEDIFF(d,@fromdate,@todate);      
       
    IF ISNULL(@drillflag,0)=0  
  Begin  
  SET @drillflag=0  
  End  
  
 select * into #totMeetingAll from           
     (      
  select  distinct Product,Stage,OppId,A.InteractionId,A.InteractionDTM from (      
 select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[1]', 'varchar(100)') as  Product      
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[1]', 'varchar(100)') As Stage      
,Opentags.value('(/otag/tags/OpportunityId)[1]', 'varchar(100)') As OppId      
,I.InteractionId,I.InteractionDTM      
 from  interactions i where Inst_Id=2 and Opentags.value('(/otag/tags/OpportunityId)[1]', 'varchar(100)') is not null      
       
union        
      
select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[2]', 'varchar(100)')      
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[2]', 'varchar(100)')      
,Opentags.value('(/otag/tags/OpportunityId)[2]', 'varchar(100)') As OppId,      
I.InteractionId,I.InteractionDTM      
 from  interactions i where Inst_Id=2  and Opentags.value('(/otag/tags/OpportunityId)[2]', 'varchar(100)') is not null      
      
union        
      
select   Opentags.value('(/otag/tags/OpportunityId/@ProductName)[3]', 'varchar(100)')      
,Opentags.value('(/otag/tags/OpportunityId/@OpportunityStatus)[3]', 'varchar(100)')      
,Opentags.value('(/otag/tags/OpportunityId)[3]', 'varchar(100)') As OppId,      
I.InteractionId,I.InteractionDTM      
 from  interactions i where Inst_Id=2 and Opentags.value('(/otag/tags/OpportunityId)[3]', 'varchar(100)') is not null      
  )A      
  Inner JOin Opportunity O on A.OppId=O.Opportunity_Id      
  Inner join ClientMaster CM on CM.Client_Id=O.parentId and O.ParentType='Client'      
  --Inner JOin UserMaster UM ON UM.UserId=CM.MasterTags.value('(tags/Primary/node())[1]','BigInt')  and CM.Client_Id=O.parentId and O.ParentType='Client'      
  Inner Join InteractionParticipants IP ON IP.InteractionId=A.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  --where UM.UserName IN (      
  -- 'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'      
  -- )      
   Where UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  )P         
       
    
  
      IF OBJECT_ID('tempdb..#totMeeting') IS NOT NULL                                                                    
 DROP TABLE #totMeeting      
 Select * INTO #totMeeting from #totMeetingAll A Left Join TagMaster TM ON RTRIM(LTRIM(A.Stage))=RTRIM(LTRIM(TM.tagName))     
 WHERE TM.TagIsActive=1 AND TM.TagType='Stage'  AND TM.Inst_Id=@Inst_Id    
       
  IF OBJECT_ID('tempdb..#TempLevel') IS NOT NULL                                                                      
  DROP TABLE #TempLevel        
  SELECT Distinct O.Opportunity_Id,UM.UserName,UM.UserId,P.Stage as OpportunityStatus INTO #TempLevel FROM Opportunity O       
  INNER JOIN ClientMaster CM ON O.parentId=CM.Client_Id       
 -- INNER JOIN UserMaster UM ON CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')=UM.UserId        
  inner join #totMeeting P on P.OppId=o.Opportunity_Id      
  Inner JOIN Interactions I ON P.InteractionId=I.InteractionId and P.OppId=o.Opportunity_Id     
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'     
  WHERE O.Inst_Id=@Inst_Id AND CM.Inst_Id=@Inst_Id      
  AND (@fromdate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),P.InteractionDTM,106)) >=CONVERT(DATETIME,CONVERT(VARCHAR(11),@fromdate,106)))                                                             
  AND (@todate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),P.InteractionDTM,106)) <= CONVERT(DATETIME,CONVERT(VARCHAR(11),@todate,106)))      
  --AND UM.UserName IN (      
  -- 'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'      
  -- )      
  AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
         
  IF OBJECT_ID('tempdb..#TempOpp') IS NOT NULL                                                                      
 DROP TABLE #TempOpp        
  SELECT * INTO #TempOpp FROM (SELECT COUNT(UserName) AS 'RMCount',UserName AS 'RMName',OpportunityStatus FROM #TempLevel       
  GROUP BY UserName,OpportunityStatus) AS T       
  PIVOT      
  (      
   SUM(RMCount) FOR OpportunityStatus IN (L0,L1,L2,L3,L4,L5)       
  ) AS Pvt      
        
 --Meeting 1 Data      
  IF OBJECT_ID('tempdb..#Meeting1') IS NOT NULL                                                                      
  DROP TABLE #Meeting1      
  SELECT DISTINCT UM.UserName AS 'RMName',P.OppId INTO #Meeting1 FROM Opportunity O Left Join      
  ClientMaster CM ON CM.Client_Id=O.parentId and ParentType='Client'      
     inner join #totMeeting P on P.OppId=o.Opportunity_Id       
  Inner JOIN Interactions I ON P.InteractionId=I.InteractionId and P.OppId=o.Opportunity_Id       
  --INNER JOIN UserMaster UM ON CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')=UM.UserId        
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE I.Inst_Id=@inst_id AND CM.Inst_Id=@Inst_Id AND      
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                             
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))      
   --AND UM.UserName IN (      
   --'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'      
   --)      
   AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  GROUP BY UM.UserName,P.OppId  
  SELECT @M1=CONVERT(VARCHAR(11),@fromdate)      
  SELECT @M1='('+@M1+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'      
        
  --Meeting Data 2      
  --SELECT @todate=DATEADD(d,-(@datediff+1),CONVERT(DATETIME,@todate))      
  --SELECT @fromdate=DATEADD(d,-(@datediff),CONVERT(DATETIME,@todate))      
  SELECT @fromdate=dbo.fn_GetFistDayOfMonth(DATEADD(M,-1,@fromdate))      
  SELECT @todate=dbo.fn_GetLastDayOfMonth(DATEADD(M,-1,@todate))      
  IF OBJECT_ID('tempdb..#Meeting2') IS NOT NULL                                                                      
  DROP TABLE #Meeting2      
  SELECT DISTINCT UM.UserName AS 'RMName' ,P.OppId INTO #Meeting2 FROM Opportunity O       
  inner Join ClientMaster CM ON CM.Client_Id=O.parentId      
  inner join #totMeeting P on P.OppId=o.Opportunity_Id       
  Inner JOIN Interactions I ON P.InteractionId=I.InteractionId and P.OppId=o.Opportunity_Id       
  --INNER JOIN UserMaster UM ON CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')=UM.UserId        
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE I.Inst_Id=@inst_id AND CM.Inst_Id=@Inst_Id AND      
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                  
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))      
   --AND UM.UserName IN (      
   --'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'      
   --)      
   AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  GROUP BY UM.UserName,P.OppId   
  SELECT @M2=CONVERT(VARCHAR(11),@fromdate)      
  SELECT @M2='('+@M2+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'      
  PRINT @M2;      
  --Meeting Data 3      
  --SELECT @todate=DATEADD(d,-(@datediff+1),CONVERT(DATETIME,@todate))      
  --SELECT @fromdate=DATEADD(d,-(@datediff),CONVERT(DATETIME,@todate))      
  SELECT @fromdate=dbo.fn_GetFistDayOfMonth(DATEADD(M,-1,@fromdate))      
  SELECT @todate=dbo.fn_GetLastDayOfMonth(DATEADD(M,-1,@todate))      
  IF OBJECT_ID('tempdb..#Meeting3') IS NOT NULL                                                                      
  DROP TABLE #Meeting3      
  SELECT DISTINCT UM.UserName AS 'RMName',P.OppId  INTO #Meeting3 FROM Opportunity O Left Join      
  ClientMaster CM ON CM.Client_Id=O.parentId      
  inner join #totMeeting P on P.OppId=o.Opportunity_Id       
  Inner JOIN Interactions I ON P.InteractionId=I.InteractionId and P.OppId=o.Opportunity_Id       
  --INNER JOIN UserMaster UM ON CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')=UM.UserId        
    Inner Join InteractionParticipants IP ON IP.InteractionId=I.InteractionId AND IP.ParticipantType='user'  
Inner Join UserMaster UM ON  IP.ParticipantId=UM.UserId AND IP.ParticipantType='user'  
  WHERE I.Inst_Id=@inst_id AND CM.Inst_Id=@Inst_Id AND      
  (@fromdate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@fromdate,106)))                                                             
  AND (@todate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),P.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@todate,106)))      
   --AND UM.UserName IN (      
   --'Chandi J R','Fergus Fleming','Neil Heywood','Pranjul Srivastava','Sachin Shah','Shirsha Ganguly','Vivek Sharma'      
   --)      
   AND UM.LoginId IN ('Chandi','ffguest','PSGuest','ShirshaG','SachinS','VivekSharma','NeilH','ShirshaG')  
  GROUP BY UM.UserName,P.OppId   
  SELECT @M3=CONVERT(VARCHAR(11),@fromdate)      
  SELECT @M3='('+@M3+')'+' - ('+CONVERT(VARCHAR(11),@todate)+')'      
        
  IF OBJECT_ID('tempdb..#TempRM') IS NOT NULL                                    
  DROP TABLE #TempRM      
  SELECT * INTO #TempRM FROM       
  (      
  SELECT [RMName] FROM #Meeting1      
  UNION       
  SELECT [RMName] FROM #Meeting2      
  UNION      
  SELECT [RMName] FROM #Meeting3      
  ) T      
        
  IF OBJECT_ID('tempdb..##TempM1') IS NOT NULL                                                                      
  DROP TABLE ##TempM1      
  SELECT @QueryM1='SELECT COUNT(*) AS ['+@M1+'],[RMName] INTO ##TempM1 FROM #Meeting1 GROUP BY [RMName]'      
  EXEC SP_EXECUTESQL @QueryM1      
        
  IF OBJECT_ID('tempdb..##TempM2') IS NOT NULL                                                                      
  DROP TABLE ##TempM2      
  SELECT @QueryM2='SELECT COUNT(*) AS ['+@M2+'],[RMName] INTO ##TempM2 FROM #Meeting2 GROUP BY [RMName]'      
  EXEC SP_EXECUTESQL @QueryM2      
        
  IF OBJECT_ID('tempdb..##TempM3') IS NOT NULL                                                                      
  DROP TABLE ##TempM3      
  SELECT @QueryM3='SELECT COUNT(*) AS ['+@M3+'],[RMName] INTO ##TempM3 FROM #Meeting3 GROUP BY [RMName]'      
  EXEC SP_EXECUTESQL @QueryM3      
        
  --IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                      
  --DROP TABLE ##TempMeeting      
  --SELECT @Query='SELECT ISNULL(RM.[RMName],'''') AS [RMName],ISNULL(O.L0,0) AS L0,ISNULL(O.L1,0) AS L1,ISNULL(O.L2,0) AS L2,ISNULL(O.L3,0) AS L3,      
  --ISNULL(O.L4,0) AS L4,ISNULL(O.L5,0) AS L5,ISNULL(M1.['+@M1+'],0) AS ['+@M1+'],ISNULL(M2.['+@M2+'],0) AS ['+@M2+'],ISNULL(M3.['+@M3+'],0) AS ['+@M3+'] INTO ##TempMeeting      
  --FROM #TempRM RM LEFT JOIN #TempOpp O ON RM.[RMName]=O.[RMName]      
  --LEFT JOIN ##TempM1 M1 ON RM.[RMName]=M1.[RMName]      
  --LEFT JOIN ##TempM2 M2 ON RM.[RMName]=M2.[RMName]      
  --LEFT JOIN ##TempM3 M3 ON RM.[RMName]=M3.[RMName]';      
  --print @Query      
      
  IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                      
  DROP TABLE ##TempMeeting      
  SELECT @Query='SELECT ISNULL(RM.[RMName],'''') AS [RMName],ISNULL(O.L0,0) AS L0,ISNULL(O.L1,0) AS L1,ISNULL(O.L2,0) AS L2,ISNULL(O.L3,0) AS L3,      
  ISNULL(O.L4,0) AS L4,ISNULL(O.L5,0) AS L5,ISNULL(M1.['+@M1+'],0) AS [Col1],ISNULL(M2.['+@M2+'],0) AS [Col2],ISNULL(M3.['+@M3+'],0) AS [Col3] INTO ##TempMeeting      
  FROM #TempRM RM LEFT JOIN #TempOpp O ON RM.[RMName]=O.[RMName]      
  LEFT JOIN ##TempM1 M1 ON RM.[RMName]=M1.[RMName]      
  LEFT JOIN ##TempM2 M2 ON RM.[RMName]=M2.[RMName]      
  LEFT JOIN ##TempM3 M3 ON RM.[RMName]=M3.[RMName]';      
  print @Query      
        
  EXEC SP_EXECUTESQL @Query      
        
  --IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                      
  --DROP TABLE ##TempSum      
  --SELECT @QueryGTotal ='SELECT ''Grand Total'' AS ''RMName'',SUM(L0) AS ''L0'',SUM(L1) AS ''L1'',SUM(L2) AS ''L2'',SUM(L3) AS ''L3'',      
  --SUM(L4) AS ''L4'',SUM(L5) AS ''L5'',SUM(['+@M1+']) AS ['+@M1+'],SUM(['+@M2+']) AS ['+@M2+'],SUM(['+@M3+']) AS ['+@M3+']       
  --INTO ##TempSum FROM ##TempMeeting'      
      
  IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                      
  DROP TABLE ##TempSum      
  SELECT @QueryGTotal ='SELECT ''Grand Total'' AS ''RMName'',SUM(L0) AS ''L0'',SUM(L1) AS ''L1'',SUM(L2) AS ''L2'',SUM(L3) AS ''L3'',      
  SUM(L4) AS ''L4'',SUM(L5) AS ''L5'',SUM([Col1]) AS [Col1],SUM([Col2]) AS [Col2],SUM([Col3]) AS [Col3]       
  INTO ##TempSum FROM ##TempMeeting'      
        
  EXEC SP_EXECUTESQL @QueryGTotal      
        
  IF @drillflag=0  
  BEGIN  
 SELECT T.*,UM.UserId AS 'RMId' FROM (  
 SELECT * FROM ##TempMeeting      
 UNION ALL      
 SELECT * FROM ##TempSum)T Left Join UserMaster UM ON UM.UserName=T.RMName AND UM.Inst_Id=@Inst_Id  
  END  
  ELSE  
  BEGIN  
 Select ROW_NUMBER() Over(ORDER BY T.Opportunity_Id) AS 'SRNo',UserName AS 'RMName',T.UserId AS 'RMId',T.OpportunityStatus,  
 CONVERT(VARCHAR(11),M.InteractionDTM,106) AS 'Date',CM.ClientName,TM.tagName AS 'ProductName' from #TempLevel T Left Join Opportunity O   
 ON O.Opportunity_Id=T.Opportunity_Id  
 LEFT JOIN ClientMaster CM ON CM.Client_Id=O.parentId AND O.ParentType='Client'  
 Left Join TagMaster TM ON TM.TagId=O.ProductId AND TM.TagType='WamProducts' AND TM.Inst_Id=@Inst_Id
 Left Join #totMeetingAll M ON M.OppId=O.Opportunity_Id AND M.Product=TM.tagName AND TM.Inst_Id=@Inst_Id
 Where (@rmid IS NULL OR UserId=@rmid) AND (@relationshipstatus IS NULL OR T.OpportunityStatus=@relationshipstatus)  
  END  
  
    IF OBJECT_ID('tempdb..##TempMeeting') IS NOT NULL                                                                    
  DROP TABLE ##TempMeeting    
  IF OBJECT_ID('tempdb..##TempSum') IS NOT NULL                                                                    
  DROP TABLE ##TempSum    
        
        
END        
        
        
-----------------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Get_OpportunityDealWise_InstId_21]    Script Date: 04/10/2018 14:59:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
ALTER PROC [dbo].[Get_OpportunityDealWise_InstId_21]    
                                                                                
/************************************************************************    
 '     Object Name   : Get_OpportunityDealWise_InstId_21    
 '     Purpose       : Get Opportunity Deal Wise    
 '     Author        : Deepak    
 '     Creation Date : 21 June 2017    
Test:     
EXEC [Get_OpportunityDealWise_InstId_21] 21,1910,  
'<NewDataSet><parenttype><![CDATA[client]]></parenttype><fromstagedate><![CDATA[2017-oct-04]]>  
</fromstagedate><tostagedate><![CDATA[2017-oct-18]]></tostagedate><tagname><![CDATA[opportunitydealwise]]>  
</tagname></NewDataSet>'  
  
************************************************************************/    
  
@Inst_Id INT,@UserId int,@ParamXML xml                                                           
AS                                                                                
BEGIN   
                                                                                                           
  DECLARE @I INT, @inTime Datetime,@OutTime Datetime                          
  set @inTime=getdate()                                                                                                                         
                                                                                                  
  EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;                                                                                
                                                                                  
  SELECT * INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                                                                
  WITH                                                                                          
   (    
   parentid VARCHAR(100),                                                                                
   parenttype VARCHAR(100),                                                                     
   lob VARCHAR(100),    
   fromdate VARCHAR(100),                                                                                   
   todate VARCHAR(100),    
   dealid VARCHAR(100),    
   [status] VARCHAR(100),    
   rm VARCHAR(100),    
   opportunity_id varchar(100),    
   agingday varchar(100),    
   totalaging VARCHAR(100),    
   icstatus VARCHAR(100),    
   riskcategory varchar(100),    
   ddstatus VARCHAR(100),  
   fromstagedate VARCHAR(100),  
   tostagedate VARCHAR(100)    
   )            
       
   IF OBJECT_ID('tempdb..#tbl_XML_Data1') IS NOT NULL    
   DROP TABLE #tbl_XML_Data1      
  -- SELECT * INTO #tbl_XML_Data1  FROM OPENXML (@I, 'NewDataSet/opportunitystatus/status',2)                                                                                                
  --WITH                                                  
  --(                                                                      
  --[status] varchar(100) '.'                                                                          
  --)                                 
 ;WITH CTE    
 AS    
 (    
    SELECT  [xml_val] = CAST('<t>' + REPLACE(ddstatus,',','</t><t>') + '</t>' AS XML)    
    FROM #tbl_XML_Data    
 )    
 SELECT ddstatus = col.value('.','VARCHAR(100)') INTO #tbl_XML_Data1 FROM CTE     
 CROSS APPLY [xml_val].nodes('/t') CA(col)                                                                                                                                             
  EXEC sp_xml_removedocument @I;                                    
                                                                                  
                                                                            
  DECLARE @ParentId VARCHAR(100),@ParentType VARCHAR(100),@LOB VARCHAR(100),@FromDate VARCHAR(100),@ToDate VARCHAR(100),@IgnoreClientSecurity INT,    
  @IgnoreLeadSecurity INT,@Status VARCHAR(100),@Rm VARCHAR(100),@Opportunity_Id VARCHAR(100),@agingday VARCHAR(100),@totalaging VARCHAR(100),  
  @icstatus VARCHAR(100),@riskcategory varchar(100),@FromStageDate VARCHAR(100),@ToStageDate VARCHAR(100)    
                                     
  SELECT @ParentId=parentid,@ParentType=parenttype,@LOB=lob,@FromDate=fromdate,@ToDate=todate,@Status=[status],@Rm=rm,@Opportunity_Id=opportunity_id,    
  @agingday=agingday,@totalaging=totalaging,@icstatus=icstatus,@riskcategory=riskcategory,@FromStageDate=fromstagedate,@ToStageDate=tostagedate  
  FROM #tbl_XML_Data         
    
  SELECT DISTINCT UserId,ParentType,parentId,AccessAllowed,Inst_Id INTO #Rowlevelsec                                                                                 
  FROM rowlevelsecurity                                                                                 
  WHERE UserId=@UserId                                                                                 
  AND ISNULL(AccessAllowed,0)=1 AND ISNULL(Inst_Id,0)=@Inst_Id                                                        
                                                                   
  DECLARE @IgnoreProductLevelSecurity INT    
  SELECT @IgnoreProductLevelSecurity=(SELECT COUNT(1) from FeatureMaster WHERE Inst_Id=@Inst_Id AND FeatureId=9 AND IsActive=1)                                          
                                               
  IF(@IgnoreProductLevelSecurity=0)                                          
  BEGIN                                                      
  SET @IgnoreProductLevelSecurity=(SELECT COUNT(1) FROM UserMaster WHERE UserId=@UserId AND Inst_Id=@Inst_Id AND     
  CAST(MasterTags.query('/tags/IgnoreProductRowlevelSecurity/text()') as varchar(5))='1')                                                   
  END                                                                                                                              
   SET @IgnoreClientSecurity =(SELECT dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'Client',@Inst_Id))     
   SET @IgnoreLeadSecurity  =(SELECT dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'Lead',@Inst_Id))                   
       
   IF OBJECT_ID('tempdb..#tempOpportunityClient') IS NOT NULL    
  DROP TABLE #tempOpportunityClient    
   SELECT UM.UserId AS 'RM',UM.UserName AS 'RMName',CM.ClientName,O.Opportunity_Id,O.OpportunityValue,O.OpportunityStatus,O.UpdatedDTM,O.MasterTags,O.OpenTags,O.StartDate    
   INTO #tempOpportunityClient FROM Opportunity O INNER JOIN ClientMaster CM ON CM.Client_Id=O.parentId AND O.ParentType='Client'    
    LEFT JOIN #tbl_XML_Data1 xdt ON O.OpportunityStatus = (CASE WHEN (SELECT COUNT(1) from #tbl_XML_Data1)>0 THEN xdt.[ddstatus] ELSE                                                              
         O.OpportunityStatus END)    
   --LEFT JOIN UserMaster UM ON UM.UserId=CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')    
   --LEFT JOIN UserMaster UM ON UM.UserId=O.MasterTags.value('(tags/PrimaryRMID/node())[1]','varchar(100)')  
    LEFT JOIN UserMaster UM ON UM.UserId=isnull(O.AssignedTo,0)
   --LEFT JOIN UserMaster UML ON UML.UserId=CM.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')    
   --LEFT JOIN UserMaster UML ON UML.UserId=O.MasterTags.value('(tags/PrimaryRMID/node())[1]','varchar(100)')  
      LEFT JOIN UserMaster UML ON UML.UserId=isnull(O.AssignedTo,0)  
     
   LEFT JOIN #Rowlevelsec rs on (O.parentId =rs.parentId AND rs.ParentType=O.ParentType)    
   LEFT JOIN #Rowlevelsec rs1 on  rs1.parentId=O.ProductId AND rs1.ParentType='Product'    
   WHERE O.Inst_Id =@Inst_Id AND O.ParentType='Client'     
   --AND (ISNULL(@Status,ISNULL(O.OpportunityStatus,'')) = ISNULL(O.OpportunityStatus,''))    
    AND 1 = (CASE WHEN (SELECT COUNT(1) FROM #tbl_XML_Data1)>0 AND xdt.[ddstatus] IS NOT NULL THEN 1                                                               
  WHEN (SELECT COUNT(1) FROM #tbl_XML_Data1)<= 0 THEN 1                                                               
  ELSE 0 END)    
   AND (ISNULL(@Opportunity_Id,ISNULL(O.Opportunity_Id,'')) = ISNULL(O.Opportunity_Id,''))    
   AND (ISNULL(@ParentId,ISNULL(O.parentId,'')) = ISNULL(O.parentId,''))    
   AND (ISNULL(@riskcategory,ISNULL(O.MasterTags.value('(tags/RiskCategory/node())[1]','varchar(100)'),'')) = ISNULL(O.MasterTags.value('(tags/RiskCategory/node())[1]','varchar(100)'),''))    
   AND (ISNULL(@LOB,ISNULL(UML.MasterTags.value('(tags/LOB/node())[1]','varchar(100)'),'')) = ISNULL(UML.MasterTags.value('(tags/LOB/node())[1]','varchar(100)'),''))    
   AND (@FromStageDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),CAST(O.MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME),106))>=CONVERT(DATETIME,CONVERT(VARCHAR(11),@FromStageDate,106)))                                     
                                           
   AND (@ToStageDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),CAST(O.MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME),106))<=CONVERT(DATETIME,CONVERT(VARCHAR(11),@ToStageDate,106)))  
   AND (@FromDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),O.StartDate,106))>=CONVERT(DATETIME,CONVERT(VARCHAR(11),@FromDate,106)))                                                                                    
   AND (@ToDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),O.StartDate,106))<=CONVERT(DATETIME,CONVERT(VARCHAR(11),@ToDate,106)))     
   AND (ISNULL(@Rm,ISNULL(UM.UserId,'')) = ISNULL(UM.UserId,''))    
   AND ((CASE WHEN @IgnoreClientSecurity=1 THEN 1                                                                                      
   WHEN @IgnoreClientSecurity=0 and rs.parentId = O.parentId                
   AND rs.ParentType=O.ParentType THEN 1 END) =1                                                         
    )    
  AND ((CASE WHEN @IgnoreProductLevelSecurity=1 THEN 1    
     WHEN @IgnoreProductLevelSecurity=0 AND rs1.parentId IS NOT NULL THEN 1 END) =1)     
    AND O.IsActive=1 AND UM.IsActive=1 AND UML.IsActive=1 --Added by pravin rane on 17-Oct-2017_19_30_pm as discussed with siddharth     
     IF OBJECT_ID('tempdb..#tempOpportunityLead') IS NOT NULL      
  DROP TABLE #tempOpportunityLead      
   SELECT UM.UserId AS 'RM',UM.UserName AS 'RMName',LD.LeadName,O.Opportunity_Id,O.OpportunityValue,O.OpportunityStatus,O.UpdatedDTM,O.MasterTags,O.OpenTags,O.StartDate       
   INTO #tempOpportunityLead FROM Opportunity O     
   INNER JOIN Lead LD ON LD.Lead_Id=O.parentId AND O.ParentType='Lead'      
    LEFT JOIN #tbl_XML_Data1 xdt ON O.OpportunityStatus = (CASE WHEN (SELECT COUNT(1) from #tbl_XML_Data1)>0 THEN xdt.[ddstatus] ELSE                                                                
         O.OpportunityStatus END)      
   --LEFT JOIN UserMaster UM ON UM.UserId=LD.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')      
   --LEFT JOIN UserMaster UML ON UML.UserId=LD.MasterTags.value('(tags/Primary/node())[1]','varchar(100)')      
   --LEFT JOIN UserMaster UM ON UM.UserId=O.MasterTags.value('(tags/PrimaryRMID/node())[1]','varchar(100)')   
   --LEFT JOIN UserMaster UML ON UML.UserId=O.MasterTags.value('(tags/PrimaryRMID/node())[1]','varchar(100)')  
    LEFT JOIN UserMaster UM ON UM.UserId=isnull(O.AssignedTo,0)
   LEFT JOIN UserMaster UML ON UML.UserId=isnull(O.AssignedTo,0)  

   LEFT JOIN #Rowlevelsec rs on (O.parentId =rs.parentId AND rs.ParentType=O.ParentType)      
   LEFT JOIN #Rowlevelsec rs1 on  rs1.parentId=O.ProductId AND rs1.ParentType='Product'      
   WHERE O.Inst_Id =@Inst_Id AND O.ParentType='Lead'       
   --AND (ISNULL(@Status,ISNULL(O.OpportunityStatus,'')) = ISNULL(O.OpportunityStatus,''))      
    AND 1 = (CASE WHEN (SELECT COUNT(1) FROM #tbl_XML_Data1)>0 AND xdt.[ddstatus] IS NOT NULL THEN 1                                                                 
  WHEN (SELECT COUNT(1) FROM #tbl_XML_Data1)<= 0 THEN 1                                                                 
  ELSE 0 END)      
   AND (ISNULL(@Opportunity_Id,ISNULL(O.Opportunity_Id,'')) = ISNULL(O.Opportunity_Id,''))      
   AND (ISNULL(@ParentId,ISNULL(O.parentId,'')) = ISNULL(O.parentId,''))      
   AND (ISNULL(@riskcategory,ISNULL(O.MasterTags.value('(tags/RiskCategory/node())[1]','varchar(100)'),'')) = ISNULL(O.MasterTags.value('(tags/RiskCategory/node())[1]','varchar(100)'),''))      
   AND (ISNULL(@LOB,ISNULL(UML.MasterTags.value('(tags/LOB/node())[1]','varchar(100)'),'')) = ISNULL(UML.MasterTags.value('(tags/LOB/node())[1]','varchar(100)'),''))      
   AND (@FromStageDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),CAST(O.MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME),106))>=CONVERT(DATETIME,CONVERT(VARCHAR(11),@FromStageDate,106)))  
   AND (@ToStageDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),CAST(O.MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME),106))<=CONVERT(DATETIME,CONVERT(VARCHAR(11),@ToStageDate,106)))  
   AND (@FromDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),O.StartDate,106))>=CONVERT(DATETIME,CONVERT(VARCHAR(11),@FromDate,106)))                                                                                    
   AND (@ToDate IS NULL OR CONVERT(DATETIME,CONVERT(VARCHAR(11),O.StartDate,106))<=CONVERT(DATETIME,CONVERT(VARCHAR(11),@ToDate,106)))     
   AND (ISNULL(@Rm,ISNULL(UM.UserId,'')) = ISNULL(UM.UserId,''))      
   AND ((CASE WHEN @IgnoreLeadSecurity=1 THEN 1                                                                                        
   WHEN @IgnoreLeadSecurity=0 and rs.parentId = O.parentId                  
   AND rs.ParentType=O.ParentType THEN 1 END) =1                                                           
    )      
  AND ((CASE WHEN @IgnoreProductLevelSecurity=1 THEN 1      
     WHEN @IgnoreProductLevelSecurity=0 AND rs1.parentId IS NOT NULL THEN 1 END) =1)       
       AND O.IsActive=1 AND UM.IsActive=1 AND UML.IsActive=1 --Added by pravin rane on 17-Oct-2017_19_30_pm as discussed with siddharth     
    
   IF OBJECT_ID('tempdb..#tempOpportunity') IS NOT NULL      
  DROP TABLE #tempOpportunity      
      
  select * into #tempOpportunity from     
  (    
  select * from #tempOpportunityClient    
  union all  
  select * from #tempOpportunityLead    
  ) as T        
       
       
 --IF OBJECT_ID('tempdb..#TempOpp') IS NOT NULL    
 --  DROP TABLE #TempOpp      
 --  Select * INTO #TempOpp FROM     
 --  (    
 --  SELECT Opportunity_Id,OpportunityStatus,StartDate from #tempOpportunity     
 --  UNION    
 --  Select OH.Opportunity_Id,OH.OpportunityStatus,OH.StartDate     
 --  FROM OpportunityHistory OH Inner JOin #tempOpportunity O ON OH.Opportunity_Id=O.Opportunity_Id     
 --  )T    
   IF OBJECT_ID('tempdb..#TempOpp') IS NOT NULL    
   DROP TABLE #TempOpp      
   CREATE TABLE #TempOpp  
   (  
   Opportunity_Id BigINT,  
   OpportunityStatus Varchar(200),  
   StartDate DATETIME  
   )  
    IF  @totalaging=30   
   BEGIN  
   Insert Into #TempOpp  
   SELECT Opportunity_Id,OpportunityStatus, CAST(MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME) AS 'StartDate' from #tempOpportunity     
   Insert Into #TempOpp  
   Select OH.Opportunity_Id,OH.OpportunityStatus,CAST(OH.MasterTags.value('(tags/StageDate/node())[1]','varchar(100)') AS DATETIME) AS 'StartDate'     
   FROM OpportunityHistory OH Inner JOin #tempOpportunity O ON OH.Opportunity_Id=O.Opportunity_Id     
   set @agingday=@totalaging  
   END  
   ELSE  
   BEGIN  
   Insert Into #TempOpp  
   SELECT Opportunity_Id,OpportunityStatus,StartDate from #tempOpportunity     
   Insert Into #TempOpp  
   Select OH.Opportunity_Id,OH.OpportunityStatus,OH.StartDate     
   FROM OpportunityHistory OH Inner JOin #tempOpportunity O ON OH.Opportunity_Id=O.Opportunity_Id     
   set @agingday=@totalaging  
   END  
       
       
   IF OBJECT_ID('tempdb..#TempOppRank') IS NOT NULL    
   DROP TABLE #TempOppRank    
   SELECT Opportunity_Id,OpportunityStatus,StartDate,    
   DENSE_RANK() OVER (PARTITION BY Opportunity_Id,OpportunityStatus ORDER BY StartDate) AS 'Rank' INTO #TempOppRank    
   FROM #TempOpp ORDER BY Opportunity_id     
       
       
   IF OBJECT_ID('tempdb..#TempOppRank2') IS NOT NULL    
   DROP TABLE #TempOppRank2    
   SELECT *,DENSE_RANK() OVER (PARTITION BY Opportunity_Id ORDER BY StartDate) AS 'Rank2' INTO #TempOppRank2 FROM #TempOppRank WHERE [RANK]=1    
      
       
      IF OBJECT_ID('tempdb..#TempOppAgingFiletr') IS NOT NULL    
   DROP TABLE #TempOppAgingFiletr    
   SELECT Distinct t1.*,DATEDIFF(D,t1.StartDate,isnull(t2.StartDate,getdate())) AS 'Aging'--,DATEDIFF(D,TB.UpdatedDTM,GETDATE()) AS 'TotalAging'     
   INTO #TempOppAgingFiletr FROM #TempOppRank2 t1 LEFT JOIN #TempOppRank2 t2 on t1.Opportunity_Id=t2.Opportunity_Id and t1.rank2=t2.rank2-1    
   LEFT JOIN (Select * from #TempOppRank2 where Rank2=1)TB ON t1.Opportunity_id=TB.Opportunity_id    
         
     IF OBJECT_ID('tempdb..#TempOppAging') IS NOT NULL    
   DROP TABLE #TempOppAging    
      SELECT * INTO #TempOppAging FROM #TempOppAgingFiletr     
      WHERE (@agingday IS NULL OR Aging >=@agingday)     
       
       
  IF OBJECT_ID('tempdb..#TempOppPivot') IS NOT NULL    
  DROP TABLE #TempOppPivot    
  SELECT * INTO #TempOppPivot FROM (SELECT Opportunity_id,OpportunityStatus,Aging FROM #TempOppAging) as Pv    
     PIVOT    
     (    
      SUM(Aging) FOR OpportunityStatus IN ([Initial Discussion],[Credit Analysis],[Credit Queries],[IM/CC Approved],[IC Approved],    
     [Documentation],[Accepted Sanction],[Modified IC Sanction],[Disbursement],[Dropped])    
     )P      
         
       IF OBJECT_ID('tempdb..#TempJAnalyst') IS NOT NULL    
   DROP TABLE #TempJAnalyst    
      SELECT DISTINCT Opportunity_Id,OT.T.value('@JuniorAnalystName', 'varchar(100)') AS 'JuniorAnalyst' INTO #TempJAnalyst    
   FROM #tempOpportunity  Outer apply OpenTags.nodes('//otag//tags//JuniorAnalystId') AS OT(T)    
       
   IF OBJECT_ID('tempdb..#TempSAnalyst') IS NOT NULL    
   DROP TABLE #TempSAnalyst    
      SELECT DISTINCT Opportunity_Id,OT.T.value('@SeniorAnalystName', 'varchar(100)') AS 'SeniorAnalyst' INTO #TempSAnalyst    
   FROM #tempOpportunity  Outer apply OpenTags.nodes('//otag//tags//SeniorAnalystId') AS OT(T)    
     
     
  IF OBJECT_ID('tempdb..#TempDialData') IS NOT NULL    
   DROP TABLE #TempDialData    
     SELECT ROW_NUMBER() OVER (ORDER BY OP.Opportunity_id) AS 'SrNo',OP.Opportunity_id,O.RM,O.RMName,O.ClientName AS 'Borrower_Name',JA.JuniorAnalyst AS 'Junior_Analyst',SA.SeniorAnalyst AS 'Senior_Analyst',O.OpportunityStatus AS 'Current_Stage',    
     (ISNULL(OP.[Initial Discussion],0)+ISNULL(OP.[Credit Analysis],0)+ISNULL(OP.[Credit Queries],0)+ISNULL(OP.[IM/CC Approved],0)+    
     ISNULL(OP.[IC Approved],0)+ISNULL(OP.[Documentation],0)+ISNULL(OP.[Accepted Sanction],0)+ISNULL(OP.[Modified IC Sanction],0)+    
     ISNULL(OP.[Disbursement],0)+ISNULL(OP.[Dropped],0)) AS 'TotalAging',O.OpportunityValue As 'Value',    
     ISNULL(OP.[Initial Discussion],0) AS 'Initial_Discussion_Aging',ISNULL(OP.[Credit Analysis],0) AS 'Credit_Analysis_Aging',    
     ISNULL(OP.[Credit Queries],0) AS 'Credit_Queries_Aging',ISNULL(OP.[IM/CC Approved],0) AS 'IMCC_Approved_Aging',ISNULL(OP.[IC Approved],0) AS 'IC_Approved_Aging',    
     ISNULL(OP.[Documentation],0) AS 'Documentation_Aging',ISNULL(OP.[Accepted Sanction],0) AS 'Accepted_Sanction_Aging',    
     ISNULL(OP.[Modified IC Sanction],0) AS 'Modified_IC_Sanction_Aging',ISNULL(OP.[Disbursement],0) AS 'Disbursement_Aging',ISNULL(OP.[Dropped],0) AS 'Dropped_Aging',    
     O.MasterTags.value('(tags/RiskCategory/node())[1]','varchar(100)') AS 'RiskCategory',(ISNULL(OP.[Dropped],0)+ISNULL(OP.[IM/CC Approved],0)+ISNULL(OP.[IC Approved],0)+  
  ISNULL(OP.[Disbursement],0)) AS 'icstatus' INTO #TempDialData    
     FROM #TempOppPivot OP LEFT JOIN #tempOpportunity O ON OP.Opportunity_Id=O.Opportunity_Id    
     LEFT JOIN (    
       SELECT Opportunity_Id,STUFF((SELECT ', ' + CAST(JuniorAnalyst AS VARCHAR(100)) [text()]    
         FROM #TempJAnalyst     
         WHERE Opportunity_Id = A.Opportunity_Id    
         FOR XML PATH(''), TYPE).value('.','NVARCHAR(MAX)'),1,2,' ') AS 'JuniorAnalyst'    
   FROM #TempJAnalyst A    
   GROUP BY Opportunity_Id    
     ) JA ON JA.Opportunity_Id=OP.Opportunity_Id    
     LEFT JOIN (    
  SELECT Opportunity_Id,STUFF((SELECT ', ' + CAST(SeniorAnalyst AS VARCHAR(100)) [text()]    
         FROM #TempSAnalyst     
         WHERE Opportunity_Id = A.Opportunity_Id    
         FOR XML PATH(''), TYPE).value('.','NVARCHAR(MAX)'),1,2,' ') AS 'SeniorAnalyst'    
   FROM #TempSAnalyst A    
   GROUP BY Opportunity_Id    
     )SA ON SA.Opportunity_Id=OP.Opportunity_Id     
         
     --SELECT * FROM #TempDialData WHERE (@totalaging IS NULL OR TotalAging >=@totalaging)    
     --AND (@icstatus IS NULL OR [icstatus] =@icstatus)    
     SELECT  Opportunity_id,RMName,ISNULL(Borrower_Name,'') AS 'Borrower_Name',ISNULL(RiskCategory,'') AS 'RiskCategory',CAST(ROUND([Value],0) AS BigINT)  AS 'Value',Current_Stage,RM,Junior_Analyst,Senior_Analyst,TotalAging,Initial_Discussion_Aging,    
  Credit_Analysis_Aging,Credit_Queries_Aging,IMCC_Approved_Aging,IC_Approved_Aging,Documentation_Aging,Accepted_Sanction_Aging,    
  Modified_IC_Sanction_Aging,Disbursement_Aging,Dropped_Aging,icstatus,SrNo FROM #TempDialData  WHERE (@totalaging IS NULL OR TotalAging >=@totalaging)    
  AND (@icstatus IS NULL OR [icstatus] =@icstatus)    
END     
    
  
  
  ---------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Get_Interactions]    Script Date: 04/10/2018 14:58:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[Get_Interactions]                                                                  
                                                                  
/***************************************************                                
*********************                                               
                                                            
 '     Object Name   : Get_Interactions                                                                                                                                                                                                                        
  
    
      
 '     Purpose       : Get interactions                                                                
 '     Author        : sagar patil                                                                                                                             
 '     Creation Date   : 30 dec 2014                                                                                                                                                                                                                           
  
    
      
 '     Code Change History  :                                                                                                                                                                                                                                  
  
    
      
 '     --------------------------------------------------------------------                                                                    
 '     CH#  | Modified Date |  Modified By     |  Purpose                                                    
 '     --------------------------------------------------------------------                                  
 '       1  |   30 dec 2014  | sagar patil     |                                                                                                                               
'     --------------------------------------------------------------------                                      
         2  |   15 MAY 2015  | sagar patil     |    Filter on the basis of MeetingPrivacy                                                                                                                           
 '     --------------------------------------------------------------------                                   
         3  |   16 jun 2015  | sagar patil     |   added filter for multi level hierarchy                                                                                                                           
 '     --------------------------------------------------------------------                                  
   4  |   30 jun 2015  | sagar patil     |   left join with lead                                                                                                                          
 '     --------------------------------------------------------------------                                    
    4  |  03 july 2015  | sagar patil     |   added  @clientsource  as filter                                                                                                                          
 '     --------------------------------------------------------------------                                  
                                                                   
 To test :-                                                                  
 -- [Get_Interactions] 16,1463,'<NewDataSet><showall><![CDATA[1]]></showall><outputtype><![CDATA[pivot]]>      
 </outputtype><pageindexno><![CDATA[1]]></pageindexno><recordcount><![CDATA[2147483646]]></recordcount><parenttype>      
 <![CDATA[client]]></parenttype><fromdate><![CDATA[28 mar 2017]]></fromdate><todate><![CDATA[28 apr 2017]]></todate>      
 <clienttype><![CDATA[cbm]]></clienttype></NewDataSet>'                   
 [Get_Interactions] 16,1463,      
 '<NewDataSet><showall><![CDATA[1]]></showall><outputtype><![CDATA[object]]></outputtype>      
 <pageindexno><![CDATA[1]]></pageindexno><recordcount><![CDATA[2147483646]]></recordcount><parenttype>      
 <![CDATA[client]]></parenttype><fromdate><![CDATA[28 mar 2017]]></fromdate><todate><![CDATA[28 apr 2017]]>      
 </todate></NewDataSet>'      
       
 [Get_Interactions] 20,3737,'<NewDataSet><business><![CDATA[fpd]]></business></NewDataSet>'         
  [Get_Interactions] 20,3737,'<NewDataSet><followupfromdate>23 Aug 2017 16:32</followupfromdate>
  <followuptodate>23 Aug 2017 16:33</followuptodate><sortcolumn>followup</sortcolumn><orderby>ASC</orderby></NewDataSet>'        
       
 --Select MasterTags.value('(tags/ClientSource/node())[1]','varchar(100)') as 'ClientSource',* from ClientMaster where Inst_Id =16                                                            
************************************************************************/                                                                   
@Inst_Id INT,@UserId int,@ParamXML xml                                                           
AS                                                                  
BEGIN                                                                                                      
 DECLARE @I INT,@inTime Datetime,@OutTime Datetime                            
 set @inTime=getdate()                                                 
     declare @ParamXMLNew xml      
   set  @ParamXMLNew= @ParamXML                                     
                                           
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXMLNew;                                                              
                                                               
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet', 2)                                                                              
 WITH                                             
  (    interactionid varchar(1000)                                                          
      ,interactiontype varchar(1000)                                                          
      ,interactionstatus varchar(1000)                                                          
      ,agenda varchar(1000)                                                          
      ,mom varchar(max)                                                          
      ,plannedmeetingflag varchar(1000)                                                          
      ,location  varchar(1000)                                                          
      ,pageindexno varchar(1000)                                                          
      ,recordcount varchar(1000)                                                          
      ,fromdate varchar(1000)                                                          
      ,todate varchar(1000)                                           
      ,parenttype varchar(1000)  -- CounterParty / Client                                                        
      ,parentid varchar(1000)                                                          
      ,participanttype varchar(1000)                                                          
      ,participantid varchar(1000)                                          
      ,approval varchar(1000)                                          
      ,approvalrequired varchar(1000)                                        
      ,isactive bit                                   
      ,orderby varchar(5)                            
      ,sortcolumn varchar(15)                            
      ,clientsource varchar(15)                            
      ,clientmeetingtype varchar(20)                      
      ,product varchar(max)      
      ,isscheduler varchar(10)      
      ,clienttype VARCHAR(50)  --Added By Deepak on 28 Apr 2017           
      ,relationtype varchar(100)--Added by pravin rane on 19-May-2017              
      ,business varchar(100)--Added by pravin rane on 19-May-2017         
      --,followupdate varchar(200)                                     
      --,isdetails bit
      ,followupfromdate VARCHAR(100)
      ,followuptodate VARCHAR(100)  
   ,mailsent varchar(5)
                                           
  )                                                                                                             
                                                                               
 EXEC sp_xml_removedocument @I;                                                     
          
 --SELECT * FROM #tbl_XML_Data                                                            
 DECLARE @InteractionId varchar(100),@InteractionType varchar(100),@InteractionStatus varchar(50),                                                              
  @Agenda Varchar(200), @mom Varchar(max)                                                
  ,@PlannedMeetingFlag varchar(50)                                                        
  ,@Location varchar(100), @PageIndexNo int, @recordCount int       
  ,@FromDate varchar(100),@ToDate varchar(100)               
  ,@ParentType varchar(50) , @ParentId bigint                                                        
  ,@ParticipantType varchar(50) , @ParticipantId int                        
  ,@IgnoreClientSecurity int ,@IgnoreCounterPartySecurity int,@approval varchar(20),@IgnoreContactSecurity   int                                       
  ,@approvalrequired varchar(10),@isactive bit--,@isdetails bit                                                        
  ,@orderby varchar(5),--@GeneralMetting varchar(15),@SpecialMetting varchar(15),                      
  @IsMeetingPrivacy INT ,                            
  @sortcolumn varchar(15),@clientsource varchar(15),@clientmeetingtype varchar(20)   ,@product varchar(max),      
  @isscheduler varchar(10),--Added by pravin rane on 15-July-2016                          
  @clienttype VARCHAR(50)      
  ,@relationtype varchar(100),@business varchar(100)--Added by pravin rane on 19-May-2017          
  --,@followupdate varchar(200) --Added by pravin rane on 04-Sept-2017                         
  ,@mailsent varchar(5),@followupfromdate VARCHAR(100),@followuptodate VARCHAR(100)                         
          
 --SET @GeneralMetting='General'                              
 --SET @SpecialMetting='Special'                                
 SET @IsMeetingPrivacy=0                               
 SELECT @IsMeetingPrivacy=COUNT(1) from FeatureMaster where Inst_Id=@Inst_Id AND FeatureId=6                              
                               
                                                               
 select @InteractionId=InteractionId,@InteractionType=InteractionType,  @InteractionStatus=interactionstatus,                                                          
  @Agenda=Agenda , @mom= mom                                                        
  ,@PlannedMeetingFlag=PlannedMeetingFlag                                      
  , @Location=Location ,@PageIndexNo=PageIndexNo,  @recordCount=recordCount                                                        
  ,@FromDate=FromDate,@ToDate=ToDate,@ParentType=ISNULL(ParentType,'')                      
   , @ParentId = ParentId                      
  ,@ParticipantType =ParticipantType , @ParticipantId =ParticipantId,@approval=approval,                                      
  @approvalrequired=approvalrequired,@isactive=isactive --,@isdetails=isdetails                                     
  ,@orderby = orderby,@sortcolumn=sortcolumn,@clientsource=clientsource,@clientmeetingtype=clientmeetingtype ,@product=product,      
    @isscheduler=isscheduler,   --Added by pravin rane on 15-July-2016        
    @clienttype=clienttype      
    , @relationtype=relationtype,@business=business --Added by pravin rane on 19-May-2017      
  -- ,@followupdate=@followupdate  --Added by pravin rane on 04-Sept-2017               
  ,@mailsent=CASE WHEN ISNULL(mailsent,'')='' THEN null ELSE mailsent END
  ,@followupfromdate=followupfromdate,@followuptodate=followuptodate
 
 from #tbl_XML_Data                                                              
    
   If Lower(@sortcolumn)='followup'
   BEGIN
	SET @sortcolumn='CONVERT(Datetime,MasterTags.value(''(tags/FollowUp/node())[1]'',''varchar(100)''))'
   END                 
              
        --Added by pravin rane on 23-Jan-2017(if fromdate and todate is null then display 2 months data.set fromdate=before 2 months date and todate=todays date      
                  
    if(ISNULL(@FromDate,'')='' and ISNULL(@InteractionId,'')='' and (@Inst_Id=4 or @Inst_Id=16 ))      
     begin       
     set @FromDate= DATEADD(month, -1, GETDATE())      
    end      
           
       if(ISNULL(@ToDate ,'')='' and ISNULL(@InteractionId,'')='' and (@Inst_Id=4 or @Inst_Id=16 ))      
     begin       
     set @ToDate=  GETDATE()+20      
     end      
          --End           
                                        
                      
  IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                               
    drop table #tbl_XML_Data                        
                                       
 IF(ISNULL(@PageIndexNo,0)=0)                                                          
 BEGIN                                                          
 set @PageIndexNo=1;                                                           
 END                                              
                                                           
IF(ISNULL(@recordCount,0)=0)                                                        
 BEGIN                                                          
 set @recordCount=500;                                                           
 END                                                          
                                               
                                                        
 select * into #Rowlevelsec                                                         
 from rowlevelsecurity                                                         
 where UserId=@UserId                                                         
 and ISNULL(AccessAllowed,0)=1 AND ISNULL(Inst_Id,0)=@Inst_Id                                                                  
             
-- select * from #Rowlevelsec                                      
                                                                     
 set @IgnoreClientSecurity=(select dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'Client',@Inst_Id))--(select IgnoreRowLevelSecurity from UserMaster where UserId=1)                                                              
 set @IgnoreCounterPartySecurity=(select dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'CounterParty',@Inst_Id))--(select IgnoreRowLevelSecurity from UserMaster where UserId=1)                                                              
  set @IgnoreContactSecurity=(select dbo.fun_IsIgnoreRowLevelSecurity(@UserId,'Contact',@Inst_Id))--Added by pravin rane on 02-Sept-2017                                                        
                                                       
  SELECT  distinct  ip.InteractionId INTO #InteractionParticipants                                                          
 from Interactions cm  with (nolock)                                                          
 inner join InteractionParticipants ip  with (nolock)        
 on cm.InteractionId = ip.InteractionId     and cm.Inst_Id=@Inst_Id and ip.Inst_Id=@Inst_Id      
 and ip.ParticipantType<>'user'                        
 left join InteractionParticipants UserPart with (nolock)  ---- as per discussion with sunil sir inner join replace with left join by 05-jan-2016           
 on cm.InteractionId = UserPart.InteractionId  and cm.Inst_Id=@Inst_Id and UserPart.Inst_Id=@Inst_Id         
 and UserPart.ParticipantType='user'              
 left join UserMaster um  with (nolock)          
 on ip.ParticipantId=um.UserId and ip.ParticipantType='User'  and um.Inst_Id=@Inst_Id                                
 left join Contacts c with (nolock)  on ip.ParticipantType='Contact' and ip.ParticipantId=c.Contact_Id  and c.Inst_Id=@Inst_Id                                                  
 left join Lead ld with (nolock)  on (ip.ParticipantId=ld.Lead_Id and ip.ParticipantType='Lead') OR (c.ParentType='Lead' and c.parentId=ld.Lead_Id)                                              
          
 left join ClientMaster CL with (nolock)                                                        
  on (ip.ParticipantType='Client' AND ip.ParticipantId = CL.Client_Id) and CL.Inst_Id=@Inst_Id  -- sagar                                                   
left join CounterParty CP   with (nolock)                                                      
  on (ip.ParticipantType='CounterParty' AND ip.ParticipantId = cp.CounterParty_Id ) and CP.Inst_Id=@Inst_Id     --vishnukanth                                                       
 where cm.Inst_Id = @Inst_Id                          
  AND                                                     
 -- (ISNULL(@InteractionType,ISNULL(cm.InteractionType,'')) =ISNULL(cm.InteractionType,''))                       
    (@InteractionType  IS NULL OR ISNULL(cm.InteractionType,'')=@InteractionType )                                                                    
   AND (@FromDate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.InteractionDTM,106)) >=convert(datetime,CONVERT(VARCHAR(11),@FromDate,106)))                                                            
   AND (@ToDate IS NULL OR convert(datetime,CONVERT(VARCHAR(11),cm.InteractionDTM,106)) <= convert(datetime,CONVERT(VARCHAR(11),@ToDate,106)))                                                             
  -- AND (ISNULL(@PlannedMeetingFlag,ISNULL(cm.PlannedMeetingFlag,'')) = ISNULL(cm.PlannedMeetingFlag,''))                      
        
  --Added By Pravin rane on 09-Aug-2016      
  AND (@InteractionStatus is null or ISNULL(cm.InteractionStatus,'')=@InteractionStatus )       
        
        
   --AND (@PlannedMeetingFlag IS NULL OR ISNULL(cm.PlannedMeetingFlag,'')=@PlannedMeetingFlag)                      
   --AND (                                                         
   -- @isscheduler IS null OR                                                        
   -- cast(cm.MasterTags.query('data(/tags/IsScheduler)')  as varchar(10))=@isscheduler                                        
   -- )        
        AND (@PlannedMeetingFlag IS NULL OR cm.PlannedMeetingFlag=@PlannedMeetingFlag)       
        
   --and cm.InteractionId =ISNULL(@InteractionId,cm.InteractionId)                       
   and (@InteractionId IS NULL OR cm.InteractionId =@InteractionId )        
     and (@mom is null or isnull(cm.MOM,'')=@mom) --Added By Pravin Rane on 07-Jan-2015                      
  -- AND (isnull(@ParticipantId,0) = 0 OR (ip.ParticipantId=@ParticipantId and ip.ParticipantType=@ParticipantType))                           
  -- as per UAT -- AND (@ParticipantId IS NULL OR (ip.ParticipantId=@ParticipantId and ip.ParticipantType=@ParticipantType))                      
                         
AND (CASE                       
  when ISNULL(@ParentType,'') = '' THEN 1                      
  when (@ParentType = c.ParentType and isnull(@ParentId,C.ParentId)=C.ParentId ) then 1                      
  when (@ParentType=ip.ParticipantType and ISNULL(@ParentId,ip.ParticipantId) =ip.ParticipantId )  then 1             
  -- as per UAT --when (@ParticipantType=ip.ParticipantType and ISNULL(@ParticipantId,ip.ParticipantId) =ip.ParticipantId )  then 1                                                 
  else 0                      
  end) = 1                      
          
AND (CASE                           
  when ISNULL(@ParticipantType,'') = '' THEN 1                          
  when (@ParticipantType=UserPart.ParticipantType and ISNULL(@ParticipantId,UserPart.ParticipantId) =UserPart.ParticipantId )  then 1      
  when (@ParticipantType=ip.ParticipantType and ISNULL(@ParticipantId,ip.ParticipantId) =ip.ParticipantId )  then 1 -- vishnukanth 23 Nov 2015 [To search interactions with Contactid.]      
  else 0                          
  end) = 1                                         
                       
 AND                       
 (                                                                         
    @approval IS null OR                                                                        
    cast(cm.MasterTags.query(                                                                          
    'data(/tags/Approval)')  as varchar(100))  like '%'+@approval+'%'                                                      
    )                                                     
   AND (                                                                         
    @approvalrequired IS null OR                                                                        
    cast(cm.MasterTags.query(                       
    'data(/tags/ApprovalRequired)')  as varchar(100))  like '%'+@approvalrequired+'%'                                                         
    )       
    AND      
    (LOWER(@clienttype) IS NULL OR LOWER(CAST(CL.MasterTags.query('data(/tags/ClientSource)')  as varchar(20)))=LOWER(@clienttype))  --Added BY Deepak on 28 Apr 2017      
            
    --AND                             
    --(                                                                         
    --@clientmeetingtype IS null OR                                                                   
    --cast(cm.MasterTags.query(                                                                          
    --'data(/tags/ClientMeetingType)')  as varchar(100))  like '%'+@clientmeetingtype+'%'                                                         
    --)              
                  
    AND                             
    (                                                                         
    @clientmeetingtype IS null OR                                                                        
    cast(cm.MasterTags.query(                                                                          
    'data(/tags/ClientMeetingType)')  as varchar(100))  =  @clientmeetingtype              
    )                            
    --vishnukanth 13 08 2015 product filter added                         
    AND                    
    (                    
    @product IS null OR                     
    CAST(cm.OpenTags.query(                    
    'data(/otag/tags/Product)')  as varchar(max))  like '%'+@product+'%'                                                       
    --CONVERT(varchar(max), CM.OpenTags.query('/otag/tags/Product'))  like '%' + @product + '%'                    
    )       
          
          
    --Added by pravin rane on 27-July-2016      
    -- AND                             
    --(                                                                         
    --@isscheduler IS null OR                                                                        
    --cast(cm.MasterTags.query(                                                                          
    --'data(/tags/IsScheduler)')  as varchar(100))  =  @isscheduler              
    --)        
          
          
        and         
         (              
        (@isscheduler is null or isnull(NULLIF(cast(cm.MasterTags.query('data(/tags/IsScheduler)')  as varchar(2)),''),0)=      
              
        case when @isscheduler=0 or @isscheduler='' then 0 else @isscheduler      
        end)      
        )      
        --Added by pravin rane on 19-May-2017      
         AND                             
    (                                                                         
    @relationtype IS null OR                                                                        
    cast(cm.MasterTags.query(                                                                          
    'data(/tags/RelationType)')  as varchar(100))  =  @relationtype              
    )       
          
     AND                             
    (                                                                         
    @business IS null OR                                                                        
    cast(cm.MasterTags.query(                                                                          
    'data(/tags/Business)')  as varchar(100))  =  @business              
    )        
    --AND((@mailsent IS NULL OR CAST(cm.MasterTags.query('data(/tags/MailSent)')  AS VARCHAR(5))=@mailsent) OR 
    --(CAST(cm.MasterTags.query('data(/tags/MailSent)')  AS VARCHAR(5))=CASE WHEN @mailsent='0' THEN '' ELSE '1' END))
        AND((@mailsent IS NULL OR CAST(cm.MasterTags.query('data(/tags/MailSent)')  AS VARCHAR(5))=@mailsent) OR 
    (CAST(cm.MasterTags.query('data(/tags/MailSent)')  AS VARCHAR(5))=CASE WHEN isnull(@mailsent,'0')='0' THEN '' ELSE '1' END))
	
	AND (@followupfromdate IS NULL OR CONVERT(DATETIME,cm.MasterTags.value('(tags/FollowUp/node())[1]','varchar(100)')) >=CONVERT(DATETIME,CONVERT(VARCHAR(25),@followupfromdate,121)))
	AND (@followuptodate IS NULL OR CONVERT(DATETIME,cm.MasterTags.value('(tags/FollowUp/node())[1]','varchar(100)')) <= CONVERT(DATETIME,CONVERT(VARCHAR(25),@followuptodate,121)))
	 --AND (                                                                         
  --  @PlannedMeetingFlag IS null OR                                                                        
  --  cm.MasterTags.value('(tags/PlannedMeetingFlag/node())[1]','varchar(50)')  =  @PlannedMeetingFlag              
  --  )  
    OPTION(RECOMPILE)      
          
                            
     -------------vishnukanth 13 08 2015 product filter added                           
 /*                            
 IF OBJECT_ID('tempdb..#InteractionParticipants') IS NOT NULL                                                         
    CREATE  INDEX IDXT_C_InteractionParticipants_InteractionId ON #InteractionParticipants(InteractionId)                             
   */                
   /*for to get users top to bottom hierarchy*/                    
   --sagar                      
 --;with CTE(ParentId,Id,INSTID) as (                            
 --select 0 as ParentId,CAST(@UserId as int) as Id,CAST(@Inst_Id as int) AS INSTID                            
 --union all                            
 --select CAST(UserMaster.UserId as int) as id,                            
 --CAST(UserMaster.UserId as int) as ParentId,                            
 --CAST(UserMaster.Inst_Id as int) as INSTID                            
 --from CTE                            
 --inner join UserMaster on UserMaster.ParentUserId=CTE.Id and UserMaster.Inst_Id=INSTID                            
                             
 --)                            
 --insert into #Rowlevelsec(UserId,ParentType,parentId,Inst_Id)                            
 --select @UserId,'User',Id,@Inst_Id from CTE                             
   --sagar                                          
--select * from #InteractionParticipants            
            
            
 DECLARE @IgnoreHierarchySecurity int          
 select @IgnoreHierarchySecurity=COUNT(1) from FeatureMaster where Inst_Id=@Inst_Id and FeatureId=7 and IsActive=1                      
                           
                             
select distinct ip.InteractionId INTO #InteractionParticipants1              
 from #InteractionParticipants tempip                            
 inner join InteractionParticipants ip with (nolock)  on tempip.InteractionId=ip.InteractionId            
 left join Contacts C on ip.ParticipantId=C.Contact_Id and ip.ParticipantType='Contact'      
  left join #Rowlevelsec rs             
 on (ip.ParticipantId =rs.parentId AND ip.ParticipantType =rs.ParentType)      
       
 ----- to be added after full checking      
 OR      
 (rs.parentId = c.parentid and c.parenttype=rs.ParentType)      
 ----- End of : to be added after full checking      
             
  where ip.Inst_Id=@Inst_Id                            
 and                             
  ((case when @IgnoreClientSecurity=1 then 1                  
    when @IgnoreClientSecurity=0           
and rs.parentId is not null then 1 end) =1                                                            
   )            
         
       --Added by pravin rane on 02-Sept-2017      
         AND(                                    
   (case when @IgnoreContactSecurity=1 then 1                                      
    when @IgnoreContactSecurity=0 and rs.parentId = ip.ParticipantId and rs.ParentType=ip.ParticipantType then 1 else 0      
     end) =1                                    
      )       
         
                   
     OPTION(RECOMPILE)                    
--             select * from #InteractionParticipants1            
                         
  IF OBJECT_ID('tempdb..#Rowlevelsec') IS NOT NULL                                                                                              
    drop table #Rowlevelsec                         
                         
  IF OBJECT_ID('tempdb..#InteractionParticipants') IS NOT NULL                                                                     
     drop table #InteractionParticipants                         
                          
  IF OBJECT_ID('tempdb..#InteractionParticipants1') IS NOT NULL                                                         
    CREATE  INDEX IDXT_C_InteractionParticipants1_InteractionId ON #InteractionParticipants1(InteractionId)                       
                                     
                                     
                                                 
                                                      
  select ROW_NUMBER() OVER (                      
  ORDER BY                        
   CASE WHEN @orderby IS NULL OR @sortcolumn IS NULL THEN cm.InteractionDTM END desc,                                    
    CASE WHEN @orderby = 'asc'  THEN cm.InteractionDTM END ASC,                                    
    CASE WHEN @orderby = 'desc' THEN cm.InteractionDTM END DESC                            
 ) AS RowIndex                                                  
  ,Isnull(cm.InteractionId,0) as InteractionId         
  ,Isnull(cm.InteractionType,'') as InteractionType                                                  
  ,Isnull(cm.InteractionDTM,'') as InteractionDTM                                                  
  ,Isnull(cm.Agenda,'') as Agenda                                                  
  ,Isnull(cm.Details,'') as Details                                                          
  ,Isnull(cm.PlannedMeetingFlag,0) as PlannedMeetingFlag                                                  
  ,Isnull(cm.Duration,'') as Duration                                                  
 ,Isnull(cm.InteractionStatus,'') as InteractionStatus                                                  
  ,Isnull(cm.MasterTags,'<tags></tags>') as MasterTags                                                  
  ,Isnull(cm.OpenTags,'<otag></otag>') as OpenTags                                                          
  ,Isnull(cm.UpdatedBy,0) as UpdatedBy                                                  
  ,Isnull(cm.UpdatedDTM,'') as UpdatedDTM                                                  
  ,Isnull(cm.Inst_Id,0) as Inst_Id                                                  
  ,Isnull(cm.IsIncoming,0) as IsIncoming                                      
  ,Isnull(cm.ParentInteractionId,0) as ParentInteractionId                                                        
  ,Isnull(cm.Location,'') as Location                                                  
  ,Isnull(cm.MOM,'')  as MOM                                          
  ,ISNULL(cm.IsActive,0) as IsActive                          
  ,ISNULL(tms.tagName,'') as InteractionTypeName                                                        
  into #interactions_new_asc                                              
  from Interactions cm  with (nolock)                                                  
  inner join #InteractionParticipants1 rs on cm.InteractionId =rs.InteractionId                           
  left join TagMaster tms with (nolock) on  tms.TagId=cm.InteractionType and tms.TagType='MeetingType'  and tms.Inst_Id=@Inst_Id          
    where   cm.Inst_Id=@Inst_Id                         
  ORDER BY                                     
   CASE WHEN @orderby IS NULL OR @sortcolumn IS NULL THEN cm.InteractionDTM END desc,                         
    --ISNULL(@orderby,'') = '' AND ISNULL(@sortcolumn,'') = ''                                     
    CASE WHEN @orderby = 'asc'  THEN cm.InteractionDTM END ASC,                                    
    CASE WHEN @orderby = 'desc' THEN cm.InteractionDTM END DESC                                                    
     OPTION(RECOMPILE)              
  IF OBJECT_ID('tempdb..#InteractionParticipants1') IS NOT NULL                                                                
     drop table #InteractionParticipants1                        
                            
  IF OBJECT_ID('tempdb..#interactions_new_asc') IS NOT NULL                                                         
    CREATE  INDEX IDXT_C_interactions_new_asc_InteractionId ON #interactions_new_asc(RowIndex)                                                           
                                                        
 SELECT *                                                          
 FROM #interactions_new_asc                                                          
 WHERE RowIndex                                                       
BETWEEN (1+ (@PageIndexNo * @recordCount))-@recordCount        
 AND @PageIndexNo * @recordCount                                                        
  OPTION(RECOMPILE)                                                       
                                                         
 SELECT                                                               
   CASE                                                               
   WHEN CEILING(CONVERT(float,COUNT(1))/@recordCount)=0 THEN 1                                                               
   ELSE CEILING(CONVERT(float,COUNT(1))/@recordCount) END AS NoOfPages,(@PageIndexNo) as CurrentPage                                                               
   from #interactions_new_asc                                                         
                                                      
                                       
  IF OBJECT_ID('tempdb..#Rowlevelsec') IS NOT NULL                                                                                              
    drop table #Rowlevelsec                                                                                  
  IF OBJECT_ID('tempdb..#tbl_XML_Data') IS NOT NULL                                                                            
    drop table #tbl_XML_Data                                                 
  IF OBJECT_ID('tempdb..#InteractionParticipants') IS NOT NULL                                         
    drop table #InteractionParticipants                                                      
  IF OBJECT_ID('tempdb..#interactions_new_asc') IS NOT NULL                                                                            
    drop table #interactions_new_asc                           
  IF OBJECT_ID('tempdb..#InteractionParticipants1') IS NOT NULL                                                                            
    drop table #InteractionParticipants1                                                            
             
    set @OutTime=getdate()                                                     
  insert into spExecutionTime values ('Get_Interactions',@inTime,@OutTime,@ParamXMLNew)                        
                        
                        
                        
                                                  
                                                                    
  END

------------------------------------------------------------------------------------------
USE [Exponentia_UAT]
GO
/****** Object:  StoredProcedure [dbo].[Get_InteractionParticipants]    Script Date: 04/10/2018 14:58:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[Get_InteractionParticipants]                   
                            
/************************************************************************                                                                                                                                                                                      
  
    
    
      
        
          
            
              
                     
 '     Object Name   : Get_InteractionParticipants                                                                                                                                                                                           
 '     Purpose       : Get InteractionParticipants                         
 '     Author        : sagar patil                                                                                       
 '     Creation Date   : 30 dec 2014                                                                                                                                                                                                               
 '     Code Change History  :                                                                                                                                                                                                                 
 '     --------------------------------------------------------------------                       
 '     CH#  | Modified Date |  Modified By     |  Purpose                                                                                                                                                                                                      
  
    
    
      
        
          
           
 '     --------------------------------------------------------------------                             
 '       1  |   30 dec 2014  | sagar patil     |                                                                                         
 '     --------------------------------------------------------------------                       
  2   |  14 jan 2014   | sagar patil     | row level security has been removed ,                       
             it need to be checked in previous operation                
  3   |  27 Aug 2015   | vishnukanth     | Branch removed.              
 '     --------------------------------------------------------------------        
 '4   | 27 May 2016    | Pravin Rane    | add lead_id as parentid where partiicipanttype='contact'    
       ----------------------------------------------------------------------         
                                                                                                                                                                                                  
      
        
          
         [Get_InteractionParticipants] 4,111,'<NewDataSet><Table1>    
          <RowIndex>1</RowIndex>                  
    <InteractionId>1037</InteractionId>                  
    <InteractionType>0</InteractionType>     
    </Table1>                  
   </NewDataSet>'                
              
                     
                          
                            
                             
 To test :-                            
 -- [Get_InteractionParticipants] 1,2,'<NewDataSet>                      
  <Table1>                  
    <RowIndex>1</RowIndex>                  
    <InteractionId>56</InteractionId>                  
    <InteractionType>0</InteractionType>                  
    <InteractionDTM>2015-03-05T10:55:00+05:30</InteractionDTM>                  
    <Agenda>pma</Agenda>                  
    <Details>ssssss</Details>                  
    <PlannedMeetingFlag>0</PlannedMeetingFlag>                  
    <Duration />                  
    <InteractionStatus>Open</InteractionStatus>                  
    <OpenTags>&lt;otag&gt;&lt;tags type="DiscussionPoints" /&gt;&lt;tags type="Products" /&gt;&lt;/otag&gt;</OpenTags>                  
    <UpdatedBy>2</UpdatedBy>                  
    <UpdatedDTM>2015-02-25T12:18:18.837+05:30</UpdatedDTM>                  
    <Inst_Id>1</Inst_Id>                  
    <IsIncoming>0</IsIncoming>                  
    <ParentInteractionId>0</ParentInteractionId>                  
    <Location />                  
    <MOM />                  
    <PresentationType />                  
    <FollowUp>2015-03-15</FollowUp>                  
 <ConsultantName />                  
    <LevelOfInterest>Not Interested</LevelOfInterest>                  
    <MeetingType>Sales</MeetingType>                  
  </Table1>                  
  <Table1>                  
    <RowIndex>2</RowIndex>                  
    <InteractionId>57</InteractionId>                  
    <InteractionType>0</InteractionType>                  
    <InteractionDTM>2015-03-05T10:55:00+05:30</InteractionDTM>                  
    <Agenda>dsasfdsdfaasdfasdfasdfasdfasdfdsaf</Agenda>                  
    <Details>subject</Details>                  
    <PlannedMeetingFlag>0</PlannedMeetingFlag>                  
    <Duration />                  
    <InteractionStatus>Open</InteractionStatus>                  
    <OpenTags>&lt;otag&gt;&lt;tags type="DiscussionPoints"&gt;&lt;DiscussionPoints&gt;India Macro&lt;/DiscussionPoints&gt;&lt;/tags&gt;&lt;tags type="Products" /&gt;&lt;/otag&gt;</OpenTags>                  
    <UpdatedBy>2</UpdatedBy>                  
    <UpdatedDTM>2015-02-25T12:21:23.25+05:30</UpdatedDTM>                  
    <Inst_Id>1</Inst_Id>                  
    <IsIncoming>0</IsIncoming>                  
    <ParentInteractionId>0</ParentInteractionId>                  
    <Location />                  
    <MOM />                  
    <PresentationType>Formal</PresentationType>                  
    <FollowUp>2015-03-15</FollowUp>                  
    <ConsultantName />                  
    <LevelOfInterest>Not Interested</LevelOfInterest>                  
    <MeetingType>Sales</MeetingType>                  
  </Table1>                  
  <Table1>                  
    <RowIndex>3</RowIndex>                  
    <InteractionId>67</InteractionId>                  
    <InteractionType>96</InteractionType>                  
    <InteractionDTM>2015-02-28T14:59:00+05:30</InteractionDTM>                  
    <Agenda>pma</Agenda>                  
    <Details>Meeting for Loan Discussion</Details>                  
    <PlannedMeetingFlag>0</PlannedMeetingFlag>                  
    <Duration />                  
    <InteractionStatus>Open</InteractionStatus>                  
    <OpenTags>&lt;otag&gt;&lt;tags type="DiscussionPoints" /&gt;&lt;tags type="Products" /&gt;&lt;/otag&gt;</OpenTags>                  
    <UpdatedBy>2</UpdatedBy>                  
    <UpdatedDTM>2015-02-25T15:00:30.037+05:30</UpdatedDTM>                  
    <Inst_Id>1</Inst_Id>                  
    <IsIncoming>0</IsIncoming>                  
    <ParentInteractionId>0</ParentInteractionId>                  
    <Location />                  
    <MOM>momomo</MOM>                  
    <PresentationType>Formal</PresentationType>                  
    <FollowUp>28-Feb-15 15:00</FollowUp>                  
    <ConsultantName>neelyog </ConsultantName>                  
    <LevelOfInterest>Moderately Interested</LevelOfInterest>                  
    <MeetingType>Sales</MeetingType>                  
  </Table1>                  
</NewDataSet>'      
    
    
                          
                            
************************************************************************/                             
                           
@Inst_Id INT,@UserId int,@ParamXML xml                            
AS                            
BEGIN                             
                        
                            
                            
 DECLARE @I INT                                                                 
                                       
    EXEC sp_xml_preparedocument @I OUTPUT, @ParamXML;                            
                             
 SELECT *  INTO #tbl_XML_Data  FROM OPENXML (@I, 'NewDataSet/Table1', 2)                                            
 WITH            
  (    InteractionId VARCHAR(1000)                        
    --  ,ParticipantType VARCHAR(1000)                        
    --  ,ParticipantId VARCHAR(1000)                        
    --  ,AttendedFlag VARCHAR(1000)                        
  )                                                                                                                           
                                             
 EXEC sp_xml_removedocument @I;                              
                             
--select * from #tbl_XML_Data                      
                        
                         
   /****row level security has been removed , it need to be checked in previous operation*/                      
                              
 --select * into #Rowlevelsec from rowlevelsecurity where ParentType=@ParticipantType AND UserId=@UserId and ISNULL(AccessAllowed,0)=1 AND ISNULL(Inst_Id,0)=@Inst_Id                                
                                   
 --set @IgnoreSecurity=(select dbo.fun_IsIgnoreRowLevelSecurity(@UserId,@ParticipantType,@Inst_Id))--(select IgnoreRowLevelSecurity from UserMaster where UserId=1)                            
         
        
              
              
           
 select                   
 isnull(ip.InteractionId,0) As InteractionId                  
 ,ISNULL(ip.AttendedFlag,0) AS AttendedFlag                  
 ,ISNULL(ip.ParticipantId,0) as ParticipantId                  
 ,ISNULL(ip.ParticipantType,'') as ParticipantType                  
 ,ISNULL(cm.LeadName,'') as participantName                  
 ,ISNULL(cm.Lead_Id,0) as Id                  
 ,'' as BranchName                  
 ,ISNULL(cm.Type,'') as parentType                  
 ,'' AS ParentName--,ct.ContactName as parentname                        
  ,0 as BranchId                  
  ,0 as ParentID      
  -- ,isnull(Contact_Id,0) as ParentID                 
  ,'' as Designation     
    
  from Lead cm                         
  inner join InteractionParticipants ip on cm.Lead_Id=ip.ParticipantId                        
  inner join #tbl_XML_Data td on ip.InteractionId=td.InteractionId          
 -- left join Contacts ct on  ct.Contact_Id =ip.ParticipantId AND ct.ParentType='Lead'  and ip.ParticipantType='contact'                       
  where ip.Inst_Id=@Inst_Id                                
   AND ip.ParticipantType='Lead'                         
                           
                          
  UNION                                              
                           
                       
 select                   
 isnull(ip.InteractionId,0) As InteractionId                  
 ,ISNULL(ip.AttendedFlag,0) AS AttendedFlag                  
 ,ISNULL(ip.ParticipantId,0) as ParticipantId                  
 ,ISNULL(ip.ParticipantType,'') as ParticipantType                  
 ,ISNULL(cm.Name,'') as participantName                  
 ,ISNULL(cm.CounterParty_Id,0) as Id                  
 ,'' as BranchName                  
 ,ISNULL(cm.Type,'') as parentType                  
 ,'' AS ParentName--,ct.ContactName as parentname                        
  ,0 as BranchId                  
  ,0 as ParentID         
 -- ,isnull(cm.CounterParty_Id,0)  as ParentID                
  ,'' as Designation       
         
  from CounterParty cm                         
  inner join InteractionParticipants ip on cm.CounterParty_Id=ip.ParticipantId                        
  inner join #tbl_XML_Data td on ip.InteractionId=td.InteractionId                          
  --left join Contacts ct on  cm.CounterParty_Id =ct.parentId AND ct.ParentType='CounterParty'                         
  where ip.Inst_Id=@Inst_Id                                
   AND ip.ParticipantType='CounterParty'          
                           
                          
  UNION                         
                           
  select                   
  isnull(ip.InteractionId,0) As InteractionId                  
 ,ISNULL(ip.AttendedFlag,0) AS AttendedFlag                  
 ,ISNULL(ip.ParticipantId,0) as ParticipantId                  
 ,ISNULL(ip.ParticipantType,'') as ParticipantType                  
  ,ISNULL(cm.ClientName,'') as participantName                 
  ,ISNULL(cm.Client_Id,0) as Id                  
  ,'' as BranchName                  
  ,ISNULL(cm.Type,'') as parentType                  
 ,'' AS ParentName--,ct.ContactName as parentname                        
  ,0 as BranchId                  
  ,0 as ParentID                  
  -- ,ISNULL(cm.Client_Id,0) as ParentID          
  ,'' as Designation        
      
      
                       
  from ClientMaster cm                          
   inner join InteractionParticipants ip on cm.Client_Id=ip.ParticipantId                        
   inner join #tbl_XML_Data td on ip.InteractionId=td.InteractionId                         
   --left join Contacts ct on  cm.Client_Id =ct.parentId AND ct.ParentType='Client'                              
  where cm.Inst_Id=@Inst_Id                            
   AND ip.ParticipantType='Client'                        
                            
                           
   UNION                        
                           
 --select InteractionId,ISNULL(AttendedFlag,0) AS AttendedFlag,ParticipantId,ParticipantType                      
 --,r.ContactName as participantName,Id                      
 --, ISNULL(r.BranchName,'') as BranchName                      
 --,ParentType,'' AS ParentName                        
                    
 select                    
 isnull(ip.InteractionId,0) As InteractionId                  
 ,ISNULL(ip.AttendedFlag,0) AS AttendedFlag                  
 ,ISNULL(ip.ParticipantId,0) as ParticipantId                  
 ,ISNULL(ip.ParticipantType,'') as ParticipantType                  
 ,case ip.ParticipantType when 'Contact' then isnull(c.ContactName,'')                      
  when 'Client' then isnull(CL.ClientName,'')                      
  when 'CounterParty' then isnull(CP.Name,'') end as participantName                  
  ,Isnull(ip.ParticipantId,0) as Id                  
  --,ISNULL(br.BranchName,'') as BranchName               
  ,  
  --Start of section added by Awadha on 11 Aug 2017 for handling Branch  
  case ip.ParticipantType when 'Contact' then isnull(cast(c.MasterTags.query('data(//tags/BranchName)') as varchar(1000)) ,'')                    
  when 'Client' then isnull(cast(CL.MasterTags.query('data(//tags/BranchName)') as varchar(1000)) ,'')  
  when 'CounterParty' then isnull(cast(CP.MasterTags.query('data(//tags/BranchName)') as varchar(1000)) ,'')   
  when 'Lead' then isnull(cast(L.MasterTags.query('data(//tags/BranchName)') as varchar(1000)) ,'')   
  end as BranchName  
  --End of section added by Awadha on 11 Aug 2017 for handling Branch  
    
  ,isnull(c.ParentType,''),                      
 --case ip.ParticipantType when 'Contact' then isnull(CL.ClientName,isnull(CP.Name,'')) end as ParentName           
 --case ip.ParticipantType when 'Contact' then isnull(CL.ClientName, isnull(L.LeadName,'')) end as ParentName    -- vishnukanth 16 Oct 2015                             
 case ip.ParticipantType when 'Contact' then isnull(CL.ClientName,  isnull(CP.Name,isnull(L.LeadName,''))) end as ParentName    -- vishnukanth 16 Oct 2015                             
 --,isnull(Br.Branch_Id,0)              
 ,  
   
 --Start of section added by Awadha on 11 Aug 2017 for handling Branch  
  case ip.ParticipantType when 'Contact' then isnull(cast(c.MasterTags.query('data(//tags/BranchId)') as varchar(1000)) ,'')                    
  when 'Client' then isnull(cast(CL.MasterTags.query('data(//tags/BranchId)') as varchar(1000)) ,'')  
  when 'CounterParty' then isnull(cast(CP.MasterTags.query('data(//tags/BranchId)') as varchar(1000)) ,'')   
  when 'Lead' then isnull(cast(L.MasterTags.query('data(//tags/BranchId)') as varchar(1000)) ,'')   
  end as BranchId  
  --End of section added by Awadha on 11 Aug 2017 for handling Branch  
   
 ,isnull(CL.Client_Id,isnull(L.Lead_Id,isnull(cp.CounterParty_Id,0))) as  ParentId                   
 ,isnull(c.Designation,'') as Designation          
     
     
      
                    
 from InteractionParticipants ip                        
 inner join #tbl_XML_Data td on ip.InteractionId=td.InteractionId                        
 inner join Contacts c on ip.ParticipantId=c.Contact_Id and ip.ParticipantType='Contact'                              
                       
 --left join BranchMaster Br on c.parentId=Br.Branch_Id and c.ParentType='Branch'                       
                      
 left join ClientMaster CL  on --(Br.ParentId=CL.Client_Id and Br.ParentType='Client') OR                      
  (c.ParentType = 'Client' and c.parentId=CL.Client_Id)                      
         
  left join Lead L  on                                        --vishnukanth 16 Oct 2015        
  (C.ParentType = 'Lead' and c.parentId=L.Lead_Id)          
                       
 left join CounterParty CP                      
  on --(Br.ParentId=CP.CounterParty_Id and br.ParentType='CounterParty') OR                      
  (c.ParentType = 'CounterParty' and c.parentId=cp.CounterParty_Id)                     
                           
        UNION                      
                         
        SELECT                    
        distinct isnull(I.InteractionId,0) as InteractionId                  
        ,ISNULL(AttendedFlag,0) AS AttendedFlag                  
        ,isnull(ParticipantId,0) as ParticipantId                  
        ,isnull(ParticipantType,'') as ParticipantType                  
        ,isnull(U.UserName,'') AS participantName                   
        ,isnull(U.UserId,0) AS Id                  
        --,''  as BranchName                  
        ,isnull(cast(MasterTags.query                      
    ('data(//tags/Branch)') as varchar(1000)) ,'') as BranchName                
                        
        ,''AS ParentType                  
        ,'' AS ParentName                  
        ,0 as BranchId, 0 as ParentID                  
        ,isnull(cast(MasterTags.query                      
    ('data(//tags/Designation)') as varchar(1000)) ,'') as Designation     
                 
      
                            
 from InteractionParticipants I                       
 INNER JOIN UserMaster U ON U.UserId=I.ParticipantId AND I.ParticipantType='USER'                        
 INNER JOIN #tbl_XML_Data X ON X.InteractionId=I.InteractionId                      
                        
                       
 -- drop table #Rowlevelsec                            
  drop table #tbl_XML_Data                            
                             
                           
                              
  END     